/* Generated by Cython 0.20dev on Mon Nov 23 14:25:29 2015 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#define CYTHON_ABI "0_20dev"
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY
#define Py_OptimizeFlag 0
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_As_int(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_TPFLAGS_HAVE_VERSION_TAG 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#define __Pyx_PyUnicode_Format(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#define __Pyx_PyUnicode_Concat(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
    PyNumber_Add(a, b) : PyUnicode_Concat(a, b))
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj) || \
                                         PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__yaff__pes__ext
#define __PYX_HAVE_API__yaff__pes__ext
#include "string.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "cell.h"
#include "nlist.h"
#include "truncation.h"
#include "switchon.h"
#include "slater.h"
#include "pair_pot.h"
#include "ewald.h"
#include "dlist.h"
#include "iclist.h"
#include "vlist.h"
#include "grid.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((char*)s)
#define __Pyx_PyByteArray_FromUString(s)   __Pyx_PyByteArray_FromString((char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return u_end - u - 1;
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    if (strcmp(PyBytes_AsString(default_encoding), "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        const char* default_encoding_c = PyBytes_AS_STRING(default_encoding);
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (ascii_chars_u == NULL) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (ascii_chars_b == NULL || strncmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
    }
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    default_encoding_c = PyBytes_AS_STRING(default_encoding);
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(sys);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "ext.pyx",
  "__init__.pxd",
  "type.pxd",
};
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name; /* for error messages only */
  struct __Pyx_StructField_* fields;
  size_t size;     /* sizeof(type) */
  size_t arraysize[8]; /* length of array in each dimension */
  int ndim;
  char typegroup; /* _R_eal, _C_omplex, Signed _I_nt, _U_nsigned int, _S_truct, _P_ointer, _O_bject, c_H_ar */
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":723
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":724
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":725
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":726
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":730
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":731
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":732
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":733
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":737
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":738
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":747
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":748
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":749
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":752
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":756
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":758
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":759
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_4yaff_3pes_3ext_PairPot;
struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ;
struct __pyx_obj_4yaff_3pes_3ext_Truncation;
struct __pyx_obj_4yaff_3pes_3ext_Hammer;
struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3;
struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;
struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip;
struct __pyx_obj_4yaff_3pes_3ext_SwitchOn;
struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction;
struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross;
struct __pyx_obj_4yaff_3pes_3ext_Cell;
struct __pyx_obj_4yaff_3pes_3ext_PairPotEI;
struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s;
struct __pyx_obj_4yaff_3pes_3ext_Switch3;
struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp;
struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;
struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep;
struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme;
struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp;
struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":763
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "yaff/pes/ext.pyx":761
 * 
 * 
 * cdef class PairPot:             # <<<<<<<<<<<<<<
 *     '''Base class for the pair potentials'''
 *     cdef pair_pot.pair_pot_type* _c_pair_pot
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPot {
  PyObject_HEAD
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot *__pyx_vtab;
  pair_pot_type *_c_pair_pot;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *tr;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *sw;
  long _c_hsize;
};


/* "yaff/pes/ext.pyx":880
 * 
 * 
 * cdef class PairPotLJ(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Lennard-Jones pair potential:
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_sigmas;
  PyArrayObject *_c_epsilons;
};


/* "yaff/pes/ext.pyx":616
 * 
 * 
 * cdef class Truncation:             # <<<<<<<<<<<<<<
 *     '''Base class for truncation schemes of pairwise interactions'''
 *     cdef truncation.trunc_scheme_type* _c_trunc_scheme
 */
struct __pyx_obj_4yaff_3pes_3ext_Truncation {
  PyObject_HEAD
  trunc_scheme_type *_c_trunc_scheme;
};


/* "yaff/pes/ext.pyx":644
 * 
 * 
 * cdef class Hammer(Truncation):             # <<<<<<<<<<<<<<
 *     r'''An old-fashioned and poor truncation scheme.
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_Hammer {
  struct __pyx_obj_4yaff_3pes_3ext_Truncation __pyx_base;
};


/* "yaff/pes/ext.pyx":956
 * 
 * 
 * cdef class PairPotMM3(PairPot):             # <<<<<<<<<<<<<<
 *     r'''The MM3 version of the Lennard-Jones pair potential
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_sigmas;
  PyArrayObject *_c_epsilons;
  PyArrayObject *_c_onlypaulis;
};


/* "yaff/pes/ext.pyx":1834
 * 
 * 
 * cdef class PairPotEiSlater1s1sCorr(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Electrostatic interaction between sites with a point core charge and a
 *         1s Slater charge density MINUS the electrostatic interaction between
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_slater1s_widths;
  PyArrayObject *_c_slater1s_N;
  PyArrayObject *_c_slater1s_Z;
};


/* "yaff/pes/ext.pyx":1735
 * 
 * 
 * cdef class PairPotEIDip(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Short-range contribution to the electrostatic interaction between point charges
 *         and point dipoles.
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_charges;
  PyArrayObject *_c_dipoles;
  PyArrayObject *_c_radii;
  PyArrayObject *_c_radii2;
};


/* "yaff/pes/ext.pyx":720
 * 
 * 
 * cdef class SwitchOn:             # <<<<<<<<<<<<<<
 *     '''Base class for smoothly switching on of pairwise interactions'''
 *     cdef switchon.switchon_type* _c_switchon
 */
struct __pyx_obj_4yaff_3pes_3ext_SwitchOn {
  PyObject_HEAD
  switchon_type *_c_switchon;
};


/* "yaff/pes/ext.pyx":734
 * 
 * 
 * cdef class SwitchErrorFunction(SwitchOn):             # <<<<<<<<<<<<<<
 *     r'''This switching scheme can be used to smoothly switch on a
 *         pairwise-potential by multiplying it with an error function. Similar
 */
struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction {
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn __pyx_base;
  PyArrayObject *_c_radii;
};


/* "yaff/pes/ext.pyx":1244
 * 
 * 
 * cdef class PairPotLJCross(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Lennard Jones with explicit cross parameters.
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  long _c_nffatype;
  PyArrayObject *_c_eps_cross;
  PyArrayObject *_c_sig_cross;
};


/* "yaff/pes/ext.pyx":67
 * #
 * 
 * cdef class Cell:             # <<<<<<<<<<<<<<
 *     '''Representation of periodic boundary conditions.
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_Cell {
  PyObject_HEAD
  cell_type *_c_cell;
};


/* "yaff/pes/ext.pyx":1645
 * 
 * 
 * cdef class PairPotEI(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Short-range contribution to the electrostatic interaction between point charges
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotEI {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_charges;
  PyArrayObject *_c_radii;
};


/* "yaff/pes/ext.pyx":2025
 * 
 * 
 * cdef class PairPotOlpSlater1s1s(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Overlap between two Slater 1s densities. This can for instance be used
 *         to represent an exchange energy by defining a suitable scaling factor
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_slater1s_widths;
  PyArrayObject *_c_slater1s_N;
};


/* "yaff/pes/ext.pyx":679
 * 
 * 
 * cdef class Switch3(Truncation):             # <<<<<<<<<<<<<<
 *     r'''A simple and good truncation scheme.
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_Switch3 {
  struct __pyx_obj_4yaff_3pes_3ext_Truncation __pyx_base;
};


/* "yaff/pes/ext.pyx":1474
 * 
 * 
 * cdef class PairPotDisp68BJDamp(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Dispersion term with r^-6 and r^-8 term and Becke-Johnson damping
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  long _c_nffatype;
  PyArrayObject *_c_c6_cross;
  PyArrayObject *_c_c8_cross;
  PyArrayObject *_c_R_cross;
};


/* "yaff/pes/ext.pyx":2133
 * 
 * 
 * cdef class PairPotChargeTransferSlater1s1s(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Model for charge transfer energy proportional to the overlap of two 1s
 *         Slater densities and a certain power of the product of Slater widths:
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_slater1s_widths;
  PyArrayObject *_c_slater1s_N;
};


/* "yaff/pes/ext.pyx":1084
 * 
 * 
 * cdef class PairPotExpRep(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Exponential repulsion
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  long _c_nffatype;
  PyArrayObject *_c_ffatype_ids;
  PyArrayObject *_c_amp_cross;
  PyArrayObject *_c_b_cross;
};


/* "yaff/pes/ext.pyx":1046
 * 
 * 
 * cdef class PairPotGrimme(PairPot):             # <<<<<<<<<<<<<<
 *     cdef np.ndarray _c_r0
 *     cdef np.ndarray _c_c6
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_r0;
  PyArrayObject *_c_c6;
};


/* "yaff/pes/ext.pyx":1334
 * 
 * 
 * cdef class PairPotDampDisp(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Damped dispersion interaction
 * 
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  long _c_nffatype;
  PyArrayObject *_c_c6_cross;
  PyArrayObject *_c_b_cross;
};


/* "yaff/pes/ext.pyx":1910
 * 
 * 
 * cdef class PairPotEiSlater1sp1spCorr(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Electrostatic interaction between sites with a point charge, a
 *         1s Slater charge density, a point dipole and a 1p Slater charge density
 */
struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot __pyx_base;
  PyArrayObject *_c_slater1s_widths;
  PyArrayObject *_c_slater1s_N;
  PyArrayObject *_c_slater1s_Z;
  PyArrayObject *_c_slater1p_widths;
  PyArrayObject *_c_slater1p_N;
  PyArrayObject *_c_slater1p_Z;
};



/* "yaff/pes/ext.pyx":761
 * 
 * 
 * cdef class PairPot:             # <<<<<<<<<<<<<<
 *     '''Base class for the pair potentials'''
 *     cdef pair_pot.pair_pot_type* _c_pair_pot
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot {
  PyObject *(*set_truncation)(struct __pyx_obj_4yaff_3pes_3ext_PairPot *, struct __pyx_obj_4yaff_3pes_3ext_Truncation *);
  PyObject *(*set_switchon)(struct __pyx_obj_4yaff_3pes_3ext_PairPot *, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *);
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;


/* "yaff/pes/ext.pyx":1046
 * 
 * 
 * cdef class PairPotGrimme(PairPot):             # <<<<<<<<<<<<<<
 *     cdef np.ndarray _c_r0
 *     cdef np.ndarray _c_c6
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotGrimme {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotGrimme *__pyx_vtabptr_4yaff_3pes_3ext_PairPotGrimme;


/* "yaff/pes/ext.pyx":1645
 * 
 * 
 * cdef class PairPotEI(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Short-range contribution to the electrostatic interaction between point charges
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEI {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEI *__pyx_vtabptr_4yaff_3pes_3ext_PairPotEI;


/* "yaff/pes/ext.pyx":1735
 * 
 * 
 * cdef class PairPotEIDip(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Short-range contribution to the electrostatic interaction between point charges
 *         and point dipoles.
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEIDip {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEIDip *__pyx_vtabptr_4yaff_3pes_3ext_PairPotEIDip;


/* "yaff/pes/ext.pyx":956
 * 
 * 
 * cdef class PairPotMM3(PairPot):             # <<<<<<<<<<<<<<
 *     r'''The MM3 version of the Lennard-Jones pair potential
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotMM3 {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotMM3 *__pyx_vtabptr_4yaff_3pes_3ext_PairPotMM3;


/* "yaff/pes/ext.pyx":1834
 * 
 * 
 * cdef class PairPotEiSlater1s1sCorr(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Electrostatic interaction between sites with a point core charge and a
 *         1s Slater charge density MINUS the electrostatic interaction between
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;


/* "yaff/pes/ext.pyx":1474
 * 
 * 
 * cdef class PairPotDisp68BJDamp(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Dispersion term with r^-6 and r^-8 term and Becke-Johnson damping
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDisp68BJDamp {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_vtabptr_4yaff_3pes_3ext_PairPotDisp68BJDamp;


/* "yaff/pes/ext.pyx":2133
 * 
 * 
 * cdef class PairPotChargeTransferSlater1s1s(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Model for charge transfer energy proportional to the overlap of two 1s
 *         Slater densities and a certain power of the product of Slater widths:
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_vtabptr_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;


/* "yaff/pes/ext.pyx":1334
 * 
 * 
 * cdef class PairPotDampDisp(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Damped dispersion interaction
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDampDisp {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDampDisp *__pyx_vtabptr_4yaff_3pes_3ext_PairPotDampDisp;


/* "yaff/pes/ext.pyx":2025
 * 
 * 
 * cdef class PairPotOlpSlater1s1s(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Overlap between two Slater 1s densities. This can for instance be used
 *         to represent an exchange energy by defining a suitable scaling factor
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotOlpSlater1s1s {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_vtabptr_4yaff_3pes_3ext_PairPotOlpSlater1s1s;


/* "yaff/pes/ext.pyx":1084
 * 
 * 
 * cdef class PairPotExpRep(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Exponential repulsion
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotExpRep {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotExpRep *__pyx_vtabptr_4yaff_3pes_3ext_PairPotExpRep;


/* "yaff/pes/ext.pyx":1244
 * 
 * 
 * cdef class PairPotLJCross(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Lennard Jones with explicit cross parameters.
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJCross {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJCross *__pyx_vtabptr_4yaff_3pes_3ext_PairPotLJCross;


/* "yaff/pes/ext.pyx":880
 * 
 * 
 * cdef class PairPotLJ(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Lennard-Jones pair potential:
 * 
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJ {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJ *__pyx_vtabptr_4yaff_3pes_3ext_PairPotLJ;


/* "yaff/pes/ext.pyx":1910
 * 
 * 
 * cdef class PairPotEiSlater1sp1spCorr(PairPot):             # <<<<<<<<<<<<<<
 *     r'''Electrostatic interaction between sites with a point charge, a
 *         1s Slater charge density, a point dipole and a 1p Slater charge density
 */

struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr {
  struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_base;
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static void __Pyx_RaiseBufferFallbackError(void); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE int __Pyx_IterFinish(void); /*proto*/

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected); /*proto*/

#define __Pyx_PyObject_DelSlice(obj, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound) \
    __Pyx_PyObject_SetSlice(obj, (PyObject*)NULL, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

static CYTHON_INLINE long __Pyx_mod_long(long, long); /* proto */

static CYTHON_INLINE long __Pyx_div_long(long, long); /* proto */

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name); /*proto*/

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name); /*proto*/

typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level); /*proto*/

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'yaff.pes.cell' */

/* Module declarations from 'yaff.pes.nlist' */

/* Module declarations from 'yaff.pes.truncation' */

/* Module declarations from 'yaff.pes.switchon' */

/* Module declarations from 'yaff.pes.slater' */

/* Module declarations from 'yaff.pes.pair_pot' */

/* Module declarations from 'yaff.pes.ewald' */

/* Module declarations from 'yaff.pes.dlist' */

/* Module declarations from 'yaff.pes.iclist' */

/* Module declarations from 'yaff.pes.vlist' */

/* Module declarations from 'yaff.pes.grid' */

/* Module declarations from 'yaff.pes.ext' */
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPot = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotLJ = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_Truncation = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_Hammer = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotMM3 = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_SwitchOn = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_SwitchErrorFunction = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_Cell = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotEI = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_Switch3 = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp = 0;
static PyTypeObject *__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr = 0;
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_long = { "long", NULL, sizeof(long), { 0 }, 0, IS_UNSIGNED(long) ? 'U' : 'I', IS_UNSIGNED(long), 0 };
static __Pyx_StructField __Pyx_StructFields_nn_neigh_row_type[] = {
  {&__Pyx_TypeInfo_long, "a", offsetof(neigh_row_type, a)},
  {&__Pyx_TypeInfo_long, "b", offsetof(neigh_row_type, b)},
  {&__Pyx_TypeInfo_double, "d", offsetof(neigh_row_type, d)},
  {&__Pyx_TypeInfo_double, "dx", offsetof(neigh_row_type, dx)},
  {&__Pyx_TypeInfo_double, "dy", offsetof(neigh_row_type, dy)},
  {&__Pyx_TypeInfo_double, "dz", offsetof(neigh_row_type, dz)},
  {&__Pyx_TypeInfo_long, "r0", offsetof(neigh_row_type, r0)},
  {&__Pyx_TypeInfo_long, "r1", offsetof(neigh_row_type, r1)},
  {&__Pyx_TypeInfo_long, "r2", offsetof(neigh_row_type, r2)},
  {NULL, NULL, 0}
};
static __Pyx_TypeInfo __Pyx_TypeInfo_nn_neigh_row_type = { "neigh_row_type", __Pyx_StructFields_nn_neigh_row_type, sizeof(neigh_row_type), { 0 }, 0, 'S', 0, 0 };
static __Pyx_StructField __Pyx_StructFields_nn_scaling_row_type[] = {
  {&__Pyx_TypeInfo_long, "a", offsetof(scaling_row_type, a)},
  {&__Pyx_TypeInfo_long, "b", offsetof(scaling_row_type, b)},
  {&__Pyx_TypeInfo_double, "scale", offsetof(scaling_row_type, scale)},
  {&__Pyx_TypeInfo_long, "nbond", offsetof(scaling_row_type, nbond)},
  {NULL, NULL, 0}
};
static __Pyx_TypeInfo __Pyx_TypeInfo_nn_scaling_row_type = { "scaling_row_type", __Pyx_StructFields_nn_scaling_row_type, sizeof(scaling_row_type), { 0 }, 0, 'S', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_int = { "int", NULL, sizeof(int), { 0 }, 0, IS_UNSIGNED(int) ? 'U' : 'I', IS_UNSIGNED(int), 0 };
static __Pyx_StructField __Pyx_StructFields_nn_dlist_row_type[] = {
  {&__Pyx_TypeInfo_double, "dx", offsetof(dlist_row_type, dx)},
  {&__Pyx_TypeInfo_double, "dy", offsetof(dlist_row_type, dy)},
  {&__Pyx_TypeInfo_double, "dz", offsetof(dlist_row_type, dz)},
  {&__Pyx_TypeInfo_long, "i", offsetof(dlist_row_type, i)},
  {&__Pyx_TypeInfo_long, "j", offsetof(dlist_row_type, j)},
  {&__Pyx_TypeInfo_double, "gx", offsetof(dlist_row_type, gx)},
  {&__Pyx_TypeInfo_double, "gy", offsetof(dlist_row_type, gy)},
  {&__Pyx_TypeInfo_double, "gz", offsetof(dlist_row_type, gz)},
  {NULL, NULL, 0}
};
static __Pyx_TypeInfo __Pyx_TypeInfo_nn_dlist_row_type = { "dlist_row_type", __Pyx_StructFields_nn_dlist_row_type, sizeof(dlist_row_type), { 0 }, 0, 'S', 0, 0 };
static __Pyx_StructField __Pyx_StructFields_nn_iclist_row_type[] = {
  {&__Pyx_TypeInfo_long, "kind", offsetof(iclist_row_type, kind)},
  {&__Pyx_TypeInfo_long, "i0", offsetof(iclist_row_type, i0)},
  {&__Pyx_TypeInfo_long, "sign0", offsetof(iclist_row_type, sign0)},
  {&__Pyx_TypeInfo_long, "i1", offsetof(iclist_row_type, i1)},
  {&__Pyx_TypeInfo_long, "sign1", offsetof(iclist_row_type, sign1)},
  {&__Pyx_TypeInfo_long, "i2", offsetof(iclist_row_type, i2)},
  {&__Pyx_TypeInfo_long, "sign2", offsetof(iclist_row_type, sign2)},
  {&__Pyx_TypeInfo_long, "i3", offsetof(iclist_row_type, i3)},
  {&__Pyx_TypeInfo_long, "sign3", offsetof(iclist_row_type, sign3)},
  {&__Pyx_TypeInfo_double, "value", offsetof(iclist_row_type, value)},
  {&__Pyx_TypeInfo_double, "grad", offsetof(iclist_row_type, grad)},
  {NULL, NULL, 0}
};
static __Pyx_TypeInfo __Pyx_TypeInfo_nn_iclist_row_type = { "iclist_row_type", __Pyx_StructFields_nn_iclist_row_type, sizeof(iclist_row_type), { 0 }, 0, 'S', 0, 0 };
static __Pyx_StructField __Pyx_StructFields_nn_vlist_row_type[] = {
  {&__Pyx_TypeInfo_long, "kind", offsetof(vlist_row_type, kind)},
  {&__Pyx_TypeInfo_double, "par0", offsetof(vlist_row_type, par0)},
  {&__Pyx_TypeInfo_double, "par1", offsetof(vlist_row_type, par1)},
  {&__Pyx_TypeInfo_double, "par2", offsetof(vlist_row_type, par2)},
  {&__Pyx_TypeInfo_double, "par3", offsetof(vlist_row_type, par3)},
  {&__Pyx_TypeInfo_long, "ic0", offsetof(vlist_row_type, ic0)},
  {&__Pyx_TypeInfo_long, "ic1", offsetof(vlist_row_type, ic1)},
  {&__Pyx_TypeInfo_double, "energy", offsetof(vlist_row_type, energy)},
  {NULL, NULL, 0}
};
static __Pyx_TypeInfo __Pyx_TypeInfo_nn_vlist_row_type = { "vlist_row_type", __Pyx_StructFields_nn_vlist_row_type, sizeof(vlist_row_type), { 0 }, 0, 'S', 0, 0 };
#define __Pyx_MODULE_NAME "yaff.pes.ext"
int __pyx_module_is_main_yaff__pes__ext = 0;

/* Implementation of 'yaff.pes.ext' */
static PyObject *__pyx_builtin_property;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static int __pyx_pf_4yaff_3pes_3ext_4Cell___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4yaff_3pes_3ext_4Cell_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_4Cell_4__init__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_rvecs); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_6update_rvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_rvecs); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_8_get_nvec(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_10_get_volume(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_12_get_rvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_14_get_gvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_16_get_rspacings(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_18_get_gspacings(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_20_get_parameters(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_22mic(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_delta); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_24to_center(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_pos); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_26add_vec(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_delta, PyArrayObject *__pyx_v_r); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_28compute_distances(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_output, PyArrayObject *__pyx_v_pos0, PyArrayObject *__pyx_v_pos1, PyArrayObject *__pyx_v_pairs, int __pyx_v_do_include, long __pyx_v_nimage); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_nlist_status_init(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_rmax); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_2nlist_build(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, long __pyx_v_split); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_4nlist_decompose(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_bin_indexes, PyArrayObject *__pyx_v_order, PyArrayObject *__pyx_v_domains); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_6nlist_build_dd_omp(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_binsizes, PyArrayObject *__pyx_v_binsizes_cum, PyObject *__pyx_v_nbin, PyArrayObject *__pyx_v_domains, double __pyx_v_r_circum); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_8nlist_build_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_binsizes, PyArrayObject *__pyx_v_binsizes_cum, PyArrayObject *__pyx_v_ijstart, PyObject *__pyx_v_nbin, PyArrayObject *__pyx_v_domains, double __pyx_v_r_circum); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10nlist_status_finish(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_status); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12nlist_recompute(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_pos_old, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_neighs); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_14nlist_inc_r(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_rmax); /* proto */
static void __pyx_pf_4yaff_3pes_3ext_10Truncation___dealloc__(struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10Truncation_2trunc_fn(struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_self, double __pyx_v_d, double __pyx_v_rcut); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_6Hammer___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self, double __pyx_v_tau); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_6Hammer_2_get_tau(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_6Hammer_4get_log(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_7Switch3___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self, double __pyx_v_width); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7Switch3_2_get_width(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7Switch3_4get_log(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_8SwitchOn___cinit__(struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4yaff_3pes_3ext_8SwitchOn_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_19SwitchErrorFunction___cinit__(struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *__pyx_v_self, PyArrayObject *__pyx_v_radii); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_7PairPot___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4yaff_3pes_3ext_7PairPot_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_4_get_rcut(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_6get_truncation(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_8get_switchon(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_10compute(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess, long __pyx_v_nneigh); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_9PairPotLJ___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self, PyArrayObject *__pyx_v_sigmas, PyArrayObject *__pyx_v_epsilons, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_4_get_sigmas(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_6_get_epsilons(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_10PairPotMM3___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self, PyArrayObject *__pyx_v_sigmas, PyArrayObject *__pyx_v_epsilons, PyArrayObject *__pyx_v_onlypaulis, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_4_get_sigmas(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_6_get_epsilons(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_8_get_onlypaulis(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self, PyArrayObject *__pyx_v_r0, PyArrayObject *__pyx_v_c6, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_4_get_r0(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_6_get_c6(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_amp_cross, PyArrayObject *__pyx_v_b_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_amps, long __pyx_v_amp_mix, double __pyx_v_amp_mix_coeff, PyArrayObject *__pyx_v_bs, long __pyx_v_b_mix, double __pyx_v_b_mix_coeff); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_2_init_amp_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_amp_cross, PyObject *__pyx_v_amps, PyObject *__pyx_v_amp_mix, PyObject *__pyx_v_amp_mix_coeff); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_4_init_b_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_b_cross, PyObject *__pyx_v_bs, PyObject *__pyx_v_b_mix, PyObject *__pyx_v_b_mix_coeff, PyObject *__pyx_v_amps); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_6log(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_8_get_amp_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_10_get_b_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_eps_cross, PyArrayObject *__pyx_v_sig_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_4_get_eps_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_6_get_sig_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_c6_cross, PyArrayObject *__pyx_v_b_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_c6s, PyArrayObject *__pyx_v_bs, PyArrayObject *__pyx_v_vols); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_2_init_c6_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_c6_cross, PyObject *__pyx_v_c6s, PyObject *__pyx_v_vols); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_4_init_b_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_b_cross, PyObject *__pyx_v_bs); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_6log(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_8_get_c6_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_10_get_b_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_c6_cross, PyArrayObject *__pyx_v_c8_cross, PyArrayObject *__pyx_v_R_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_c6s, PyArrayObject *__pyx_v_c8s, PyArrayObject *__pyx_v_Rs, double __pyx_v_c6_scale, double __pyx_v_c8_scale, double __pyx_v_bj_a, double __pyx_v_bj_b); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_4_get_c6_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_6_get_c8_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_8_get_R_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_10_get_c6_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_12_get_c8_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_14_get_bj_a(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_16_get_bj_b(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_9PairPotEI___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self, PyArrayObject *__pyx_v_charges, double __pyx_v_alpha, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, double __pyx_v_dielectric, PyArrayObject *__pyx_v_radii); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_4_get_charges(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_6_get_radii(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_8_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_10_get_dielectric(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, double __pyx_v_alpha, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, PyArrayObject *__pyx_v_radii, PyArrayObject *__pyx_v_radii2); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_2compute(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess, long __pyx_v_nneigh); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_4log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_6_get_charges(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_8_get_dipoles(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_10_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, PyArrayObject *__pyx_v_slater1s_Z, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_8_get_slater1s_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, PyArrayObject *__pyx_v_slater1s_Z, PyArrayObject *__pyx_v_slater1p_widths, PyArrayObject *__pyx_v_slater1p_N, PyArrayObject *__pyx_v_slater1p_Z, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_8_get_slater1s_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_10_get_slater1p_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_12_get_slater1p_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_14_get_slater1p_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, double __pyx_v_ex_scale, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, double __pyx_v_corr_a, double __pyx_v_corr_b, double __pyx_v_corr_c); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_8_get_ex_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_10_get_corr_a(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_12_get_corr_b(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_14_get_corr_c(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self); /* proto */
static int __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, double __pyx_v_ct_scale, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, double __pyx_v_width_power); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_8_get_ct_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_10_get_width_power(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_12_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_16compute_ewald_reci(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_gmax, double __pyx_v_gcut, double __pyx_v_dielectric, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_work, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_18compute_ewald_reci_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_gmax, double __pyx_v_gcut, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_work, PyArrayObject *__pyx_v_vtens); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_20compute_ewald_corr(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, double __pyx_v_dielectric, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_22compute_ewald_corr_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_24compute_ewald_corr_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_26dlist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_deltas, long __pyx_v_ndelta); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_28dlist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_deltas, long __pyx_v_ndelta); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_30iclist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, long __pyx_v_nic); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_32iclist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, long __pyx_v_nic); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_34iclist_jacobian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_jacobian, long __pyx_v_nic); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_36iclist_hessian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_hessian, long __pyx_v_nic); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_38vlist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_40vlist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_42vlist_hessian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv, PyArrayObject *__pyx_v_hessian); /* proto */
static PyObject *__pyx_pf_4yaff_3pes_3ext_44compute_grid3d(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_center, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_egrid); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPot(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotLJ(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Truncation(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Hammer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotMM3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEIDip(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_SwitchOn(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_SwitchErrorFunction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotLJCross(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Cell(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEI(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotOlpSlater1s1s(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Switch3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotDisp68BJDamp(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotExpRep(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotGrimme(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotDampDisp(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_B[] = "B";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_O[] = "O";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_T[] = "T";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_l[] = "l";
static char __pyx_k_q[] = "q";
static char __pyx_k_r[] = "r";
static char __pyx_k_Rs[] = "Rs";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k_bs[] = "bs";
static char __pyx_k_c6[] = "c6";
static char __pyx_k_ei[] = "ei";
static char __pyx_k_lj[] = "lj";
static char __pyx_k_np[] = "np";
static char __pyx_k_nv[] = "nv";
static char __pyx_k_r0[] = "r0";
static char __pyx_k_sw[] = "sw";
static char __pyx_k_tr[] = "tr";
static char __pyx_k_all[] = "all";
static char __pyx_k_c6s[] = "c6s";
static char __pyx_k_c8s[] = "c8s";
static char __pyx_k_dot[] = "dot";
static char __pyx_k_exp[] = "exp";
static char __pyx_k_log[] = "log";
static char __pyx_k_max[] = "max";
static char __pyx_k_min[] = "min";
static char __pyx_k_mm3[] = "mm3";
static char __pyx_k_nic[] = "nic";
static char __pyx_k_pos[] = "pos";
static char __pyx_k_svd[] = "svd";
static char __pyx_k_tau[] = "tau";
static char __pyx_k_Cell[] = "Cell";
static char __pyx_k_amps[] = "amps";
static char __pyx_k_bj_a[] = "bj_a";
static char __pyx_k_bj_b[] = "bj_b";
static char __pyx_k_clip[] = "clip";
static char __pyx_k_diag[] = "diag";
static char __pyx_k_full[] = "full";
static char __pyx_k_gcut[] = "gcut";
static char __pyx_k_gmax[] = "gmax";
static char __pyx_k_gpos[] = "gpos";
static char __pyx_k_hess[] = "hess";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "name";
static char __pyx_k_nbin[] = "nbin";
static char __pyx_k_nvec[] = "nvec";
static char __pyx_k_ones[] = "ones";
static char __pyx_k_pos0[] = "pos0";
static char __pyx_k_pos1[] = "pos1";
static char __pyx_k_rcut[] = "rcut";
static char __pyx_k_rmax[] = "rmax";
static char __pyx_k_size[] = "size";
static char __pyx_k_sqrt[] = "sqrt";
static char __pyx_k_stab[] = "stab";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_view[] = "view";
static char __pyx_k_vols[] = "vols";
static char __pyx_k_vtab[] = "vtab";
static char __pyx_k_work[] = "work";
static char __pyx_k_10_5f[] = "%10.5f";
static char __pyx_k_all_2[] = "__all__";
static char __pyx_k_alpha[] = "alpha";
static char __pyx_k_array[] = "array";
static char __pyx_k_b_mix[] = "b_mix";
static char __pyx_k_c_nic[] = "_c_nic";
static char __pyx_k_delta[] = "delta";
static char __pyx_k_egrid[] = "egrid";
static char __pyx_k_eidip[] = "eidip";
static char __pyx_k_flags[] = "flags";
static char __pyx_k_gvecs[] = "gvecs";
static char __pyx_k_hline[] = "hline";
static char __pyx_k_ictab[] = "ictab";
static char __pyx_k_numpy[] = "numpy";
static char __pyx_k_order[] = "order";
static char __pyx_k_pairs[] = "pairs";
static char __pyx_k_radii[] = "radii";
static char __pyx_k_range[] = "range";
static char __pyx_k_rvecs[] = "rvecs";
static char __pyx_k_shape[] = "shape";
static char __pyx_k_split[] = "split";
static char __pyx_k_vtens[] = "vtens";
static char __pyx_k_width[] = "width";
static char __pyx_k_write[] = "write";
static char __pyx_k_zeros[] = "zeros";
static char __pyx_k_7i_s_s[] = "%7i %s %s";
static char __pyx_k_Hammer[] = "Hammer";
static char __pyx_k_arccos[] = "arccos";
static char __pyx_k_bj_a_s[] = "  bj_a:             %s";
static char __pyx_k_bj_b_s[] = "  bj_b:             %s";
static char __pyx_k_center[] = "center";
static char __pyx_k_charge[] = "charge";
static char __pyx_k_corr_a[] = "corr_a";
static char __pyx_k_corr_b[] = "corr_b";
static char __pyx_k_corr_c[] = "corr_c";
static char __pyx_k_deltas[] = "deltas";
static char __pyx_k_energy[] = "energy";
static char __pyx_k_exprep[] = "exprep";
static char __pyx_k_get_c6[] = "_get_c6";
static char __pyx_k_get_r0[] = "_get_r0";
static char __pyx_k_grimme[] = "grimme";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_length[] = "length";
static char __pyx_k_linalg[] = "linalg";
static char __pyx_k_ndelta[] = "ndelta";
static char __pyx_k_neighs[] = "neighs";
static char __pyx_k_nimage[] = "nimage";
static char __pyx_k_nneigh[] = "nneigh";
static char __pyx_k_output[] = "output";
static char __pyx_k_radii2[] = "radii2";
static char __pyx_k_result[] = "result";
static char __pyx_k_sigmas[] = "sigmas";
static char __pyx_k_status[] = "status";
static char __pyx_k_volume[] = "volume";
static char __pyx_k_xrange[] = "xrange";
static char __pyx_k_PairPot[] = "PairPot";
static char __pyx_k_R_cross[] = "R_cross";
static char __pyx_k_Switch3[] = "Switch3";
static char __pyx_k_alpha_s[] = "  alpha:                 %s";
static char __pyx_k_amp_mix[] = "amp_mix";
static char __pyx_k_b_cross[] = "b_cross";
static char __pyx_k_charges[] = "charges";
static char __pyx_k_compute[] = "compute";
static char __pyx_k_dipoles[] = "dipoles";
static char __pyx_k_do_high[] = "do_high";
static char __pyx_k_domains[] = "domains";
static char __pyx_k_get_tau[] = "_get_tau";
static char __pyx_k_hessian[] = "hessian";
static char __pyx_k_ijstart[] = "ijstart";
static char __pyx_k_ljcross[] = "ljcross";
static char __pyx_k_my_gpos[] = "my_gpos";
static char __pyx_k_my_hess[] = "my_hess";
static char __pyx_k_my_work[] = "my_work";
static char __pyx_k_pos_old[] = "pos_old";
static char __pyx_k_reshape[] = "reshape";
static char __pyx_k_7i_s_s_2[] = "%7i     %s     %s";
static char __pyx_k_7i_s_s_i[] = "%7i %s %s            %i";
static char __pyx_k_7i_s_s_s[] = "%7i     %s   %s     %s";
static char __pyx_k_binsizes[] = "binsizes";
static char __pyx_k_c6_cross[] = "c6_cross";
static char __pyx_k_c6_scale[] = "c6_scale";
static char __pyx_k_c8_cross[] = "c8_cross";
static char __pyx_k_c8_scale[] = "c8_scale";
static char __pyx_k_c_ndelta[] = "_c_ndelta";
static char __pyx_k_corr_a_s[] = "  corr_a:             %s";
static char __pyx_k_corr_b_s[] = "  corr_b:             %s";
static char __pyx_k_corr_c_s[] = "  corr_c:             %s";
static char __pyx_k_ct_scale[] = "ct_scale";
static char __pyx_k_dampdisp[] = "dampdisp";
static char __pyx_k_epsilons[] = "epsilons";
static char __pyx_k_ex_scale[] = "ex_scale";
static char __pyx_k_get_bj_a[] = "_get_bj_a";
static char __pyx_k_get_bj_b[] = "_get_bj_b";
static char __pyx_k_get_nvec[] = "_get_nvec";
static char __pyx_k_get_rcut[] = "_get_rcut";
static char __pyx_k_hammer_s[] = "hammer %s";
static char __pyx_k_identity[] = "identity";
static char __pyx_k_jacobian[] = "jacobian";
static char __pyx_k_my_vtens[] = "my_vtens";
static char __pyx_k_nffatype[] = "nffatype";
static char __pyx_k_property[] = "property";
static char __pyx_k_r_circum[] = "r_circum";
static char __pyx_k_setflags[] = "setflags";
static char __pyx_k_unitcell[] = "unitcell";
static char __pyx_k_yaff_log[] = "yaff.log";
static char __pyx_k_PairPotEI[] = "PairPotEI";
static char __pyx_k_PairPotLJ[] = "PairPotLJ";
static char __pyx_k_TypeError[] = "TypeError";
static char __pyx_k_amp_cross[] = "amp_cross";
static char __pyx_k_do_medium[] = "do_medium";
static char __pyx_k_eps_cross[] = "eps_cross";
static char __pyx_k_get_alpha[] = "_get_alpha";
static char __pyx_k_get_gvecs[] = "_get_gvecs";
static char __pyx_k_get_radii[] = "_get_radii";
static char __pyx_k_get_rvecs[] = "_get_rvecs";
static char __pyx_k_get_width[] = "_get_width";
static char __pyx_k_gspacings[] = "gspacings";
static char __pyx_k_invlength[] = "invlength";
static char __pyx_k_rspacings[] = "rspacings";
static char __pyx_k_sig_cross[] = "sig_cross";
static char __pyx_k_switch3_s[] = "switch3 %s";
static char __pyx_k_Atom_r0_c6[] = "   Atom         r0         c6";
static char __pyx_k_PairPotMM3[] = "PairPotMM3";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_c6_scale_s[] = "  c6_scale:             %s";
static char __pyx_k_c8_scale_s[] = "  c8_scale:             %s";
static char __pyx_k_ct_scale_s[] = "  ct_scale:             %s";
static char __pyx_k_dielectric[] = "dielectric";
static char __pyx_k_dlist_back[] = "dlist_back";
static char __pyx_k_do_include[] = "do_include";
static char __pyx_k_ex_scale_s[] = "  ex_scale:             %s";
static char __pyx_k_get_corr_a[] = "_get_corr_a";
static char __pyx_k_get_corr_b[] = "_get_corr_b";
static char __pyx_k_get_corr_c[] = "_get_corr_c";
static char __pyx_k_get_sigmas[] = "_get_sigmas";
static char __pyx_k_get_volume[] = "_get_volume";
static char __pyx_k_onlypaulis[] = "onlypaulis";
static char __pyx_k_parameters[] = "parameters";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_slater1p_N[] = "slater1p_N";
static char __pyx_k_slater1p_Z[] = "slater1p_Z";
static char __pyx_k_slater1s_N[] = "slater1s_N";
static char __pyx_k_slater1s_Z[] = "slater1s_Z";
static char __pyx_k_vlist_back[] = "vlist_back";
static char __pyx_k_11i_11i_s_s[] = "%11i %11i %s %s";
static char __pyx_k_MemoryError[] = "MemoryError";
static char __pyx_k_b_mix_coeff[] = "b_mix_coeff";
static char __pyx_k_bin_indexes[] = "bin_indexes";
static char __pyx_k_ffatype_ids[] = "ffatype_ids";
static char __pyx_k_get_R_cross[] = "_get_R_cross";
static char __pyx_k_get_b_cross[] = "_get_b_cross";
static char __pyx_k_get_charges[] = "_get_charges";
static char __pyx_k_get_dipoles[] = "_get_dipoles";
static char __pyx_k_iclist_back[] = "iclist_back";
static char __pyx_k_nlist_build[] = "nlist_build";
static char __pyx_k_nlist_inc_r[] = "nlist_inc_r";
static char __pyx_k_width_power[] = "width_power";
static char __pyx_k_C_CONTIGUOUS[] = "C_CONTIGUOUS";
static char __pyx_k_PairPotEIDip[] = "PairPotEIDip";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_binsizes_cum[] = "binsizes_cum";
static char __pyx_k_disp68bjdamp[] = "disp68bjdamp";
static char __pyx_k_get_c6_cross[] = "_get_c6_cross";
static char __pyx_k_get_c6_scale[] = "_get_c6_scale";
static char __pyx_k_get_c8_cross[] = "_get_c8_cross";
static char __pyx_k_get_c8_scale[] = "_get_c8_scale";
static char __pyx_k_get_ct_scale[] = "_get_ct_scale";
static char __pyx_k_get_epsilons[] = "_get_epsilons";
static char __pyx_k_get_ex_scale[] = "_get_ex_scale";
static char __pyx_k_init_b_cross[] = "_init_b_cross";
static char __pyx_k_update_rvecs[] = "update_rvecs";
static char __pyx_k_yaff_pes_ext[] = "yaff.pes.ext";
static char __pyx_k_11i_11i_s_s_s[] = "%11i %11i %s %s %s";
static char __pyx_k_PairPotExpRep[] = "PairPotExpRep";
static char __pyx_k_PairPotGrimme[] = "PairPotGrimme";
static char __pyx_k_amp_mix_coeff[] = "amp_mix_coeff";
static char __pyx_k_dlist_forward[] = "dlist_forward";
static char __pyx_k_full_matrices[] = "full_matrices";
static char __pyx_k_get_amp_cross[] = "_get_amp_cross";
static char __pyx_k_get_eps_cross[] = "_get_eps_cross";
static char __pyx_k_get_gspacings[] = "_get_gspacings";
static char __pyx_k_get_rspacings[] = "_get_rspacings";
static char __pyx_k_get_sig_cross[] = "_get_sig_cross";
static char __pyx_k_init_c6_cross[] = "_init_c6_cross";
static char __pyx_k_olpslater1s1s[] = "olpslater1s1s";
static char __pyx_k_pyx_getbuffer[] = "__pyx_getbuffer";
static char __pyx_k_vlist_forward[] = "vlist_forward";
static char __pyx_k_vlist_hessian[] = "vlist_hessian";
static char __pyx_k_width_power_s[] = "  width_power:             %s";
static char __pyx_k_4i_s_s_s_s_s_s[] = "%4i %s %s %s %s %s %s";
static char __pyx_k_PairPotLJCross[] = "PairPotLJCross";
static char __pyx_k_compute_grid3d[] = "compute_grid3d";
static char __pyx_k_get_dielectric[] = "_get_dielectric";
static char __pyx_k_get_onlypaulis[] = "_get_onlypaulis";
static char __pyx_k_get_parameters[] = "_get_parameters";
static char __pyx_k_get_slater1p_N[] = "_get_slater1p_N";
static char __pyx_k_get_slater1p_Z[] = "_get_slater1p_Z";
static char __pyx_k_get_slater1s_N[] = "_get_slater1s_N";
static char __pyx_k_get_slater1s_Z[] = "_get_slater1s_Z";
static char __pyx_k_iclist_forward[] = "iclist_forward";
static char __pyx_k_iclist_hessian[] = "iclist_hessian";
static char __pyx_k_init_amp_cross[] = "_init_amp_cross";
static char __pyx_k_nlist_build_dd[] = "nlist_build_dd";
static char __pyx_k_PairPotDampDisp[] = "PairPotDampDisp";
static char __pyx_k_get_width_power[] = "_get_width_power";
static char __pyx_k_iclist_jacobian[] = "iclist_jacobian";
static char __pyx_k_nlist_decompose[] = "nlist_decompose";
static char __pyx_k_nlist_recompute[] = "nlist_recompute";
static char __pyx_k_slater1p_widths[] = "slater1p_widths";
static char __pyx_k_slater1s_widths[] = "slater1s_widths";
static char __pyx_k_eislater1s1scorr[] = "eislater1s1scorr";
static char __pyx_k_nlist_status_init[] = "nlist_status_init";
static char __pyx_k_pyx_releasebuffer[] = "__pyx_releasebuffer";
static char __pyx_k_Atom_Charge_Radius[] = "   Atom     Charge     Radius";
static char __pyx_k_Atom_Sigma_Epsilon[] = "   Atom      Sigma    Epsilon";
static char __pyx_k_compute_ewald_corr[] = "compute_ewald_corr";
static char __pyx_k_compute_ewald_reci[] = "compute_ewald_reci";
static char __pyx_k_eislater1sp1spcorr[] = "eislater1sp1spcorr";
static char __pyx_k_nlist_build_dd_omp[] = "nlist_build_dd_omp";
static char __pyx_k_NotImplementedError[] = "NotImplementedError";
static char __pyx_k_PairPotDisp68BJDamp[] = "PairPotDisp68BJDamp";
static char __pyx_k_SwitchErrorFunction[] = "SwitchErrorFunction";
static char __pyx_k_get_slater1p_widths[] = "_get_slater1p_widths";
static char __pyx_k_get_slater1s_widths[] = "_get_slater1s_widths";
static char __pyx_k_nlist_status_finish[] = "nlist_status_finish";
static char __pyx_k_PairPotOlpSlater1s1s[] = "PairPotOlpSlater1s1s";
static char __pyx_k_compute_ewald_corr_dd[] = "compute_ewald_corr_dd";
static char __pyx_k_compute_ewald_reci_dd[] = "compute_ewald_reci_dd";
static char __pyx_k_PairPotEiSlater1s1sCorr[] = "PairPotEiSlater1s1sCorr";
static char __pyx_k_chargetransferslater1s1s[] = "chargetransferslater1s1s";
static char __pyx_k_PairPotEiSlater1sp1spCorr[] = "PairPotEiSlater1sp1spCorr";
static char __pyx_k_relative_permittivity_5_3f[] = "  relative permittivity: %5.3f";
static char __pyx_k_ffatype_id0_ffatype_id1_A_B[] = "ffatype_id0 ffatype_id1          A          B";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_Atom_Sigma_Epsilon_OnlyPauli[] = "   Atom      Sigma    Epsilon    OnlyPauli";
static char __pyx_k_ffatype_id0_ffatype_id1_C6_B[] = "ffatype_id0 ffatype_id1         C6          B";
static char __pyx_k_Atom_Slater_charge_Core_charge[] = "   Atom  Slater charge  Core charge   Slater width";
static char __pyx_k_Atom_Slater_charge_Slater_width[] = "   Atom  Slater charge   Slater width";
static char __pyx_k_Hessian_not_yet_implemented_for[] = "Hessian not yet implemented for PairPotEIDip";
static char __pyx_k_PairPotChargeTransferSlater1s1s[] = "PairPotChargeTransferSlater1s1s";
static char __pyx_k_ffatype_id0_ffatype_id1_C6_C8_R[] = "ffatype_id0 ffatype_id1         C6         C8          R";
static char __pyx_k_ffatype_id0_ffatype_id1_eps_sig[] = "ffatype_id0 ffatype_id1         eps          sig";
static char __pyx_k_home_steven_build_yaff_yaff_pes[] = "/home/steven/build/yaff/yaff/pes/ext.pyx";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_Atom_Charge_Radius_Dipole_x_Dipo[] = "Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius";
static char __pyx_k_Can_only_include_distances_to_pe[] = "Can only include distances to periodic images for periodic systems.";
static char __pyx_k_Computing_PairPotEIDip_energy_an[] = "Computing PairPotEIDip energy and gradient";
static char __pyx_k_Either_gpos_or_vtens_must_be_giv[] = "Either gpos or vtens must be given.";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Low_level_C_routines_This_extens[] = "Low-level C routines\n\n   This extension module is used by various modules of the ``yaff.pes``\n   package.\n";
static char __pyx_k_No_pairs_given_and_do_include_Tr[] = "No pairs given and do_include==True.";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_The_pairs_array_must_countain_in[] = "The pairs array must countain indices within proper bounds and must be lexicographically sorted.";
static char __pyx_k_When_do_include_True_nimage_must[] = "When do_include==True, nimage must be zero.";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_rvecs_must_be_a_C_contiguous_arr[] = "rvecs must be a C contiguous array with three columns and at most three rows.";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_kp_s_10_5f;
static PyObject *__pyx_kp_s_11i_11i_s_s;
static PyObject *__pyx_kp_s_11i_11i_s_s_s;
static PyObject *__pyx_kp_s_4i_s_s_s_s_s_s;
static PyObject *__pyx_kp_s_7i_s_s;
static PyObject *__pyx_kp_s_7i_s_s_2;
static PyObject *__pyx_kp_s_7i_s_s_i;
static PyObject *__pyx_kp_s_7i_s_s_s;
static PyObject *__pyx_kp_s_Atom_Charge_Radius;
static PyObject *__pyx_kp_s_Atom_Charge_Radius_Dipole_x_Dipo;
static PyObject *__pyx_kp_s_Atom_Sigma_Epsilon;
static PyObject *__pyx_kp_s_Atom_Sigma_Epsilon_OnlyPauli;
static PyObject *__pyx_kp_s_Atom_Slater_charge_Core_charge;
static PyObject *__pyx_kp_s_Atom_Slater_charge_Slater_width;
static PyObject *__pyx_kp_s_Atom_r0_c6;
static PyObject *__pyx_n_s_C_CONTIGUOUS;
static PyObject *__pyx_kp_s_Can_only_include_distances_to_pe;
static PyObject *__pyx_n_s_Cell;
static PyObject *__pyx_kp_s_Computing_PairPotEIDip_energy_an;
static PyObject *__pyx_kp_s_Either_gpos_or_vtens_must_be_giv;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_Hammer;
static PyObject *__pyx_kp_s_Hessian_not_yet_implemented_for;
static PyObject *__pyx_n_s_MemoryError;
static PyObject *__pyx_kp_s_No_pairs_given_and_do_include_Tr;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_PairPot;
static PyObject *__pyx_n_s_PairPotChargeTransferSlater1s1s;
static PyObject *__pyx_n_s_PairPotDampDisp;
static PyObject *__pyx_n_s_PairPotDisp68BJDamp;
static PyObject *__pyx_n_s_PairPotEI;
static PyObject *__pyx_n_s_PairPotEIDip;
static PyObject *__pyx_n_s_PairPotEiSlater1s1sCorr;
static PyObject *__pyx_n_s_PairPotEiSlater1sp1spCorr;
static PyObject *__pyx_n_s_PairPotExpRep;
static PyObject *__pyx_n_s_PairPotGrimme;
static PyObject *__pyx_n_s_PairPotLJ;
static PyObject *__pyx_n_s_PairPotLJCross;
static PyObject *__pyx_n_s_PairPotMM3;
static PyObject *__pyx_n_s_PairPotOlpSlater1s1s;
static PyObject *__pyx_n_s_R_cross;
static PyObject *__pyx_n_s_Rs;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_Switch3;
static PyObject *__pyx_n_s_SwitchErrorFunction;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_kp_s_The_pairs_array_must_countain_in;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s_When_do_include_True_nimage_must;
static PyObject *__pyx_n_s_all;
static PyObject *__pyx_n_s_all_2;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_kp_s_alpha_s;
static PyObject *__pyx_n_s_amp_cross;
static PyObject *__pyx_n_s_amp_mix;
static PyObject *__pyx_n_s_amp_mix_coeff;
static PyObject *__pyx_n_s_amps;
static PyObject *__pyx_n_s_arccos;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_b_cross;
static PyObject *__pyx_n_s_b_mix;
static PyObject *__pyx_n_s_b_mix_coeff;
static PyObject *__pyx_n_s_bin_indexes;
static PyObject *__pyx_n_s_binsizes;
static PyObject *__pyx_n_s_binsizes_cum;
static PyObject *__pyx_n_s_bj_a;
static PyObject *__pyx_kp_s_bj_a_s;
static PyObject *__pyx_n_s_bj_b;
static PyObject *__pyx_kp_s_bj_b_s;
static PyObject *__pyx_n_s_bs;
static PyObject *__pyx_n_s_c6;
static PyObject *__pyx_n_s_c6_cross;
static PyObject *__pyx_n_s_c6_scale;
static PyObject *__pyx_kp_s_c6_scale_s;
static PyObject *__pyx_n_s_c6s;
static PyObject *__pyx_n_s_c8_cross;
static PyObject *__pyx_n_s_c8_scale;
static PyObject *__pyx_kp_s_c8_scale_s;
static PyObject *__pyx_n_s_c8s;
static PyObject *__pyx_n_s_c_ndelta;
static PyObject *__pyx_n_s_c_nic;
static PyObject *__pyx_n_s_center;
static PyObject *__pyx_n_s_charge;
static PyObject *__pyx_n_s_charges;
static PyObject *__pyx_n_s_chargetransferslater1s1s;
static PyObject *__pyx_n_s_clip;
static PyObject *__pyx_n_s_compute;
static PyObject *__pyx_n_s_compute_ewald_corr;
static PyObject *__pyx_n_s_compute_ewald_corr_dd;
static PyObject *__pyx_n_s_compute_ewald_reci;
static PyObject *__pyx_n_s_compute_ewald_reci_dd;
static PyObject *__pyx_n_s_compute_grid3d;
static PyObject *__pyx_n_s_corr_a;
static PyObject *__pyx_kp_s_corr_a_s;
static PyObject *__pyx_n_s_corr_b;
static PyObject *__pyx_kp_s_corr_b_s;
static PyObject *__pyx_n_s_corr_c;
static PyObject *__pyx_kp_s_corr_c_s;
static PyObject *__pyx_n_s_ct_scale;
static PyObject *__pyx_kp_s_ct_scale_s;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_dampdisp;
static PyObject *__pyx_n_s_delta;
static PyObject *__pyx_n_s_deltas;
static PyObject *__pyx_n_s_diag;
static PyObject *__pyx_n_s_dielectric;
static PyObject *__pyx_n_s_dipoles;
static PyObject *__pyx_n_s_disp68bjdamp;
static PyObject *__pyx_n_s_dlist_back;
static PyObject *__pyx_n_s_dlist_forward;
static PyObject *__pyx_n_s_do_high;
static PyObject *__pyx_n_s_do_include;
static PyObject *__pyx_n_s_do_medium;
static PyObject *__pyx_n_s_domains;
static PyObject *__pyx_n_s_dot;
static PyObject *__pyx_n_s_egrid;
static PyObject *__pyx_n_s_ei;
static PyObject *__pyx_n_s_eidip;
static PyObject *__pyx_n_s_eislater1s1scorr;
static PyObject *__pyx_n_s_eislater1sp1spcorr;
static PyObject *__pyx_n_s_energy;
static PyObject *__pyx_n_s_eps_cross;
static PyObject *__pyx_n_s_epsilons;
static PyObject *__pyx_n_s_ex_scale;
static PyObject *__pyx_kp_s_ex_scale_s;
static PyObject *__pyx_n_s_exp;
static PyObject *__pyx_n_s_exprep;
static PyObject *__pyx_kp_s_ffatype_id0_ffatype_id1_A_B;
static PyObject *__pyx_kp_s_ffatype_id0_ffatype_id1_C6_B;
static PyObject *__pyx_kp_s_ffatype_id0_ffatype_id1_C6_C8_R;
static PyObject *__pyx_kp_s_ffatype_id0_ffatype_id1_eps_sig;
static PyObject *__pyx_n_s_ffatype_ids;
static PyObject *__pyx_n_s_flags;
static PyObject *__pyx_n_s_full;
static PyObject *__pyx_n_s_full_matrices;
static PyObject *__pyx_n_s_gcut;
static PyObject *__pyx_n_s_get_R_cross;
static PyObject *__pyx_n_s_get_alpha;
static PyObject *__pyx_n_s_get_amp_cross;
static PyObject *__pyx_n_s_get_b_cross;
static PyObject *__pyx_n_s_get_bj_a;
static PyObject *__pyx_n_s_get_bj_b;
static PyObject *__pyx_n_s_get_c6;
static PyObject *__pyx_n_s_get_c6_cross;
static PyObject *__pyx_n_s_get_c6_scale;
static PyObject *__pyx_n_s_get_c8_cross;
static PyObject *__pyx_n_s_get_c8_scale;
static PyObject *__pyx_n_s_get_charges;
static PyObject *__pyx_n_s_get_corr_a;
static PyObject *__pyx_n_s_get_corr_b;
static PyObject *__pyx_n_s_get_corr_c;
static PyObject *__pyx_n_s_get_ct_scale;
static PyObject *__pyx_n_s_get_dielectric;
static PyObject *__pyx_n_s_get_dipoles;
static PyObject *__pyx_n_s_get_eps_cross;
static PyObject *__pyx_n_s_get_epsilons;
static PyObject *__pyx_n_s_get_ex_scale;
static PyObject *__pyx_n_s_get_gspacings;
static PyObject *__pyx_n_s_get_gvecs;
static PyObject *__pyx_n_s_get_nvec;
static PyObject *__pyx_n_s_get_onlypaulis;
static PyObject *__pyx_n_s_get_parameters;
static PyObject *__pyx_n_s_get_r0;
static PyObject *__pyx_n_s_get_radii;
static PyObject *__pyx_n_s_get_rcut;
static PyObject *__pyx_n_s_get_rspacings;
static PyObject *__pyx_n_s_get_rvecs;
static PyObject *__pyx_n_s_get_sig_cross;
static PyObject *__pyx_n_s_get_sigmas;
static PyObject *__pyx_n_s_get_slater1p_N;
static PyObject *__pyx_n_s_get_slater1p_Z;
static PyObject *__pyx_n_s_get_slater1p_widths;
static PyObject *__pyx_n_s_get_slater1s_N;
static PyObject *__pyx_n_s_get_slater1s_Z;
static PyObject *__pyx_n_s_get_slater1s_widths;
static PyObject *__pyx_n_s_get_tau;
static PyObject *__pyx_n_s_get_volume;
static PyObject *__pyx_n_s_get_width;
static PyObject *__pyx_n_s_get_width_power;
static PyObject *__pyx_n_s_gmax;
static PyObject *__pyx_n_s_gpos;
static PyObject *__pyx_n_s_grimme;
static PyObject *__pyx_n_s_gspacings;
static PyObject *__pyx_n_s_gvecs;
static PyObject *__pyx_kp_s_hammer_s;
static PyObject *__pyx_n_s_hess;
static PyObject *__pyx_n_s_hessian;
static PyObject *__pyx_n_s_hline;
static PyObject *__pyx_kp_s_home_steven_build_yaff_yaff_pes;
static PyObject *__pyx_n_s_iclist_back;
static PyObject *__pyx_n_s_iclist_forward;
static PyObject *__pyx_n_s_iclist_hessian;
static PyObject *__pyx_n_s_iclist_jacobian;
static PyObject *__pyx_n_s_ictab;
static PyObject *__pyx_n_s_identity;
static PyObject *__pyx_n_s_ijstart;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_init_amp_cross;
static PyObject *__pyx_n_s_init_b_cross;
static PyObject *__pyx_n_s_init_c6_cross;
static PyObject *__pyx_n_s_invlength;
static PyObject *__pyx_n_s_jacobian;
static PyObject *__pyx_n_s_length;
static PyObject *__pyx_n_s_linalg;
static PyObject *__pyx_n_s_lj;
static PyObject *__pyx_n_s_ljcross;
static PyObject *__pyx_n_s_log;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_max;
static PyObject *__pyx_n_s_min;
static PyObject *__pyx_n_s_mm3;
static PyObject *__pyx_n_s_my_gpos;
static PyObject *__pyx_n_s_my_hess;
static PyObject *__pyx_n_s_my_vtens;
static PyObject *__pyx_n_s_my_work;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_nbin;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_ndelta;
static PyObject *__pyx_n_s_neighs;
static PyObject *__pyx_n_s_nffatype;
static PyObject *__pyx_n_s_nic;
static PyObject *__pyx_n_s_nimage;
static PyObject *__pyx_n_s_nlist_build;
static PyObject *__pyx_n_s_nlist_build_dd;
static PyObject *__pyx_n_s_nlist_build_dd_omp;
static PyObject *__pyx_n_s_nlist_decompose;
static PyObject *__pyx_n_s_nlist_inc_r;
static PyObject *__pyx_n_s_nlist_recompute;
static PyObject *__pyx_n_s_nlist_status_finish;
static PyObject *__pyx_n_s_nlist_status_init;
static PyObject *__pyx_n_s_nneigh;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_nv;
static PyObject *__pyx_n_s_nvec;
static PyObject *__pyx_n_s_olpslater1s1s;
static PyObject *__pyx_n_s_ones;
static PyObject *__pyx_n_s_onlypaulis;
static PyObject *__pyx_n_s_order;
static PyObject *__pyx_n_s_output;
static PyObject *__pyx_n_s_pairs;
static PyObject *__pyx_n_s_parameters;
static PyObject *__pyx_n_s_pos;
static PyObject *__pyx_n_s_pos0;
static PyObject *__pyx_n_s_pos1;
static PyObject *__pyx_n_s_pos_old;
static PyObject *__pyx_n_s_property;
static PyObject *__pyx_n_s_pyx_getbuffer;
static PyObject *__pyx_n_s_pyx_releasebuffer;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_r0;
static PyObject *__pyx_n_s_r_circum;
static PyObject *__pyx_n_s_radii;
static PyObject *__pyx_n_s_radii2;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rcut;
static PyObject *__pyx_kp_s_relative_permittivity_5_3f;
static PyObject *__pyx_n_s_reshape;
static PyObject *__pyx_n_s_result;
static PyObject *__pyx_n_s_rmax;
static PyObject *__pyx_n_s_rspacings;
static PyObject *__pyx_n_s_rvecs;
static PyObject *__pyx_kp_s_rvecs_must_be_a_C_contiguous_arr;
static PyObject *__pyx_n_s_setflags;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_sig_cross;
static PyObject *__pyx_n_s_sigmas;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_slater1p_N;
static PyObject *__pyx_n_s_slater1p_Z;
static PyObject *__pyx_n_s_slater1p_widths;
static PyObject *__pyx_n_s_slater1s_N;
static PyObject *__pyx_n_s_slater1s_Z;
static PyObject *__pyx_n_s_slater1s_widths;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_sqrt;
static PyObject *__pyx_n_s_stab;
static PyObject *__pyx_n_s_status;
static PyObject *__pyx_n_s_svd;
static PyObject *__pyx_n_s_sw;
static PyObject *__pyx_kp_s_switch3_s;
static PyObject *__pyx_n_s_tau;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tr;
static PyObject *__pyx_n_s_unitcell;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_update_rvecs;
static PyObject *__pyx_n_s_view;
static PyObject *__pyx_n_s_vlist_back;
static PyObject *__pyx_n_s_vlist_forward;
static PyObject *__pyx_n_s_vlist_hessian;
static PyObject *__pyx_n_s_vols;
static PyObject *__pyx_n_s_volume;
static PyObject *__pyx_n_s_vtab;
static PyObject *__pyx_n_s_vtens;
static PyObject *__pyx_n_s_width;
static PyObject *__pyx_n_s_width_power;
static PyObject *__pyx_kp_s_width_power_s;
static PyObject *__pyx_n_s_work;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_n_s_yaff_log;
static PyObject *__pyx_n_s_yaff_pes_ext;
static PyObject *__pyx_n_s_zeros;
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_k_tuple_;
static PyObject *__pyx_k_tuple__2;
static PyObject *__pyx_k_tuple__3;
static PyObject *__pyx_k_tuple__4;
static PyObject *__pyx_k_tuple__5;
static PyObject *__pyx_k_tuple__6;
static PyObject *__pyx_k_tuple__7;
static PyObject *__pyx_k_tuple__8;
static PyObject *__pyx_k_tuple__9;
static PyObject *__pyx_k_tuple__10;
static PyObject *__pyx_k_tuple__11;
static PyObject *__pyx_k_tuple__12;
static PyObject *__pyx_k_tuple__13;
static PyObject *__pyx_k_tuple__14;
static PyObject *__pyx_k_tuple__15;
static PyObject *__pyx_k_tuple__16;
static PyObject *__pyx_k_tuple__17;
static PyObject *__pyx_k_tuple__18;
static PyObject *__pyx_k_tuple__19;
static PyObject *__pyx_k_tuple__20;
static PyObject *__pyx_k_tuple__21;
static PyObject *__pyx_k_tuple__22;
static PyObject *__pyx_k_tuple__23;
static PyObject *__pyx_k_tuple__24;
static PyObject *__pyx_k_tuple__25;
static PyObject *__pyx_k_tuple__26;
static PyObject *__pyx_k_tuple__27;
static PyObject *__pyx_k_tuple__28;
static PyObject *__pyx_k_tuple__29;
static PyObject *__pyx_k_tuple__30;
static PyObject *__pyx_k_tuple__31;
static PyObject *__pyx_k_tuple__32;
static PyObject *__pyx_k_tuple__33;
static PyObject *__pyx_k_tuple__34;
static PyObject *__pyx_k_tuple__35;
static PyObject *__pyx_k_tuple__36;
static PyObject *__pyx_k_tuple__37;
static PyObject *__pyx_k_tuple__39;
static PyObject *__pyx_k_tuple__41;
static PyObject *__pyx_k_tuple__43;
static PyObject *__pyx_k_tuple__45;
static PyObject *__pyx_k_tuple__47;
static PyObject *__pyx_k_tuple__49;
static PyObject *__pyx_k_tuple__51;
static PyObject *__pyx_k_tuple__53;
static PyObject *__pyx_k_tuple__55;
static PyObject *__pyx_k_tuple__57;
static PyObject *__pyx_k_tuple__59;
static PyObject *__pyx_k_tuple__61;
static PyObject *__pyx_k_tuple__63;
static PyObject *__pyx_k_tuple__65;
static PyObject *__pyx_k_tuple__67;
static PyObject *__pyx_k_tuple__69;
static PyObject *__pyx_k_tuple__71;
static PyObject *__pyx_k_tuple__73;
static PyObject *__pyx_k_tuple__75;
static PyObject *__pyx_k_tuple__77;
static PyObject *__pyx_k_tuple__79;
static PyObject *__pyx_k_tuple__81;
static PyObject *__pyx_k_codeobj__38;
static PyObject *__pyx_k_codeobj__40;
static PyObject *__pyx_k_codeobj__42;
static PyObject *__pyx_k_codeobj__44;
static PyObject *__pyx_k_codeobj__46;
static PyObject *__pyx_k_codeobj__48;
static PyObject *__pyx_k_codeobj__50;
static PyObject *__pyx_k_codeobj__52;
static PyObject *__pyx_k_codeobj__54;
static PyObject *__pyx_k_codeobj__56;
static PyObject *__pyx_k_codeobj__58;
static PyObject *__pyx_k_codeobj__60;
static PyObject *__pyx_k_codeobj__62;
static PyObject *__pyx_k_codeobj__64;
static PyObject *__pyx_k_codeobj__66;
static PyObject *__pyx_k_codeobj__68;
static PyObject *__pyx_k_codeobj__70;
static PyObject *__pyx_k_codeobj__72;
static PyObject *__pyx_k_codeobj__74;
static PyObject *__pyx_k_codeobj__76;
static PyObject *__pyx_k_codeobj__78;
static PyObject *__pyx_k_codeobj__80;
static PyObject *__pyx_k_codeobj__82;

/* "yaff/pes/ext.pyx":75
 *     cdef cell.cell_type* _c_cell
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_cell = cell.cell_new()
 *         if self._c_cell is NULL:
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_4Cell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_4Cell_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_4Cell___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yaff/pes/ext.pyx":76
 * 
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_cell = cell.cell_new()             # <<<<<<<<<<<<<<
 *         if self._c_cell is NULL:
 *             raise MemoryError()
 */
  __pyx_v_self->_c_cell = cell_new();

  /* "yaff/pes/ext.pyx":77
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_cell = cell.cell_new()
 *         if self._c_cell is NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_cell == NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":78
 *         self._c_cell = cell.cell_new()
 *         if self._c_cell is NULL:
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":75
 *     cdef cell.cell_type* _c_cell
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_cell = cell.cell_new()
 *         if self._c_cell is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":80
 *             raise MemoryError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_cell is not NULL:
 *             cell.cell_free(self._c_cell)
 */

/* Python wrapper */
static void __pyx_pw_4yaff_3pes_3ext_4Cell_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yaff_3pes_3ext_4Cell_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yaff_3pes_3ext_4Cell_2__dealloc__(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yaff_3pes_3ext_4Cell_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "yaff/pes/ext.pyx":81
 * 
 *     def __dealloc__(self):
 *         if self._c_cell is not NULL:             # <<<<<<<<<<<<<<
 *             cell.cell_free(self._c_cell)
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_cell != NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":82
 *     def __dealloc__(self):
 *         if self._c_cell is not NULL:
 *             cell.cell_free(self._c_cell)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, np.ndarray[double, ndim=2] rvecs):
 */
    cell_free(__pyx_v_self->_c_cell);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":80
 *             raise MemoryError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_cell is not NULL:
 *             cell.cell_free(self._c_cell)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "yaff/pes/ext.pyx":84
 *             cell.cell_free(self._c_cell)
 * 
 *     def __init__(self, np.ndarray[double, ndim=2] rvecs):             # <<<<<<<<<<<<<<
 *         '''
 *            **Arguments:**
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_4Cell_5__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_4__init__[] = "\n           **Arguments:**\n\n           rvecs\n                A numpy array with at most three cell vectors, layed out as\n                rows in a rank-2 matrix. For non-periodic systems, this array\n                must have shape (0,3).\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_4yaff_3pes_3ext_4Cell_4__init__;
#endif
static int __pyx_pw_4yaff_3pes_3ext_4Cell_5__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_rvecs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rvecs,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rvecs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_rvecs = ((PyArrayObject *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rvecs), __pyx_ptype_5numpy_ndarray, 1, "rvecs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_4__init__(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_rvecs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_4Cell_4__init__(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_rvecs) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rvecs;
  __Pyx_Buffer __pyx_pybuffer_rvecs;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);
  __pyx_pybuffer_rvecs.pybuffer.buf = NULL;
  __pyx_pybuffer_rvecs.refcount = 0;
  __pyx_pybuffernd_rvecs.data = NULL;
  __pyx_pybuffernd_rvecs.rcbuffer = &__pyx_pybuffer_rvecs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_rvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rvecs.diminfo[0].strides = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rvecs.diminfo[0].shape = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_rvecs.diminfo[1].strides = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_rvecs.diminfo[1].shape = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":93
 *                 must have shape (0,3).
 *         '''
 *         self.update_rvecs(rvecs)             # <<<<<<<<<<<<<<
 * 
 *     def update_rvecs(self, np.ndarray[double, ndim=2] rvecs):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_rvecs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_rvecs));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_rvecs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_rvecs));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "yaff/pes/ext.pyx":84
 *             cell.cell_free(self._c_cell)
 * 
 *     def __init__(self, np.ndarray[double, ndim=2] rvecs):             # <<<<<<<<<<<<<<
 *         '''
 *            **Arguments:**
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":95
 *         self.update_rvecs(rvecs)
 * 
 *     def update_rvecs(self, np.ndarray[double, ndim=2] rvecs):             # <<<<<<<<<<<<<<
 *         '''Change the cell vectors and recompute the reciprocal cell vectors.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_7update_rvecs(PyObject *__pyx_v_self, PyObject *__pyx_v_rvecs); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_6update_rvecs[] = "Cell.update_rvecs(self, ndarray rvecs)\nChange the cell vectors and recompute the reciprocal cell vectors.\n\n           rvecs\n                A numpy array with at most three cell vectors, layed out as\n                rows in a rank-2 matrix. For non-periodic systems, this array\n                must have shape (0,3).\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_7update_rvecs(PyObject *__pyx_v_self, PyObject *__pyx_v_rvecs) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_rvecs (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rvecs), __pyx_ptype_5numpy_ndarray, 1, "rvecs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_6update_rvecs(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), ((PyArrayObject *)__pyx_v_rvecs));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_6update_rvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_rvecs) {
  PyArrayObject *__pyx_v_mod_rvecs = 0;
  PyArrayObject *__pyx_v_gvecs = 0;
  int __pyx_v_nvec;
  PyObject *__pyx_v_Up = NULL;
  PyObject *__pyx_v_Sp = NULL;
  PyObject *__pyx_v_Vt = NULL;
  PyObject *__pyx_v_S = NULL;
  PyObject *__pyx_v_U = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gvecs;
  __Pyx_Buffer __pyx_pybuffer_gvecs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_mod_rvecs;
  __Pyx_Buffer __pyx_pybuffer_mod_rvecs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rvecs;
  __Pyx_Buffer __pyx_pybuffer_rvecs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyArrayObject *__pyx_t_18 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_rvecs", 0);
  __pyx_pybuffer_mod_rvecs.pybuffer.buf = NULL;
  __pyx_pybuffer_mod_rvecs.refcount = 0;
  __pyx_pybuffernd_mod_rvecs.data = NULL;
  __pyx_pybuffernd_mod_rvecs.rcbuffer = &__pyx_pybuffer_mod_rvecs;
  __pyx_pybuffer_gvecs.pybuffer.buf = NULL;
  __pyx_pybuffer_gvecs.refcount = 0;
  __pyx_pybuffernd_gvecs.data = NULL;
  __pyx_pybuffernd_gvecs.rcbuffer = &__pyx_pybuffer_gvecs;
  __pyx_pybuffer_rvecs.pybuffer.buf = NULL;
  __pyx_pybuffer_rvecs.refcount = 0;
  __pyx_pybuffernd_rvecs.data = NULL;
  __pyx_pybuffernd_rvecs.rcbuffer = &__pyx_pybuffer_rvecs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_rvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rvecs.diminfo[0].strides = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rvecs.diminfo[0].shape = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_rvecs.diminfo[1].strides = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_rvecs.diminfo[1].shape = __pyx_pybuffernd_rvecs.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":106
 *         cdef np.ndarray[double, ndim=2] gvecs
 *         cdef int nvec
 *         if rvecs is None or rvecs.size == 0:             # <<<<<<<<<<<<<<
 *             mod_rvecs = np.identity(3, float)
 *             gvecs = mod_rvecs
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_rvecs) == Py_None);
  if (!__pyx_t_1) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rvecs), __pyx_n_s_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __pyx_t_4;
  } else {
    __pyx_t_5 = __pyx_t_1;
  }
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":107
 *         cdef int nvec
 *         if rvecs is None or rvecs.size == 0:
 *             mod_rvecs = np.identity(3, float)             # <<<<<<<<<<<<<<
 *             gvecs = mod_rvecs
 *             nvec = 0
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_identity); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_6 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyArrayObject *)__pyx_t_6);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_mod_rvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
      }
      __pyx_pybuffernd_mod_rvecs.diminfo[0].strides = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_mod_rvecs.diminfo[0].shape = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_mod_rvecs.diminfo[1].strides = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_mod_rvecs.diminfo[1].shape = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_7 = 0;
    __pyx_v_mod_rvecs = ((PyArrayObject *)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "yaff/pes/ext.pyx":108
 *         if rvecs is None or rvecs.size == 0:
 *             mod_rvecs = np.identity(3, float)
 *             gvecs = mod_rvecs             # <<<<<<<<<<<<<<
 *             nvec = 0
 *         else:
 */
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_v_mod_rvecs), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_gvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_gvecs.diminfo[0].strides = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gvecs.diminfo[0].shape = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gvecs.diminfo[1].strides = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gvecs.diminfo[1].shape = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_INCREF(((PyObject *)__pyx_v_mod_rvecs));
    __pyx_v_gvecs = ((PyArrayObject *)__pyx_v_mod_rvecs);

    /* "yaff/pes/ext.pyx":109
 *             mod_rvecs = np.identity(3, float)
 *             gvecs = mod_rvecs
 *             nvec = 0             # <<<<<<<<<<<<<<
 *         else:
 *             if not rvecs.ndim==2 or not rvecs.flags['C_CONTIGUOUS'] or rvecs.shape[0] > 3 or rvecs.shape[1] != 3:
 */
    __pyx_v_nvec = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":111
 *             nvec = 0
 *         else:
 *             if not rvecs.ndim==2 or not rvecs.flags['C_CONTIGUOUS'] or rvecs.shape[0] > 3 or rvecs.shape[1] != 3:             # <<<<<<<<<<<<<<
 *                 raise TypeError('rvecs must be a C contiguous array with three columns and at most three rows.')
 *             nvec = len(rvecs)
 */
    __pyx_t_5 = ((!((__pyx_v_rvecs->nd == 2) != 0)) != 0);
    if (!__pyx_t_5) {
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rvecs), __pyx_n_s_flags); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PyObject_GetItem(__pyx_t_6, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_4 = ((!__pyx_t_1) != 0);
      if (!__pyx_t_4) {
        __pyx_t_1 = (((__pyx_v_rvecs->dimensions[0]) > 3) != 0);
        if (!__pyx_t_1) {
          __pyx_t_12 = (((__pyx_v_rvecs->dimensions[1]) != 3) != 0);
          __pyx_t_13 = __pyx_t_12;
        } else {
          __pyx_t_13 = __pyx_t_1;
        }
        __pyx_t_1 = __pyx_t_13;
      } else {
        __pyx_t_1 = __pyx_t_4;
      }
      __pyx_t_4 = __pyx_t_1;
    } else {
      __pyx_t_4 = __pyx_t_5;
    }
    if (__pyx_t_4) {

      /* "yaff/pes/ext.pyx":112
 *         else:
 *             if not rvecs.ndim==2 or not rvecs.flags['C_CONTIGUOUS'] or rvecs.shape[0] > 3 or rvecs.shape[1] != 3:
 *                 raise TypeError('rvecs must be a C contiguous array with three columns and at most three rows.')             # <<<<<<<<<<<<<<
 *             nvec = len(rvecs)
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)
 */
      __pyx_t_3 = PyObject_Call(__pyx_builtin_TypeError, __pyx_k_tuple_, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "yaff/pes/ext.pyx":113
 *             if not rvecs.ndim==2 or not rvecs.flags['C_CONTIGUOUS'] or rvecs.shape[0] > 3 or rvecs.shape[1] != 3:
 *                 raise TypeError('rvecs must be a C contiguous array with three columns and at most three rows.')
 *             nvec = len(rvecs)             # <<<<<<<<<<<<<<
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)
 *             S = np.ones(3, float)
 */
    __pyx_t_14 = PyObject_Length(((PyObject *)__pyx_v_rvecs)); if (unlikely(__pyx_t_14 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_nvec = __pyx_t_14;

    /* "yaff/pes/ext.pyx":114
 *                 raise TypeError('rvecs must be a C contiguous array with three columns and at most three rows.')
 *             nvec = len(rvecs)
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)             # <<<<<<<<<<<<<<
 *             S = np.ones(3, float)
 *             S[:nvec] = Sp
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_linalg); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_svd); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)__pyx_v_rvecs));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_rvecs));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_rvecs));
    __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_full_matrices, Py_True) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_15 = PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_15))) || (PyList_CheckExact(__pyx_t_15))) {
      PyObject* sequence = __pyx_t_15;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 3)) {
        if (size > 3) __Pyx_RaiseTooManyValuesError(3);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
      } else {
        __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
      }
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      #else
      __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    } else
    {
      Py_ssize_t index = -1;
      __pyx_t_16 = PyObject_GetIter(__pyx_t_15); if (unlikely(!__pyx_t_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_17 = Py_TYPE(__pyx_t_16)->tp_iternext;
      index = 0; __pyx_t_2 = __pyx_t_17(__pyx_t_16); if (unlikely(!__pyx_t_2)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_2);
      index = 1; __pyx_t_6 = __pyx_t_17(__pyx_t_16); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 2; __pyx_t_3 = __pyx_t_17(__pyx_t_16); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_17(__pyx_t_16), 3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_17 = NULL;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_17 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    __pyx_v_Up = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_v_Sp = __pyx_t_6;
    __pyx_t_6 = 0;
    __pyx_v_Vt = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "yaff/pes/ext.pyx":115
 *             nvec = len(rvecs)
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)
 *             S = np.ones(3, float)             # <<<<<<<<<<<<<<
 *             S[:nvec] = Sp
 *             U = np.identity(3, float)
 */
    __pyx_t_15 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_ones); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_15 = PyTuple_New(2); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_15, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_6 = PyObject_Call(__pyx_t_3, __pyx_t_15, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_v_S = __pyx_t_6;
    __pyx_t_6 = 0;

    /* "yaff/pes/ext.pyx":116
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)
 *             S = np.ones(3, float)
 *             S[:nvec] = Sp             # <<<<<<<<<<<<<<
 *             U = np.identity(3, float)
 *             U[:nvec,:nvec] = Up
 */
    if (__Pyx_PyObject_SetSlice(__pyx_v_S, __pyx_v_Sp, 0, __pyx_v_nvec, NULL, NULL, NULL, 0, 1, 1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":117
 *             S = np.ones(3, float)
 *             S[:nvec] = Sp
 *             U = np.identity(3, float)             # <<<<<<<<<<<<<<
 *             U[:nvec,:nvec] = Up
 *             mod_rvecs = np.dot(U*S, Vt)
 */
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_identity); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_6, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_3 = PyObject_Call(__pyx_t_15, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_U = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "yaff/pes/ext.pyx":118
 *             S[:nvec] = Sp
 *             U = np.identity(3, float)
 *             U[:nvec,:nvec] = Up             # <<<<<<<<<<<<<<
 *             mod_rvecs = np.dot(U*S, Vt)
 *             mod_rvecs[:nvec] = rvecs
 */
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_nvec); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PySlice_New(Py_None, __pyx_t_3, Py_None); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_nvec); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_15 = PySlice_New(Py_None, __pyx_t_3, Py_None); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_15);
    __Pyx_GIVEREF(__pyx_t_15);
    __pyx_t_6 = 0;
    __pyx_t_15 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_U, __pyx_t_3, __pyx_v_Up) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "yaff/pes/ext.pyx":119
 *             U = np.identity(3, float)
 *             U[:nvec,:nvec] = Up
 *             mod_rvecs = np.dot(U*S, Vt)             # <<<<<<<<<<<<<<
 *             mod_rvecs[:nvec] = rvecs
 *             gvecs = np.dot(U/S, Vt)
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_dot); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Multiply(__pyx_v_U, __pyx_v_S); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_Vt);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_Vt);
    __Pyx_GIVEREF(__pyx_v_Vt);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_15, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyArrayObject *)__pyx_t_3);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_mod_rvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
      }
      __pyx_pybuffernd_mod_rvecs.diminfo[0].strides = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_mod_rvecs.diminfo[0].shape = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_mod_rvecs.diminfo[1].strides = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_mod_rvecs.diminfo[1].shape = __pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_7 = 0;
    __pyx_v_mod_rvecs = ((PyArrayObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "yaff/pes/ext.pyx":120
 *             U[:nvec,:nvec] = Up
 *             mod_rvecs = np.dot(U*S, Vt)
 *             mod_rvecs[:nvec] = rvecs             # <<<<<<<<<<<<<<
 *             gvecs = np.dot(U/S, Vt)
 *         cell.cell_update(self._c_cell, <double*>mod_rvecs.data, <double*>gvecs.data, nvec)
 */
    if (__Pyx_PyObject_SetSlice(((PyObject *)__pyx_v_mod_rvecs), ((PyObject *)__pyx_v_rvecs), 0, __pyx_v_nvec, NULL, NULL, NULL, 0, 1, 1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 120; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":121
 *             mod_rvecs = np.dot(U*S, Vt)
 *             mod_rvecs[:nvec] = rvecs
 *             gvecs = np.dot(U/S, Vt)             # <<<<<<<<<<<<<<
 *         cell.cell_update(self._c_cell, <double*>mod_rvecs.data, <double*>gvecs.data, nvec)
 * 
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_dot); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_v_U, __pyx_v_S); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_15 = PyTuple_New(2); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_15);
    PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_Vt);
    PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_v_Vt);
    __Pyx_GIVEREF(__pyx_v_Vt);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_6, __pyx_t_15, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_18 = ((PyArrayObject *)__pyx_t_3);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer, (PyObject*)__pyx_t_18, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer, (PyObject*)__pyx_v_gvecs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_gvecs.diminfo[0].strides = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gvecs.diminfo[0].shape = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gvecs.diminfo[1].strides = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gvecs.diminfo[1].shape = __pyx_pybuffernd_gvecs.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_18 = 0;
    __pyx_v_gvecs = ((PyArrayObject *)__pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":122
 *             mod_rvecs[:nvec] = rvecs
 *             gvecs = np.dot(U/S, Vt)
 *         cell.cell_update(self._c_cell, <double*>mod_rvecs.data, <double*>gvecs.data, nvec)             # <<<<<<<<<<<<<<
 * 
 *     def _get_nvec(self):
 */
  cell_update(__pyx_v_self->_c_cell, ((double *)__pyx_v_mod_rvecs->data), ((double *)__pyx_v_gvecs->data), __pyx_v_nvec);

  /* "yaff/pes/ext.pyx":95
 *         self.update_rvecs(rvecs)
 * 
 *     def update_rvecs(self, np.ndarray[double, ndim=2] rvecs):             # <<<<<<<<<<<<<<
 *         '''Change the cell vectors and recompute the reciprocal cell vectors.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.update_rvecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gvecs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mod_rvecs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rvecs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_mod_rvecs);
  __Pyx_XDECREF((PyObject *)__pyx_v_gvecs);
  __Pyx_XDECREF(__pyx_v_Up);
  __Pyx_XDECREF(__pyx_v_Sp);
  __Pyx_XDECREF(__pyx_v_Vt);
  __Pyx_XDECREF(__pyx_v_S);
  __Pyx_XDECREF(__pyx_v_U);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":124
 *         cell.cell_update(self._c_cell, <double*>mod_rvecs.data, <double*>gvecs.data, nvec)
 * 
 *     def _get_nvec(self):             # <<<<<<<<<<<<<<
 *         '''The number of cell vectors'''
 *         return cell.cell_get_nvec(self._c_cell)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_9_get_nvec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_8_get_nvec[] = "Cell._get_nvec(self)\nThe number of cell vectors";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_9_get_nvec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_nvec (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_8_get_nvec(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_8_get_nvec(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_nvec", 0);

  /* "yaff/pes/ext.pyx":126
 *     def _get_nvec(self):
 *         '''The number of cell vectors'''
 *         return cell.cell_get_nvec(self._c_cell)             # <<<<<<<<<<<<<<
 * 
 *     nvec = property(_get_nvec)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(cell_get_nvec(__pyx_v_self->_c_cell)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":124
 *         cell.cell_update(self._c_cell, <double*>mod_rvecs.data, <double*>gvecs.data, nvec)
 * 
 *     def _get_nvec(self):             # <<<<<<<<<<<<<<
 *         '''The number of cell vectors'''
 *         return cell.cell_get_nvec(self._c_cell)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_nvec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":130
 *     nvec = property(_get_nvec)
 * 
 *     def _get_volume(self):             # <<<<<<<<<<<<<<
 *         '''The generalize volume of the unit cell (length, area or volume)'''
 *         return cell.cell_get_volume(self._c_cell)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_11_get_volume(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_10_get_volume[] = "Cell._get_volume(self)\nThe generalize volume of the unit cell (length, area or volume)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_11_get_volume(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_volume (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_10_get_volume(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_10_get_volume(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_volume", 0);

  /* "yaff/pes/ext.pyx":132
 *     def _get_volume(self):
 *         '''The generalize volume of the unit cell (length, area or volume)'''
 *         return cell.cell_get_volume(self._c_cell)             # <<<<<<<<<<<<<<
 * 
 *     volume = property(_get_volume)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(cell_get_volume(__pyx_v_self->_c_cell)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":130
 *     nvec = property(_get_nvec)
 * 
 *     def _get_volume(self):             # <<<<<<<<<<<<<<
 *         '''The generalize volume of the unit cell (length, area or volume)'''
 *         return cell.cell_get_volume(self._c_cell)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_volume", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":136
 *     volume = property(_get_volume)
 * 
 *     def _get_rvecs(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The real-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_13_get_rvecs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_12_get_rvecs[] = "Cell._get_rvecs(self, full=False)\nThe real-space cell vectors, layed out as rows.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_13_get_rvecs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_full = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_rvecs (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_full,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_full);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_get_rvecs") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_full = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_get_rvecs", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_rvecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_12_get_rvecs(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_full);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_12_get_rvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full) {
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_rvecs", 0);
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;

  /* "yaff/pes/ext.pyx":139
 *         '''The real-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:             # <<<<<<<<<<<<<<
 *             result = np.zeros((3, 3), float)
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":140
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:
 *             result = np.zeros((3, 3), float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_k_tuple__2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_k_tuple__2);
    __Pyx_GIVEREF(__pyx_k_tuple__2);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_result.diminfo[1].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_result.diminfo[1].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":142
 *             result = np.zeros((3, 3), float)
 *         else:
 *             result = np.zeros((self.nvec, 3), float)             # <<<<<<<<<<<<<<
 *         cell.cell_copy_rvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_3);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_7);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_result.diminfo[1].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_result.diminfo[1].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":143
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 *         cell.cell_copy_rvecs(self._c_cell, <double*>result.data, full)             # <<<<<<<<<<<<<<
 *         result.setflags(write=False)
 *         return result
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  cell_copy_rvecs(__pyx_v_self->_c_cell, ((double *)__pyx_v_result->data), __pyx_t_1);

  /* "yaff/pes/ext.pyx":144
 *             result = np.zeros((self.nvec, 3), float)
 *         cell.cell_copy_rvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_setflags); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_write, Py_False) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":145
 *         cell.cell_copy_rvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     rvecs = property(_get_rvecs)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":136
 *     volume = property(_get_volume)
 * 
 *     def _get_rvecs(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The real-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_rvecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":149
 *     rvecs = property(_get_rvecs)
 * 
 *     def _get_gvecs(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The reciporcal-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_15_get_gvecs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_14_get_gvecs[] = "Cell._get_gvecs(self, full=False)\nThe reciporcal-space cell vectors, layed out as rows.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_15_get_gvecs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_full = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_gvecs (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_full,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_full);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_get_gvecs") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_full = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_get_gvecs", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_gvecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_14_get_gvecs(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_full);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_14_get_gvecs(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full) {
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_gvecs", 0);
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;

  /* "yaff/pes/ext.pyx":152
 *         '''The reciporcal-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:             # <<<<<<<<<<<<<<
 *             result = np.zeros((3, 3), float)
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":153
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:
 *             result = np.zeros((3, 3), float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_k_tuple__3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_k_tuple__3);
    __Pyx_GIVEREF(__pyx_k_tuple__3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_result.diminfo[1].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_result.diminfo[1].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":155
 *             result = np.zeros((3, 3), float)
 *         else:
 *             result = np.zeros((self.nvec, 3), float)             # <<<<<<<<<<<<<<
 *         cell.cell_copy_gvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_3);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_7);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_result.diminfo[1].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_result.diminfo[1].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[1];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":156
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 *         cell.cell_copy_gvecs(self._c_cell, <double*>result.data, full)             # <<<<<<<<<<<<<<
 *         result.setflags(write=False)
 *         return result
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  cell_copy_gvecs(__pyx_v_self->_c_cell, ((double *)__pyx_v_result->data), __pyx_t_1);

  /* "yaff/pes/ext.pyx":157
 *             result = np.zeros((self.nvec, 3), float)
 *         cell.cell_copy_gvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_setflags); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_write, Py_False) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":158
 *         cell.cell_copy_gvecs(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     gvecs = property(_get_gvecs)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":149
 *     rvecs = property(_get_rvecs)
 * 
 *     def _get_gvecs(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The reciporcal-space cell vectors, layed out as rows.'''
 *         cdef np.ndarray[double, ndim=2] result
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_gvecs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":162
 *     gvecs = property(_get_gvecs)
 * 
 *     def _get_rspacings(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The (orthogonal) spacing between opposite sides of the real-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_17_get_rspacings(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_16_get_rspacings[] = "Cell._get_rspacings(self, full=False)\nThe (orthogonal) spacing between opposite sides of the real-space unit cell.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_17_get_rspacings(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_full = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_rspacings (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_full,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_full);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_get_rspacings") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_full = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_get_rspacings", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_rspacings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_16_get_rspacings(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_full);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_16_get_rspacings(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full) {
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_rspacings", 0);
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;

  /* "yaff/pes/ext.pyx":165
 *         '''The (orthogonal) spacing between opposite sides of the real-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 *         if full:             # <<<<<<<<<<<<<<
 *             result = np.zeros(3, float)
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":166
 *         cdef np.ndarray[double, ndim=1] result
 *         if full:
 *             result = np.zeros(3, float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros(self.nvec, float)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":168
 *             result = np.zeros(3, float)
 *         else:
 *             result = np.zeros(self.nvec, float)             # <<<<<<<<<<<<<<
 *         cell.cell_copy_rspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_7);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":169
 *         else:
 *             result = np.zeros(self.nvec, float)
 *         cell.cell_copy_rspacings(self._c_cell, <double*>result.data, full)             # <<<<<<<<<<<<<<
 *         result.setflags(write=False)
 *         return result
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  cell_copy_rspacings(__pyx_v_self->_c_cell, ((double *)__pyx_v_result->data), __pyx_t_1);

  /* "yaff/pes/ext.pyx":170
 *             result = np.zeros(self.nvec, float)
 *         cell.cell_copy_rspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_setflags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_write, Py_False) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":171
 *         cell.cell_copy_rspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     rspacings = property(_get_rspacings)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":162
 *     gvecs = property(_get_gvecs)
 * 
 *     def _get_rspacings(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The (orthogonal) spacing between opposite sides of the real-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_rspacings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":175
 *     rspacings = property(_get_rspacings)
 * 
 *     def _get_gspacings(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The (orthogonal) spacing between opposite sides of the reciprocal-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_19_get_gspacings(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_18_get_gspacings[] = "Cell._get_gspacings(self, full=False)\nThe (orthogonal) spacing between opposite sides of the reciprocal-space unit cell.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_19_get_gspacings(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_full = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_gspacings (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_full,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_full);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_get_gspacings") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_full = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_get_gspacings", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_gspacings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_18_get_gspacings(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_full);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_18_get_gspacings(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyObject *__pyx_v_full) {
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_gspacings", 0);
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;

  /* "yaff/pes/ext.pyx":178
 *         '''The (orthogonal) spacing between opposite sides of the reciprocal-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 *         if full:             # <<<<<<<<<<<<<<
 *             result = np.zeros(3, float)
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":179
 *         cdef np.ndarray[double, ndim=1] result
 *         if full:
 *             result = np.zeros(3, float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros(self.nvec, float)
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_int_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_3);
    __Pyx_GIVEREF(__pyx_int_3);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":181
 *             result = np.zeros(3, float)
 *         else:
 *             result = np.zeros(self.nvec, float)             # <<<<<<<<<<<<<<
 *         cell.cell_copy_gspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)((PyObject*)(&PyFloat_Type))));
    __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyFloat_Type))));
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_7);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        }
      }
      __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_5 = 0;
    __pyx_v_result = ((PyArrayObject *)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":182
 *         else:
 *             result = np.zeros(self.nvec, float)
 *         cell.cell_copy_gspacings(self._c_cell, <double*>result.data, full)             # <<<<<<<<<<<<<<
 *         result.setflags(write=False)
 *         return result
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_full); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  cell_copy_gspacings(__pyx_v_self->_c_cell, ((double *)__pyx_v_result->data), __pyx_t_1);

  /* "yaff/pes/ext.pyx":183
 *             result = np.zeros(self.nvec, float)
 *         cell.cell_copy_gspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_result), __pyx_n_s_setflags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_write, Py_False) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":184
 *         cell.cell_copy_gspacings(self._c_cell, <double*>result.data, full)
 *         result.setflags(write=False)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     gspacings = property(_get_gspacings)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":175
 *     rspacings = property(_get_rspacings)
 * 
 *     def _get_gspacings(self, full=False):             # <<<<<<<<<<<<<<
 *         '''The (orthogonal) spacing between opposite sides of the reciprocal-space unit cell.'''
 *         cdef np.ndarray[double, ndim=1] result
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_gspacings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":188
 *     gspacings = property(_get_gspacings)
 * 
 *     def _get_parameters(self):             # <<<<<<<<<<<<<<
 *         '''The cell parameters (lengths and angles)'''
 *         rvecs = self._get_rvecs()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_21_get_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_20_get_parameters[] = "Cell._get_parameters(self)\nThe cell parameters (lengths and angles)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_21_get_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_20_get_parameters(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_20_get_parameters(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self) {
  PyObject *__pyx_v_rvecs = NULL;
  PyObject *__pyx_v_tmp = NULL;
  PyObject *__pyx_v_lengths = NULL;
  PyObject *__pyx_v_cosines = NULL;
  PyObject *__pyx_v_angles = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_parameters", 0);

  /* "yaff/pes/ext.pyx":190
 *     def _get_parameters(self):
 *         '''The cell parameters (lengths and angles)'''
 *         rvecs = self._get_rvecs()             # <<<<<<<<<<<<<<
 *         tmp = np.dot(rvecs, rvecs.T)
 *         lengths = np.sqrt(np.diag(tmp))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_rvecs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_rvecs = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":191
 *         '''The cell parameters (lengths and angles)'''
 *         rvecs = self._get_rvecs()
 *         tmp = np.dot(rvecs, rvecs.T)             # <<<<<<<<<<<<<<
 *         lengths = np.sqrt(np.diag(tmp))
 *         tmp /= lengths
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_dot); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_rvecs, __pyx_n_s_T); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_rvecs);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_rvecs);
  __Pyx_GIVEREF(__pyx_v_rvecs);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_tmp = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":192
 *         rvecs = self._get_rvecs()
 *         tmp = np.dot(rvecs, rvecs.T)
 *         lengths = np.sqrt(np.diag(tmp))             # <<<<<<<<<<<<<<
 *         tmp /= lengths
 *         tmp /= lengths.reshape((-1,1))
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_diag); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_tmp);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_tmp);
  __Pyx_GIVEREF(__pyx_v_tmp);
  __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_lengths = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":193
 *         tmp = np.dot(rvecs, rvecs.T)
 *         lengths = np.sqrt(np.diag(tmp))
 *         tmp /= lengths             # <<<<<<<<<<<<<<
 *         tmp /= lengths.reshape((-1,1))
 *         if len(rvecs) < 2:
 */
  __pyx_t_4 = __Pyx_PyNumber_InPlaceDivide(__pyx_v_tmp, __pyx_v_lengths); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF_SET(__pyx_v_tmp, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":194
 *         lengths = np.sqrt(np.diag(tmp))
 *         tmp /= lengths
 *         tmp /= lengths.reshape((-1,1))             # <<<<<<<<<<<<<<
 *         if len(rvecs) < 2:
 *             cosines = np.array([])
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_lengths, __pyx_n_s_reshape); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_k_tuple__5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyNumber_InPlaceDivide(__pyx_v_tmp, __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_tmp, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":195
 *         tmp /= lengths
 *         tmp /= lengths.reshape((-1,1))
 *         if len(rvecs) < 2:             # <<<<<<<<<<<<<<
 *             cosines = np.array([])
 *         elif len(rvecs) == 2:
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_rvecs); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = ((__pyx_t_5 < 2) != 0);
  if (__pyx_t_6) {

    /* "yaff/pes/ext.pyx":196
 *         tmp /= lengths.reshape((-1,1))
 *         if len(rvecs) < 2:
 *             cosines = np.array([])             # <<<<<<<<<<<<<<
 *         elif len(rvecs) == 2:
 *             cosines = np.array([tmp[0,1]])
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_cosines = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L3;
  }

  /* "yaff/pes/ext.pyx":197
 *         if len(rvecs) < 2:
 *             cosines = np.array([])
 *         elif len(rvecs) == 2:             # <<<<<<<<<<<<<<
 *             cosines = np.array([tmp[0,1]])
 *         else:
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_rvecs); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = ((__pyx_t_5 == 2) != 0);
  if (__pyx_t_6) {

    /* "yaff/pes/ext.pyx":198
 *             cosines = np.array([])
 *         elif len(rvecs) == 2:
 *             cosines = np.array([tmp[0,1]])             # <<<<<<<<<<<<<<
 *         else:
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(__pyx_v_tmp, __pyx_k_tuple__6); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_cosines = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":200
 *             cosines = np.array([tmp[0,1]])
 *         else:
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])             # <<<<<<<<<<<<<<
 *         angles = np.arccos(np.clip(cosines, -1, 1))
 *         return lengths, angles
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetItem(__pyx_v_tmp, __pyx_k_tuple__7); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_GetItem(__pyx_v_tmp, __pyx_k_tuple__8); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyObject_GetItem(__pyx_v_tmp, __pyx_k_tuple__9); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyList_New(3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_cosines = __pyx_t_7;
    __pyx_t_7 = 0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":201
 *         else:
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])
 *         angles = np.arccos(np.clip(cosines, -1, 1))             # <<<<<<<<<<<<<<
 *         return lengths, angles
 * 
 */
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_arccos); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_clip); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_INCREF(__pyx_v_cosines);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_cosines);
  __Pyx_GIVEREF(__pyx_v_cosines);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __pyx_t_3 = PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_v_angles = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "yaff/pes/ext.pyx":202
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])
 *         angles = np.arccos(np.clip(cosines, -1, 1))
 *         return lengths, angles             # <<<<<<<<<<<<<<
 * 
 *     parameters = property(_get_parameters)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_lengths);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_lengths);
  __Pyx_GIVEREF(__pyx_v_lengths);
  __Pyx_INCREF(__pyx_v_angles);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_angles);
  __Pyx_GIVEREF(__pyx_v_angles);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":188
 *     gspacings = property(_get_gspacings)
 * 
 *     def _get_parameters(self):             # <<<<<<<<<<<<<<
 *         '''The cell parameters (lengths and angles)'''
 *         rvecs = self._get_rvecs()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("yaff.pes.ext.Cell._get_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rvecs);
  __Pyx_XDECREF(__pyx_v_tmp);
  __Pyx_XDECREF(__pyx_v_lengths);
  __Pyx_XDECREF(__pyx_v_cosines);
  __Pyx_XDECREF(__pyx_v_angles);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":206
 *     parameters = property(_get_parameters)
 * 
 *     def mic(self, np.ndarray[double, ndim=1] delta):             # <<<<<<<<<<<<<<
 *         """Apply the minimum image convention to delta in-place"""
 *         assert delta.size == 3
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_23mic(PyObject *__pyx_v_self, PyObject *__pyx_v_delta); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_22mic[] = "Cell.mic(self, ndarray delta)\nApply the minimum image convention to delta in-place";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_23mic(PyObject *__pyx_v_self, PyObject *__pyx_v_delta) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mic (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_delta), __pyx_ptype_5numpy_ndarray, 1, "delta", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_22mic(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), ((PyArrayObject *)__pyx_v_delta));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_22mic(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_delta) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_delta;
  __Pyx_Buffer __pyx_pybuffer_delta;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("mic", 0);
  __pyx_pybuffer_delta.pybuffer.buf = NULL;
  __pyx_pybuffer_delta.refcount = 0;
  __pyx_pybuffernd_delta.data = NULL;
  __pyx_pybuffernd_delta.rcbuffer = &__pyx_pybuffer_delta;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_delta.rcbuffer->pybuffer, (PyObject*)__pyx_v_delta, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_delta.diminfo[0].strides = __pyx_pybuffernd_delta.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_delta.diminfo[0].shape = __pyx_pybuffernd_delta.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":208
 *     def mic(self, np.ndarray[double, ndim=1] delta):
 *         """Apply the minimum image convention to delta in-place"""
 *         assert delta.size == 3             # <<<<<<<<<<<<<<
 *         cell.cell_mic(<double*> delta.data, self._c_cell)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_delta), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":209
 *         """Apply the minimum image convention to delta in-place"""
 *         assert delta.size == 3
 *         cell.cell_mic(<double*> delta.data, self._c_cell)             # <<<<<<<<<<<<<<
 * 
 *     def to_center(self, np.ndarray[double, ndim=1] pos):
 */
  cell_mic(((double *)__pyx_v_delta->data), __pyx_v_self->_c_cell);

  /* "yaff/pes/ext.pyx":206
 *     parameters = property(_get_parameters)
 * 
 *     def mic(self, np.ndarray[double, ndim=1] delta):             # <<<<<<<<<<<<<<
 *         """Apply the minimum image convention to delta in-place"""
 *         assert delta.size == 3
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_delta.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.mic", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_delta.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":211
 *         cell.cell_mic(<double*> delta.data, self._c_cell)
 * 
 *     def to_center(self, np.ndarray[double, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         '''Return the corresponding position in the central cell'''
 *         assert pos.size == 3
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_25to_center(PyObject *__pyx_v_self, PyObject *__pyx_v_pos); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_24to_center[] = "Cell.to_center(self, ndarray pos)\nReturn the corresponding position in the central cell";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_25to_center(PyObject *__pyx_v_self, PyObject *__pyx_v_pos) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("to_center (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_24to_center(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), ((PyArrayObject *)__pyx_v_pos));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_24to_center(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_pos) {
  PyArrayObject *__pyx_v_result = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_result;
  __Pyx_Buffer __pyx_pybuffer_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("to_center", 0);
  __pyx_pybuffer_result.pybuffer.buf = NULL;
  __pyx_pybuffer_result.refcount = 0;
  __pyx_pybuffernd_result.data = NULL;
  __pyx_pybuffernd_result.rcbuffer = &__pyx_pybuffer_result;
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":213
 *     def to_center(self, np.ndarray[double, ndim=1] pos):
 *         '''Return the corresponding position in the central cell'''
 *         assert pos.size == 3             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[long, ndim=1] result
 *         result = np.zeros(self.nvec, int)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":215
 *         assert pos.size == 3
 *         cdef np.ndarray[long, ndim=1] result
 *         result = np.zeros(self.nvec, int)             # <<<<<<<<<<<<<<
 *         cell.cell_to_center(<double*> pos.data, self._c_cell, <long*> result.data)
 *         return result
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)((PyObject*)(&PyInt_Type))));
  PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)((PyObject*)(&PyInt_Type))));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyInt_Type))));
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = ((PyArrayObject *)__pyx_t_2);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
    __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_6 < 0)) {
      PyErr_Fetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_result.rcbuffer->pybuffer, (PyObject*)__pyx_v_result, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
      }
    }
    __pyx_pybuffernd_result.diminfo[0].strides = __pyx_pybuffernd_result.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_result.diminfo[0].shape = __pyx_pybuffernd_result.rcbuffer->pybuffer.shape[0];
    if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_5 = 0;
  __pyx_v_result = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":216
 *         cdef np.ndarray[long, ndim=1] result
 *         result = np.zeros(self.nvec, int)
 *         cell.cell_to_center(<double*> pos.data, self._c_cell, <long*> result.data)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  cell_to_center(((double *)__pyx_v_pos->data), __pyx_v_self->_c_cell, ((long *)__pyx_v_result->data));

  /* "yaff/pes/ext.pyx":217
 *         result = np.zeros(self.nvec, int)
 *         cell.cell_to_center(<double*> pos.data, self._c_cell, <long*> result.data)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     def add_vec(self, np.ndarray[double, ndim=1] delta, np.ndarray[long, ndim=1] r):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":211
 *         cell.cell_mic(<double*> delta.data, self._c_cell)
 * 
 *     def to_center(self, np.ndarray[double, ndim=1] pos):             # <<<<<<<<<<<<<<
 *         '''Return the corresponding position in the central cell'''
 *         assert pos.size == 3
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.to_center", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_result.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":219
 *         return result
 * 
 *     def add_vec(self, np.ndarray[double, ndim=1] delta, np.ndarray[long, ndim=1] r):             # <<<<<<<<<<<<<<
 *         """Add a linear combination of cell vectors, ``r``, to ``delta`` in-place
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_27add_vec(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_26add_vec[] = "Cell.add_vec(self, ndarray delta, ndarray r)\nAdd a linear combination of cell vectors, ``r``, to ``delta`` in-place\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_27add_vec(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_delta = 0;
  PyArrayObject *__pyx_v_r = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_vec (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_delta,&__pyx_n_s_r,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_delta)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("add_vec", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "add_vec") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_delta = ((PyArrayObject *)values[0]);
    __pyx_v_r = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_vec", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell.add_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_delta), __pyx_ptype_5numpy_ndarray, 1, "delta", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r), __pyx_ptype_5numpy_ndarray, 1, "r", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_26add_vec(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_delta, __pyx_v_r);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_26add_vec(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_delta, PyArrayObject *__pyx_v_r) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_delta;
  __Pyx_Buffer __pyx_pybuffer_delta;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r;
  __Pyx_Buffer __pyx_pybuffer_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_vec", 0);
  __pyx_pybuffer_delta.pybuffer.buf = NULL;
  __pyx_pybuffer_delta.refcount = 0;
  __pyx_pybuffernd_delta.data = NULL;
  __pyx_pybuffernd_delta.rcbuffer = &__pyx_pybuffer_delta;
  __pyx_pybuffer_r.pybuffer.buf = NULL;
  __pyx_pybuffer_r.refcount = 0;
  __pyx_pybuffernd_r.data = NULL;
  __pyx_pybuffernd_r.rcbuffer = &__pyx_pybuffer_r;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_delta.rcbuffer->pybuffer, (PyObject*)__pyx_v_delta, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_delta.diminfo[0].strides = __pyx_pybuffernd_delta.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_delta.diminfo[0].shape = __pyx_pybuffernd_delta.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r.rcbuffer->pybuffer, (PyObject*)__pyx_v_r, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_r.diminfo[0].strides = __pyx_pybuffernd_r.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r.diminfo[0].shape = __pyx_pybuffernd_r.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":222
 *         """Add a linear combination of cell vectors, ``r``, to ``delta`` in-place
 *         """
 *         assert delta.size == 3             # <<<<<<<<<<<<<<
 *         assert r.size == self.nvec
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_delta), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":223
 *         """
 *         assert delta.size == 3
 *         assert r.size == self.nvec             # <<<<<<<<<<<<<<
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_r), __pyx_n_s_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":224
 *         assert delta.size == 3
 *         assert r.size == self.nvec
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)             # <<<<<<<<<<<<<<
 * 
 *     def compute_distances(self, np.ndarray[double, ndim=1] output,
 */
  cell_add_vec(((double *)__pyx_v_delta->data), __pyx_v_self->_c_cell, ((long *)__pyx_v_r->data));

  /* "yaff/pes/ext.pyx":219
 *         return result
 * 
 *     def add_vec(self, np.ndarray[double, ndim=1] delta, np.ndarray[long, ndim=1] r):             # <<<<<<<<<<<<<<
 *         """Add a linear combination of cell vectors, ``r``, to ``delta`` in-place
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_delta.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.add_vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_delta.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":226
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)
 * 
 *     def compute_distances(self, np.ndarray[double, ndim=1] output,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=2] pos0,
 *                           np.ndarray[double, ndim=2] pos1=None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_29compute_distances(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4Cell_28compute_distances[] = "Cell.compute_distances(self, ndarray output, ndarray pos0, ndarray pos1=None, ndarray pairs=None, bool do_include=False, long nimage=0)\nComputes all distances between the given coordinates\n\n           **Arguments:**\n\n           output\n                An numpy vector of the proper length that will be used to store\n                all the distances.\n\n           pos0\n                An array with Cartesian coordinates\n\n           **Optional arguments:**\n\n           pos1\n                A second array with Cartesian coordinates\n\n           pairs\n                A sorted array of atom pairs. When do_include==False, this list\n                will be excluded from the computation. When do_include==True,\n                only these pairs are considered when computing distances.\n\n                The indexes in this array refer to rows of pos0 or pos1. If pos1\n                is not given, both columns refer to rows of pos0. If pos1 is\n                given, the first column refers to rows of pos0 and the second\n                column refers to rows of pos1. The rows in the pairst array\n                should be sorted lexicographically, first along the first\n                column, then along the second column.\n\n           do_include\n                True or False, controls how the pairs list is interpreted. When\n                set to True, nimage must be zero and the pairs attribute must be\n                a non-empty array.\n\n           nimage\n                The number of cell images to consider in the computation of the\n                pair distances. By default, this is zero, meaning that only the\n                minimum image convention is used.\n\n           This routine can operate in two different ways, depending on the\n           presence/absence of the argument ``pos1``. If not given, all\n           distances between points in ``pos0`` are computed and the length of\n           the output array is ``len(pos0)*(len(pos0)-1)/2``."" If ``pos1`` is\n           given, all distances are computed between a point in ``pos0`` and a\n           point in ``pos1`` and the length of the output array is\n           ``len(pos0)*len(pos1)``.\n\n           In both cases, some pairs of atoms may be\n           excluded from the output with the ``exclude`` argument. In typical\n           cases, this list of excluded pairs is relatively short. In case,\n           the exclude argument is present the number of computed distances\n           is less than explained above, but it is recommended to still use\n           those sizes in case some pairs in the excluded list are not\n           applicable.\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_4Cell_29compute_distances(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_output = 0;
  PyArrayObject *__pyx_v_pos0 = 0;
  PyArrayObject *__pyx_v_pos1 = 0;
  PyArrayObject *__pyx_v_pairs = 0;
  int __pyx_v_do_include;
  long __pyx_v_nimage;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_distances (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_output,&__pyx_n_s_pos0,&__pyx_n_s_pos1,&__pyx_n_s_pairs,&__pyx_n_s_do_include,&__pyx_n_s_nimage,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":228
 *     def compute_distances(self, np.ndarray[double, ndim=1] output,
 *                           np.ndarray[double, ndim=2] pos0,
 *                           np.ndarray[double, ndim=2] pos1=None,             # <<<<<<<<<<<<<<
 *                           np.ndarray[long, ndim=2] pairs=None,
 *                           bint do_include=False,
 */
    values[2] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":229
 *                           np.ndarray[double, ndim=2] pos0,
 *                           np.ndarray[double, ndim=2] pos1=None,
 *                           np.ndarray[long, ndim=2] pairs=None,             # <<<<<<<<<<<<<<
 *                           bint do_include=False,
 *                           long nimage=0):
 */
    values[3] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_output)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_distances", 0, 2, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos1);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pairs);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_do_include);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nimage);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_distances") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_output = ((PyArrayObject *)values[0]);
    __pyx_v_pos0 = ((PyArrayObject *)values[1]);
    __pyx_v_pos1 = ((PyArrayObject *)values[2]);
    __pyx_v_pairs = ((PyArrayObject *)values[3]);
    if (values[4]) {
      __pyx_v_do_include = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_do_include == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "yaff/pes/ext.pyx":230
 *                           np.ndarray[double, ndim=2] pos1=None,
 *                           np.ndarray[long, ndim=2] pairs=None,
 *                           bint do_include=False,             # <<<<<<<<<<<<<<
 *                           long nimage=0):
 *         """Computes all distances between the given coordinates
 */
      __pyx_v_do_include = ((int)0);
    }
    if (values[5]) {
      __pyx_v_nimage = __Pyx_PyInt_As_long(values[5]); if (unlikely((__pyx_v_nimage == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_nimage = ((long)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_distances", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Cell.compute_distances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_output), __pyx_ptype_5numpy_ndarray, 1, "output", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos0), __pyx_ptype_5numpy_ndarray, 1, "pos0", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos1), __pyx_ptype_5numpy_ndarray, 1, "pos1", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pairs), __pyx_ptype_5numpy_ndarray, 1, "pairs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4Cell_28compute_distances(((struct __pyx_obj_4yaff_3pes_3ext_Cell *)__pyx_v_self), __pyx_v_output, __pyx_v_pos0, __pyx_v_pos1, __pyx_v_pairs, __pyx_v_do_include, __pyx_v_nimage);

  /* "yaff/pes/ext.pyx":226
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)
 * 
 *     def compute_distances(self, np.ndarray[double, ndim=1] output,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=2] pos0,
 *                           np.ndarray[double, ndim=2] pos1=None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4Cell_28compute_distances(struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_self, PyArrayObject *__pyx_v_output, PyArrayObject *__pyx_v_pos0, PyArrayObject *__pyx_v_pos1, PyArrayObject *__pyx_v_pairs, int __pyx_v_do_include, long __pyx_v_nimage) {
  long *__pyx_v_pairs_pointer;
  PyObject *__pyx_v_natom0 = NULL;
  PyObject *__pyx_v_npair = NULL;
  PyObject *__pyx_v_factor = NULL;
  PyObject *__pyx_v_natom1 = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_output;
  __Pyx_Buffer __pyx_pybuffer_output;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pairs;
  __Pyx_Buffer __pyx_pybuffer_pairs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos0;
  __Pyx_Buffer __pyx_pybuffer_pos0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos1;
  __Pyx_Buffer __pyx_pybuffer_pos1;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  long __pyx_t_6;
  long __pyx_t_7;
  long __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_distances", 0);
  __pyx_pybuffer_output.pybuffer.buf = NULL;
  __pyx_pybuffer_output.refcount = 0;
  __pyx_pybuffernd_output.data = NULL;
  __pyx_pybuffernd_output.rcbuffer = &__pyx_pybuffer_output;
  __pyx_pybuffer_pos0.pybuffer.buf = NULL;
  __pyx_pybuffer_pos0.refcount = 0;
  __pyx_pybuffernd_pos0.data = NULL;
  __pyx_pybuffernd_pos0.rcbuffer = &__pyx_pybuffer_pos0;
  __pyx_pybuffer_pos1.pybuffer.buf = NULL;
  __pyx_pybuffer_pos1.refcount = 0;
  __pyx_pybuffernd_pos1.data = NULL;
  __pyx_pybuffernd_pos1.rcbuffer = &__pyx_pybuffer_pos1;
  __pyx_pybuffer_pairs.pybuffer.buf = NULL;
  __pyx_pybuffer_pairs.refcount = 0;
  __pyx_pybuffernd_pairs.data = NULL;
  __pyx_pybuffernd_pairs.rcbuffer = &__pyx_pybuffer_pairs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_output.rcbuffer->pybuffer, (PyObject*)__pyx_v_output, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_output.diminfo[0].strides = __pyx_pybuffernd_output.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_output.diminfo[0].shape = __pyx_pybuffernd_output.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos0.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos0, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos0.diminfo[0].strides = __pyx_pybuffernd_pos0.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos0.diminfo[0].shape = __pyx_pybuffernd_pos0.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos0.diminfo[1].strides = __pyx_pybuffernd_pos0.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos0.diminfo[1].shape = __pyx_pybuffernd_pos0.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos1.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos1, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos1.diminfo[0].strides = __pyx_pybuffernd_pos1.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos1.diminfo[0].shape = __pyx_pybuffernd_pos1.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos1.diminfo[1].strides = __pyx_pybuffernd_pos1.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos1.diminfo[1].shape = __pyx_pybuffernd_pos1.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pairs.rcbuffer->pybuffer, (PyObject*)__pyx_v_pairs, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pairs.diminfo[0].strides = __pyx_pybuffernd_pairs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pairs.diminfo[0].shape = __pyx_pybuffernd_pairs.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pairs.diminfo[1].strides = __pyx_pybuffernd_pairs.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pairs.diminfo[1].shape = __pyx_pybuffernd_pairs.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":288
 *         cdef long* pairs_pointer
 * 
 *         assert pos0.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert pos0.flags['C_CONTIGUOUS']
 *         assert nimage >= 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos0->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":289
 * 
 *         assert pos0.shape[1] == 3
 *         assert pos0.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert nimage >= 0
 *         natom0 = pos0.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos0), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":290
 *         assert pos0.shape[1] == 3
 *         assert pos0.flags['C_CONTIGUOUS']
 *         assert nimage >= 0             # <<<<<<<<<<<<<<
 *         natom0 = pos0.shape[0]
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_nimage >= 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":291
 *         assert pos0.flags['C_CONTIGUOUS']
 *         assert nimage >= 0
 *         natom0 = pos0.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         if pairs is not None:
 */
  __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_pos0->dimensions[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_natom0 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":293
 *         natom0 = pos0.shape[0]
 * 
 *         if pairs is not None:             # <<<<<<<<<<<<<<
 *             assert pairs.shape[1] == 2
 *             assert pairs.flags['C_CONTIGUOUS']
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_pairs) != Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":294
 * 
 *         if pairs is not None:
 *             assert pairs.shape[1] == 2             # <<<<<<<<<<<<<<
 *             assert pairs.flags['C_CONTIGUOUS']
 *             pairs_pointer = <long*> pairs.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_pairs->dimensions[1]) == 2) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":295
 *         if pairs is not None:
 *             assert pairs.shape[1] == 2
 *             assert pairs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             pairs_pointer = <long*> pairs.data
 *             npair = pairs.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pairs), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":296
 *             assert pairs.shape[1] == 2
 *             assert pairs.flags['C_CONTIGUOUS']
 *             pairs_pointer = <long*> pairs.data             # <<<<<<<<<<<<<<
 *             npair = pairs.shape[0]
 *         else:
 */
    __pyx_v_pairs_pointer = ((long *)__pyx_v_pairs->data);

    /* "yaff/pes/ext.pyx":297
 *             assert pairs.flags['C_CONTIGUOUS']
 *             pairs_pointer = <long*> pairs.data
 *             npair = pairs.shape[0]             # <<<<<<<<<<<<<<
 *         else:
 *             pairs_pointer = NULL
 */
    __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_pairs->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_npair = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":299
 *             npair = pairs.shape[0]
 *         else:
 *             pairs_pointer = NULL             # <<<<<<<<<<<<<<
 *             npair = 0
 * 
 */
    __pyx_v_pairs_pointer = NULL;

    /* "yaff/pes/ext.pyx":300
 *         else:
 *             pairs_pointer = NULL
 *             npair = 0             # <<<<<<<<<<<<<<
 * 
 *         if nimage > 0:
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_npair = __pyx_int_0;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":302
 *             npair = 0
 * 
 *         if nimage > 0:             # <<<<<<<<<<<<<<
 *             if self.nvec == 0:
 *                 raise ValueError('Can only include distances to periodic images for periodic systems.')
 */
  __pyx_t_4 = ((__pyx_v_nimage > 0) != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":303
 * 
 *         if nimage > 0:
 *             if self.nvec == 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Can only include distances to periodic images for periodic systems.')
 *             factor = (1+2*nimage)**self.nvec
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_4) {

      /* "yaff/pes/ext.pyx":304
 *         if nimage > 0:
 *             if self.nvec == 0:
 *                 raise ValueError('Can only include distances to periodic images for periodic systems.')             # <<<<<<<<<<<<<<
 *             factor = (1+2*nimage)**self.nvec
 *         else:
 */
      __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "yaff/pes/ext.pyx":305
 *             if self.nvec == 0:
 *                 raise ValueError('Can only include distances to periodic images for periodic systems.')
 *             factor = (1+2*nimage)**self.nvec             # <<<<<<<<<<<<<<
 *         else:
 *             factor = 1
 */
    __pyx_t_2 = __Pyx_PyInt_From_long((1 + (2 * __pyx_v_nimage))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nvec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Power(__pyx_t_2, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_factor = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":307
 *             factor = (1+2*nimage)**self.nvec
 *         else:
 *             factor = 1             # <<<<<<<<<<<<<<
 * 
 *         if do_include:
 */
    __Pyx_INCREF(__pyx_int_1);
    __pyx_v_factor = __pyx_int_1;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":309
 *             factor = 1
 * 
 *         if do_include:             # <<<<<<<<<<<<<<
 *             if nimage != 0:
 *                 raise ValueError('When do_include==True, nimage must be zero.')
 */
  __pyx_t_4 = (__pyx_v_do_include != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":310
 * 
 *         if do_include:
 *             if nimage != 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError('When do_include==True, nimage must be zero.')
 *             if npair == 0:
 */
    __pyx_t_4 = ((__pyx_v_nimage != 0) != 0);
    if (__pyx_t_4) {

      /* "yaff/pes/ext.pyx":311
 *         if do_include:
 *             if nimage != 0:
 *                 raise ValueError('When do_include==True, nimage must be zero.')             # <<<<<<<<<<<<<<
 *             if npair == 0:
 *                 raise ValueError('No pairs given and do_include==True.')
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__11, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "yaff/pes/ext.pyx":312
 *             if nimage != 0:
 *                 raise ValueError('When do_include==True, nimage must be zero.')
 *             if npair == 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError('No pairs given and do_include==True.')
 * 
 */
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_npair, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_4) {

      /* "yaff/pes/ext.pyx":313
 *                 raise ValueError('When do_include==True, nimage must be zero.')
 *             if npair == 0:
 *                 raise ValueError('No pairs given and do_include==True.')             # <<<<<<<<<<<<<<
 * 
 *         if pos1 is None:
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__12, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "yaff/pes/ext.pyx":315
 *                 raise ValueError('No pairs given and do_include==True.')
 * 
 *         if pos1 is None:             # <<<<<<<<<<<<<<
 *             if do_include:
 *                 npair == output.shape[0]
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_pos1) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":316
 * 
 *         if pos1 is None:
 *             if do_include:             # <<<<<<<<<<<<<<
 *                 npair == output.shape[0]
 *             else:
 */
    __pyx_t_3 = (__pyx_v_do_include != 0);
    if (__pyx_t_3) {

      /* "yaff/pes/ext.pyx":317
 *         if pos1 is None:
 *             if do_include:
 *                 npair == output.shape[0]             # <<<<<<<<<<<<<<
 *             else:
 *                 assert factor*(natom0*(natom0-1))/2 - npair == output.shape[0]
 */
      __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_output->dimensions[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_npair, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L10;
    }
    /*else*/ {

      /* "yaff/pes/ext.pyx":319
 *                 npair == output.shape[0]
 *             else:
 *                 assert factor*(natom0*(natom0-1))/2 - npair == output.shape[0]             # <<<<<<<<<<<<<<
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom0, npair, True):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_1 = PyNumber_Subtract(__pyx_v_natom0, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyNumber_Multiply(__pyx_v_natom0, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Multiply(__pyx_v_factor, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_int_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Subtract(__pyx_t_5, __pyx_v_npair); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_output->dimensions[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_3)) {
          PyErr_SetNone(PyExc_AssertionError);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
      }
      #endif
    }
    __pyx_L10:;

    /* "yaff/pes/ext.pyx":320
 *             else:
 *                 assert factor*(natom0*(natom0-1))/2 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom0, npair, True):             # <<<<<<<<<<<<<<
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,
 */
    __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_v_natom0); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_natom0); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_v_npair); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = (is_invalid_exclude(__pyx_v_pairs_pointer, __pyx_t_6, __pyx_t_7, __pyx_t_8, 1) != 0);
    if (__pyx_t_3) {

      /* "yaff/pes/ext.pyx":321
 *                 assert factor*(natom0*(natom0-1))/2 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom0, npair, True):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')             # <<<<<<<<<<<<<<
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,
 *                                          <double*> output.data, natom0,
 */
      __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__13, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "yaff/pes/ext.pyx":323
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,
 *                                          <double*> output.data, natom0,             # <<<<<<<<<<<<<<
 *                                          <long*> pairs_pointer, npair, do_include, nimage)
 *         else:
 */
    __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_v_natom0); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":324
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,
 *                                          <double*> output.data, natom0,
 *                                          <long*> pairs_pointer, npair, do_include, nimage)             # <<<<<<<<<<<<<<
 *         else:
 *             assert pos1.shape[1] == 3
 */
    __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_npair); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":322
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom0, npair, True):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,             # <<<<<<<<<<<<<<
 *                                          <double*> output.data, natom0,
 *                                          <long*> pairs_pointer, npair, do_include, nimage)
 */
    cell_compute_distances1(__pyx_v_self->_c_cell, ((double *)__pyx_v_pos0->data), ((double *)__pyx_v_output->data), __pyx_t_8, ((long *)__pyx_v_pairs_pointer), __pyx_t_7, __pyx_v_do_include, __pyx_v_nimage);
    goto __pyx_L9;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":326
 *                                          <long*> pairs_pointer, npair, do_include, nimage)
 *         else:
 *             assert pos1.shape[1] == 3             # <<<<<<<<<<<<<<
 *             assert pos1.flags['C_CONTIGUOUS']
 *             natom1 = pos1.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_pos1->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":327
 *         else:
 *             assert pos1.shape[1] == 3
 *             assert pos1.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             natom1 = pos1.shape[0]
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos1), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":328
 *             assert pos1.shape[1] == 3
 *             assert pos1.flags['C_CONTIGUOUS']
 *             natom1 = pos1.shape[0]             # <<<<<<<<<<<<<<
 * 
 *             if do_include:
 */
    __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_pos1->dimensions[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_v_natom1 = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "yaff/pes/ext.pyx":330
 *             natom1 = pos1.shape[0]
 * 
 *             if do_include:             # <<<<<<<<<<<<<<
 *                 npair == output.shape[0]
 *             else:
 */
    __pyx_t_3 = (__pyx_v_do_include != 0);
    if (__pyx_t_3) {

      /* "yaff/pes/ext.pyx":331
 * 
 *             if do_include:
 *                 npair == output.shape[0]             # <<<<<<<<<<<<<<
 *             else:
 *                 assert factor*natom0*natom1 - npair == output.shape[0]
 */
      __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_output->dimensions[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_npair, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L12;
    }
    /*else*/ {

      /* "yaff/pes/ext.pyx":333
 *                 npair == output.shape[0]
 *             else:
 *                 assert factor*natom0*natom1 - npair == output.shape[0]             # <<<<<<<<<<<<<<
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom1, npair, False):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 */
      #ifndef CYTHON_WITHOUT_ASSERTIONS
      if (unlikely(!Py_OptimizeFlag)) {
        __pyx_t_2 = PyNumber_Multiply(__pyx_v_factor, __pyx_v_natom0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_5 = PyNumber_Multiply(__pyx_t_2, __pyx_v_natom1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyNumber_Subtract(__pyx_t_5, __pyx_v_npair); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_output->dimensions[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_3)) {
          PyErr_SetNone(PyExc_AssertionError);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
      }
      #endif
    }
    __pyx_L12:;

    /* "yaff/pes/ext.pyx":334
 *             else:
 *                 assert factor*natom0*natom1 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom1, npair, False):             # <<<<<<<<<<<<<<
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 *             cell.cell_compute_distances2(self._c_cell, <double*> pos0.data,
 */
    __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_natom0); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_v_natom1); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_v_npair); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_3 = (is_invalid_exclude(__pyx_v_pairs_pointer, __pyx_t_7, __pyx_t_8, __pyx_t_6, 0) != 0);
    if (__pyx_t_3) {

      /* "yaff/pes/ext.pyx":335
 *                 assert factor*natom0*natom1 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom1, npair, False):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')             # <<<<<<<<<<<<<<
 *             cell.cell_compute_distances2(self._c_cell, <double*> pos0.data,
 *                                          <double*> pos1.data,
 */
      __pyx_t_1 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__14, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "yaff/pes/ext.pyx":338
 *             cell.cell_compute_distances2(self._c_cell, <double*> pos0.data,
 *                                          <double*> pos1.data,
 *                                          <double*> output.data, natom0, natom1,             # <<<<<<<<<<<<<<
 *                                          <long*> pairs_pointer, npair, do_include, nimage)
 * 
 */
    __pyx_t_6 = __Pyx_PyInt_As_long(__pyx_v_natom0); if (unlikely((__pyx_t_6 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_v_natom1); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":339
 *                                          <double*> pos1.data,
 *                                          <double*> output.data, natom0, natom1,
 *                                          <long*> pairs_pointer, npair, do_include, nimage)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_npair); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "yaff/pes/ext.pyx":336
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom1, npair, False):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')
 *             cell.cell_compute_distances2(self._c_cell, <double*> pos0.data,             # <<<<<<<<<<<<<<
 *                                          <double*> pos1.data,
 *                                          <double*> output.data, natom0, natom1,
 */
    cell_compute_distances2(__pyx_v_self->_c_cell, ((double *)__pyx_v_pos0->data), ((double *)__pyx_v_pos1->data), ((double *)__pyx_v_output->data), __pyx_t_6, __pyx_t_8, ((long *)__pyx_v_pairs_pointer), __pyx_t_7, __pyx_v_do_include, __pyx_v_nimage);
  }
  __pyx_L9:;

  /* "yaff/pes/ext.pyx":226
 *         cell.cell_add_vec(<double*> delta.data, self._c_cell, <long*> r.data)
 * 
 *     def compute_distances(self, np.ndarray[double, ndim=1] output,             # <<<<<<<<<<<<<<
 *                           np.ndarray[double, ndim=2] pos0,
 *                           np.ndarray[double, ndim=2] pos1=None,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_output.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pairs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos0.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos1.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.Cell.compute_distances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_output.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pairs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos0.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos1.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_natom0);
  __Pyx_XDECREF(__pyx_v_npair);
  __Pyx_XDECREF(__pyx_v_factor);
  __Pyx_XDECREF(__pyx_v_natom1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":347
 * 
 * 
 * def nlist_status_init(rmax):             # <<<<<<<<<<<<<<
 *     '''nlist_status_init(rmax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_1nlist_status_init(PyObject *__pyx_self, PyObject *__pyx_v_rmax); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_nlist_status_init[] = "nlist_status_init(rmax)\nnlist_status_init(rmax)\n\n       Creates a new ``nlists_status`` array\n\n       The array consists of seven integer elements with the following meaning:\n\n       * ``r0``: relative image index along a direction\n       * ``r1``: relative image index along b direction\n       * ``r2``: relative image index along c direction\n       * ``a``: atom index of first atom in pair\n       * ``b``: atom index of second atom in pair\n       * ``sign``: +1 or -1, to swap the relative vector such that a > b\n       * ``nrow``: number of rows consumed\n       * ``neval``: number of distance evaluations, only necessary to assess\n                    efficiency of neighbor list build\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_1nlist_status_init = {__Pyx_NAMESTR("nlist_status_init"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_1nlist_status_init, METH_O, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_nlist_status_init)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_1nlist_status_init(PyObject *__pyx_self, PyObject *__pyx_v_rmax) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_status_init (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_nlist_status_init(__pyx_self, ((PyObject *)__pyx_v_rmax));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_nlist_status_init(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_rmax) {
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_status_init", 0);

  /* "yaff/pes/ext.pyx":364
 *                     efficiency of neighbor list build
 *     '''
 *     result = np.array([0, 0, 0, 0, 0, 1, 0, 0], int)             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_1);
  PyList_SET_ITEM(__pyx_t_1, 5, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 6, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_1, 7, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)((PyObject*)(&PyInt_Type))));
  PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)((PyObject*)(&PyInt_Type))));
  __Pyx_GIVEREF(((PyObject *)((PyObject*)(&PyInt_Type))));
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":365
 *     '''
 *     result = np.array([0, 0, 0, 0, 0, 1, 0, 0], int)
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":347
 * 
 * 
 * def nlist_status_init(rmax):             # <<<<<<<<<<<<<<
 *     '''nlist_status_init(rmax)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yaff.pes.ext.nlist_status_init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":368
 * 
 * 
 * def nlist_build(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_3nlist_build(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_2nlist_build[] = "nlist_build(ndarray pos, double rcut, ndarray rmax, Cell unitcell, ndarray status, ndarray neighs, long split=-1)\nScan the system for all pairs that have a distance smaller than rcut until the neighs array is filled or all pairs are considered\n\n       **Arguments:**\n\n       pos\n            The numpy array with the atomic positions, shape (natom, 3)\n\n       rcut\n            The cutoff radius\n\n       rmax\n            The number of periodic images to visit along each cell vector, shape\n            (nrvec,)\n\n       unitcell\n            An instance of the UnitCell class, describing the periodic boundary\n            conditions.\n\n       status\n            The status array, either obtained from ``nlist_status_init``, or\n            as it was modified by the last call to this function\n\n       neighs\n            The neighbor list array. One element is of the datatype\n            nlist.neigh_row_type.\n\n       **Returns:**\n\n       ``True`` if the neighbor list is complete. ``False`` otherwise\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_3nlist_build = {__Pyx_NAMESTR("nlist_build"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_3nlist_build, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_2nlist_build)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_3nlist_build(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  double __pyx_v_rcut;
  PyArrayObject *__pyx_v_rmax = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_status = 0;
  PyArrayObject *__pyx_v_neighs = 0;
  long __pyx_v_split;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_build (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_rcut,&__pyx_n_s_rmax,&__pyx_n_s_unitcell,&__pyx_n_s_status,&__pyx_n_s_neighs,&__pyx_n_s_split,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_status)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_split);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_build") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rmax = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_status = ((PyArrayObject *)values[4]);
    __pyx_v_neighs = ((PyArrayObject *)values[5]);
    if (values[6]) {
      __pyx_v_split = __Pyx_PyInt_As_long(values[6]); if (unlikely((__pyx_v_split == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_split = ((long)-1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_build", 0, 6, 7, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rmax), __pyx_ptype_5numpy_ndarray, 1, "rmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_status), __pyx_ptype_5numpy_ndarray, 1, "status", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_2nlist_build(__pyx_self, __pyx_v_pos, __pyx_v_rcut, __pyx_v_rmax, __pyx_v_unitcell, __pyx_v_status, __pyx_v_neighs, __pyx_v_split);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_2nlist_build(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, long __pyx_v_split) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rmax;
  __Pyx_Buffer __pyx_pybuffer_rmax;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_status;
  __Pyx_Buffer __pyx_pybuffer_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_build", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_rmax.pybuffer.buf = NULL;
  __pyx_pybuffer_rmax.refcount = 0;
  __pyx_pybuffernd_rmax.data = NULL;
  __pyx_pybuffernd_rmax.rcbuffer = &__pyx_pybuffer_rmax;
  __pyx_pybuffer_status.pybuffer.buf = NULL;
  __pyx_pybuffer_status.refcount = 0;
  __pyx_pybuffernd_status.data = NULL;
  __pyx_pybuffernd_status.rcbuffer = &__pyx_pybuffer_status;
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_rmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rmax.diminfo[0].strides = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rmax.diminfo[0].shape = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_status.rcbuffer->pybuffer, (PyObject*)__pyx_v_status, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_status.diminfo[0].strides = __pyx_pybuffernd_status.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_status.diminfo[0].shape = __pyx_pybuffernd_status.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":403
 *        ``True`` if the neighbor list is complete. ``False`` otherwise
 *     '''
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":404
 *     '''
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":405
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_rcut > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":406
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3             # <<<<<<<<<<<<<<
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_rmax->dimensions[0]) <= 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":407
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rmax), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":408
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8             # <<<<<<<<<<<<<<
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_status->dimensions[0]) == 8) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":409
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_status), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":410
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] == unitcell.nvec
 *     if split==-1: split = len(pos)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighs), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":411
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec             # <<<<<<<<<<<<<<
 *     if split==-1: split = len(pos)
 *     return nlist.nlist_build_low(
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_rmax->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":412
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 *     if split==-1: split = len(pos)             # <<<<<<<<<<<<<<
 *     return nlist.nlist_build_low(
 *         <double*>pos.data, rcut, <long*>rmax.data,
 */
  __pyx_t_3 = ((__pyx_v_split == -1) != 0);
  if (__pyx_t_3) {
    __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_split = __pyx_t_5;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":413
 *     assert rmax.shape[0] == unitcell.nvec
 *     if split==-1: split = len(pos)
 *     return nlist.nlist_build_low(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":416
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 *         <nlist.neigh_row_type*>neighs.data, len(pos), len(neighs), 0, split             # <<<<<<<<<<<<<<
 *     )
 * 
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_neighs)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":413
 *     assert rmax.shape[0] == unitcell.nvec
 *     if split==-1: split = len(pos)
 *     return nlist.nlist_build_low(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(nlist_build_low(((double *)__pyx_v_pos->data), __pyx_v_rcut, ((long *)__pyx_v_rmax->data), __pyx_v_unitcell->_c_cell, ((long *)__pyx_v_status->data), ((neigh_row_type *)__pyx_v_neighs->data), __pyx_t_5, __pyx_t_6, 0, __pyx_v_split)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":368
 * 
 * 
 * def nlist_build(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":420
 * 
 * 
 * def nlist_decompose(np.ndarray[double, ndim=2] pos, Cell unitcell, np.ndarray[long, ndim=1] bin_indexes, np.ndarray[long, ndim=1] order,np.ndarray[long, ndim=1] domains):             # <<<<<<<<<<<<<<
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_5nlist_decompose(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_4nlist_decompose[] = "nlist_decompose(ndarray pos, Cell unitcell, ndarray bin_indexes, ndarray order, ndarray domains)";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_5nlist_decompose = {__Pyx_NAMESTR("nlist_decompose"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_5nlist_decompose, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4nlist_decompose)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_5nlist_decompose(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_bin_indexes = 0;
  PyArrayObject *__pyx_v_order = 0;
  PyArrayObject *__pyx_v_domains = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_decompose (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_unitcell,&__pyx_n_s_bin_indexes,&__pyx_n_s_order,&__pyx_n_s_domains,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_decompose", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bin_indexes)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_decompose", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_order)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_decompose", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_domains)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_decompose", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_decompose") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[1]);
    __pyx_v_bin_indexes = ((PyArrayObject *)values[2]);
    __pyx_v_order = ((PyArrayObject *)values[3]);
    __pyx_v_domains = ((PyArrayObject *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_decompose", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_decompose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_bin_indexes), __pyx_ptype_5numpy_ndarray, 1, "bin_indexes", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_order), __pyx_ptype_5numpy_ndarray, 1, "order", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_domains), __pyx_ptype_5numpy_ndarray, 1, "domains", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_4nlist_decompose(__pyx_self, __pyx_v_pos, __pyx_v_unitcell, __pyx_v_bin_indexes, __pyx_v_order, __pyx_v_domains);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_4nlist_decompose(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_bin_indexes, PyArrayObject *__pyx_v_order, PyArrayObject *__pyx_v_domains) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_bin_indexes;
  __Pyx_Buffer __pyx_pybuffer_bin_indexes;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_domains;
  __Pyx_Buffer __pyx_pybuffer_domains;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_order;
  __Pyx_Buffer __pyx_pybuffer_order;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_decompose", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_bin_indexes.pybuffer.buf = NULL;
  __pyx_pybuffer_bin_indexes.refcount = 0;
  __pyx_pybuffernd_bin_indexes.data = NULL;
  __pyx_pybuffernd_bin_indexes.rcbuffer = &__pyx_pybuffer_bin_indexes;
  __pyx_pybuffer_order.pybuffer.buf = NULL;
  __pyx_pybuffer_order.refcount = 0;
  __pyx_pybuffernd_order.data = NULL;
  __pyx_pybuffernd_order.rcbuffer = &__pyx_pybuffer_order;
  __pyx_pybuffer_domains.pybuffer.buf = NULL;
  __pyx_pybuffer_domains.refcount = 0;
  __pyx_pybuffernd_domains.data = NULL;
  __pyx_pybuffernd_domains.rcbuffer = &__pyx_pybuffer_domains;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_bin_indexes.rcbuffer->pybuffer, (PyObject*)__pyx_v_bin_indexes, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_bin_indexes.diminfo[0].strides = __pyx_pybuffernd_bin_indexes.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_bin_indexes.diminfo[0].shape = __pyx_pybuffernd_bin_indexes.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_order.rcbuffer->pybuffer, (PyObject*)__pyx_v_order, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_order.diminfo[0].strides = __pyx_pybuffernd_order.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_order.diminfo[0].shape = __pyx_pybuffernd_order.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_domains.rcbuffer->pybuffer, (PyObject*)__pyx_v_domains, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_domains.diminfo[0].strides = __pyx_pybuffernd_domains.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_domains.diminfo[0].shape = __pyx_pybuffernd_domains.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":421
 * 
 * def nlist_decompose(np.ndarray[double, ndim=2] pos, Cell unitcell, np.ndarray[long, ndim=1] bin_indexes, np.ndarray[long, ndim=1] order,np.ndarray[long, ndim=1] domains):
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)             # <<<<<<<<<<<<<<
 * 
 * def nlist_build_dd_omp(np.ndarray[double, ndim=2] pos, double rcut,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_1 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(decompose_domain(((double *)__pyx_v_pos->data), __pyx_v_unitcell->_c_cell, ((long *)__pyx_v_bin_indexes->data), ((long *)__pyx_v_order->data), __pyx_t_1, ((long *)__pyx_v_domains->data))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":420
 * 
 * 
 * def nlist_decompose(np.ndarray[double, ndim=2] pos, Cell unitcell, np.ndarray[long, ndim=1] bin_indexes, np.ndarray[long, ndim=1] order,np.ndarray[long, ndim=1] domains):             # <<<<<<<<<<<<<<
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bin_indexes.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_order.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_decompose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bin_indexes.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_order.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":423
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 * def nlist_build_dd_omp(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7nlist_build_dd_omp(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_6nlist_build_dd_omp[] = "nlist_build_dd_omp(ndarray pos, double rcut, ndarray rmax, Cell unitcell, ndarray status, ndarray neighs, ndarray binsizes, ndarray binsizes_cum, nbin, ndarray domains, double r_circum)\nScan the system for all pairs that have a distance smaller than rcut until the neighs array is filled or all pairs are considered\n\n       **Arguments:**\n\n       pos\n            The numpy array with the atomic positions, shape (natom, 3)\n\n       rcut\n            The cutoff radius\n\n       rmax\n            The number of periodic images to visit along each cell vector, shape\n            (nrvec,)\n\n       unitcell\n            An instance of the UnitCell class, describing the periodic boundary\n            conditions.\n\n       status\n            The status array, either obtained from ``nlist_status_init``, or\n            as it was modified by the last call to this function\n\n       neighs\n            The neighbor list array. One element is of the datatype\n            nlist.neigh_row_type.\n\n       **Returns:**\n\n       ``True`` if the neighbor list is complete. ``False`` otherwise\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_7nlist_build_dd_omp = {__Pyx_NAMESTR("nlist_build_dd_omp"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7nlist_build_dd_omp, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_6nlist_build_dd_omp)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_7nlist_build_dd_omp(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  double __pyx_v_rcut;
  PyArrayObject *__pyx_v_rmax = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_status = 0;
  PyArrayObject *__pyx_v_neighs = 0;
  PyArrayObject *__pyx_v_binsizes = 0;
  PyArrayObject *__pyx_v_binsizes_cum = 0;
  PyObject *__pyx_v_nbin = 0;
  PyArrayObject *__pyx_v_domains = 0;
  double __pyx_v_r_circum;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_build_dd_omp (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_rcut,&__pyx_n_s_rmax,&__pyx_n_s_unitcell,&__pyx_n_s_status,&__pyx_n_s_neighs,&__pyx_n_s_binsizes,&__pyx_n_s_binsizes_cum,&__pyx_n_s_nbin,&__pyx_n_s_domains,&__pyx_n_s_r_circum,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_status)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binsizes)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binsizes_cum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_domains)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case 10:
        if (likely((values[10] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r_circum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, 10); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_build_dd_omp") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rmax = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_status = ((PyArrayObject *)values[4]);
    __pyx_v_neighs = ((PyArrayObject *)values[5]);
    __pyx_v_binsizes = ((PyArrayObject *)values[6]);
    __pyx_v_binsizes_cum = ((PyArrayObject *)values[7]);
    __pyx_v_nbin = values[8];
    __pyx_v_domains = ((PyArrayObject *)values[9]);
    __pyx_v_r_circum = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_r_circum == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_build_dd_omp", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build_dd_omp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rmax), __pyx_ptype_5numpy_ndarray, 1, "rmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_status), __pyx_ptype_5numpy_ndarray, 1, "status", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_binsizes), __pyx_ptype_5numpy_ndarray, 1, "binsizes", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_binsizes_cum), __pyx_ptype_5numpy_ndarray, 1, "binsizes_cum", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_domains), __pyx_ptype_5numpy_ndarray, 1, "domains", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_6nlist_build_dd_omp(__pyx_self, __pyx_v_pos, __pyx_v_rcut, __pyx_v_rmax, __pyx_v_unitcell, __pyx_v_status, __pyx_v_neighs, __pyx_v_binsizes, __pyx_v_binsizes_cum, __pyx_v_nbin, __pyx_v_domains, __pyx_v_r_circum);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_6nlist_build_dd_omp(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_binsizes, PyArrayObject *__pyx_v_binsizes_cum, PyObject *__pyx_v_nbin, PyArrayObject *__pyx_v_domains, double __pyx_v_r_circum) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_binsizes;
  __Pyx_Buffer __pyx_pybuffer_binsizes;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_binsizes_cum;
  __Pyx_Buffer __pyx_pybuffer_binsizes_cum;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_domains;
  __Pyx_Buffer __pyx_pybuffer_domains;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rmax;
  __Pyx_Buffer __pyx_pybuffer_rmax;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_status;
  __Pyx_Buffer __pyx_pybuffer_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  long __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_build_dd_omp", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_rmax.pybuffer.buf = NULL;
  __pyx_pybuffer_rmax.refcount = 0;
  __pyx_pybuffernd_rmax.data = NULL;
  __pyx_pybuffernd_rmax.rcbuffer = &__pyx_pybuffer_rmax;
  __pyx_pybuffer_status.pybuffer.buf = NULL;
  __pyx_pybuffer_status.refcount = 0;
  __pyx_pybuffernd_status.data = NULL;
  __pyx_pybuffernd_status.rcbuffer = &__pyx_pybuffer_status;
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  __pyx_pybuffer_binsizes.pybuffer.buf = NULL;
  __pyx_pybuffer_binsizes.refcount = 0;
  __pyx_pybuffernd_binsizes.data = NULL;
  __pyx_pybuffernd_binsizes.rcbuffer = &__pyx_pybuffer_binsizes;
  __pyx_pybuffer_binsizes_cum.pybuffer.buf = NULL;
  __pyx_pybuffer_binsizes_cum.refcount = 0;
  __pyx_pybuffernd_binsizes_cum.data = NULL;
  __pyx_pybuffernd_binsizes_cum.rcbuffer = &__pyx_pybuffer_binsizes_cum;
  __pyx_pybuffer_domains.pybuffer.buf = NULL;
  __pyx_pybuffer_domains.refcount = 0;
  __pyx_pybuffernd_domains.data = NULL;
  __pyx_pybuffernd_domains.rcbuffer = &__pyx_pybuffer_domains;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_rmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rmax.diminfo[0].strides = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rmax.diminfo[0].shape = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_status.rcbuffer->pybuffer, (PyObject*)__pyx_v_status, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_status.diminfo[0].strides = __pyx_pybuffernd_status.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_status.diminfo[0].shape = __pyx_pybuffernd_status.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer, (PyObject*)__pyx_v_binsizes, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_binsizes.diminfo[0].strides = __pyx_pybuffernd_binsizes.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_binsizes.diminfo[0].shape = __pyx_pybuffernd_binsizes.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer, (PyObject*)__pyx_v_binsizes_cum, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_binsizes_cum.diminfo[0].strides = __pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_binsizes_cum.diminfo[0].shape = __pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_domains.rcbuffer->pybuffer, (PyObject*)__pyx_v_domains, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_domains.diminfo[0].strides = __pyx_pybuffernd_domains.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_domains.diminfo[0].shape = __pyx_pybuffernd_domains.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":460
 *        ``True`` if the neighbor list is complete. ``False`` otherwise
 *     '''
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":461
 *     '''
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":462
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_rcut > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":463
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3             # <<<<<<<<<<<<<<
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0]%3 == 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_rmax->dimensions[0]) <= 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":464
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert status.shape[0]%3 == 0
 *     assert status.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rmax), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":465
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0]%3 == 0             # <<<<<<<<<<<<<<
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__Pyx_mod_long((__pyx_v_status->dimensions[0]), 3) == 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":466
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0]%3 == 0
 *     assert status.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_status), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":467
 *     assert status.shape[0]%3 == 0
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] == unitcell.nvec
 *     assert unitcell.nvec == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighs), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":468
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec             # <<<<<<<<<<<<<<
 *     assert unitcell.nvec == 3
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_rmax->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":469
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 *     assert unitcell.nvec == 3             # <<<<<<<<<<<<<<
 * 
 *     return nlist.nlist_domain_decomposition_omp(
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_4, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":471
 *     assert unitcell.nvec == 3
 * 
 *     return nlist.nlist_domain_decomposition_omp(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":474
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 *         <nlist.neigh_row_type*>neighs.data, len(pos), len(neighs), nbin, <long*>binsizes.data, <long*>binsizes_cum.data,             # <<<<<<<<<<<<<<
 *         <long*>domains.data, r_circum, status.shape[0]/3
 *     )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_neighs)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_nbin); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":471
 *     assert unitcell.nvec == 3
 * 
 *     return nlist.nlist_domain_decomposition_omp(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(nlist_domain_decomposition_omp(((double *)__pyx_v_pos->data), __pyx_v_rcut, ((long *)__pyx_v_rmax->data), __pyx_v_unitcell->_c_cell, ((long *)__pyx_v_status->data), ((neigh_row_type *)__pyx_v_neighs->data), __pyx_t_5, __pyx_t_6, __pyx_t_7, ((long *)__pyx_v_binsizes->data), ((long *)__pyx_v_binsizes_cum->data), ((long *)__pyx_v_domains->data), __pyx_v_r_circum, __Pyx_div_long((__pyx_v_status->dimensions[0]), 3))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":423
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 * def nlist_build_dd_omp(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build_dd_omp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":478
 *     )
 * 
 * def nlist_build_dd(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9nlist_build_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_8nlist_build_dd[] = "nlist_build_dd(ndarray pos, double rcut, ndarray rmax, Cell unitcell, ndarray status, ndarray neighs, ndarray binsizes, ndarray binsizes_cum, ndarray ijstart, nbin, ndarray domains, double r_circum)\nScan the system for all pairs that have a distance smaller than rcut until the neighs array is filled or all pairs are considered\n\n       **Arguments:**\n\n       pos\n            The numpy array with the atomic positions, shape (natom, 3)\n\n       rcut\n            The cutoff radius\n\n       rmax\n            The number of periodic images to visit along each cell vector, shape\n            (nrvec,)\n\n       unitcell\n            An instance of the UnitCell class, describing the periodic boundary\n            conditions.\n\n       status\n            The status array, either obtained from ``nlist_status_init``, or\n            as it was modified by the last call to this function\n\n       neighs\n            The neighbor list array. One element is of the datatype\n            nlist.neigh_row_type.\n\n       **Returns:**\n\n       ``True`` if the neighbor list is complete. ``False`` otherwise\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_9nlist_build_dd = {__Pyx_NAMESTR("nlist_build_dd"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9nlist_build_dd, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_8nlist_build_dd)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_9nlist_build_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  double __pyx_v_rcut;
  PyArrayObject *__pyx_v_rmax = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_status = 0;
  PyArrayObject *__pyx_v_neighs = 0;
  PyArrayObject *__pyx_v_binsizes = 0;
  PyArrayObject *__pyx_v_binsizes_cum = 0;
  PyArrayObject *__pyx_v_ijstart = 0;
  PyObject *__pyx_v_nbin = 0;
  PyArrayObject *__pyx_v_domains = 0;
  double __pyx_v_r_circum;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_build_dd (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_rcut,&__pyx_n_s_rmax,&__pyx_n_s_unitcell,&__pyx_n_s_status,&__pyx_n_s_neighs,&__pyx_n_s_binsizes,&__pyx_n_s_binsizes_cum,&__pyx_n_s_ijstart,&__pyx_n_s_nbin,&__pyx_n_s_domains,&__pyx_n_s_r_circum,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_status)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binsizes)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_binsizes_cum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ijstart)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case 10:
        if (likely((values[10] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_domains)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 10); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case 11:
        if (likely((values[11] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r_circum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, 11); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_build_dd") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rmax = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_status = ((PyArrayObject *)values[4]);
    __pyx_v_neighs = ((PyArrayObject *)values[5]);
    __pyx_v_binsizes = ((PyArrayObject *)values[6]);
    __pyx_v_binsizes_cum = ((PyArrayObject *)values[7]);
    __pyx_v_ijstart = ((PyArrayObject *)values[8]);
    __pyx_v_nbin = values[9];
    __pyx_v_domains = ((PyArrayObject *)values[10]);
    __pyx_v_r_circum = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_r_circum == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_build_dd", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rmax), __pyx_ptype_5numpy_ndarray, 1, "rmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_status), __pyx_ptype_5numpy_ndarray, 1, "status", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_binsizes), __pyx_ptype_5numpy_ndarray, 1, "binsizes", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_binsizes_cum), __pyx_ptype_5numpy_ndarray, 1, "binsizes_cum", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ijstart), __pyx_ptype_5numpy_ndarray, 1, "ijstart", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_domains), __pyx_ptype_5numpy_ndarray, 1, "domains", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_8nlist_build_dd(__pyx_self, __pyx_v_pos, __pyx_v_rcut, __pyx_v_rmax, __pyx_v_unitcell, __pyx_v_status, __pyx_v_neighs, __pyx_v_binsizes, __pyx_v_binsizes_cum, __pyx_v_ijstart, __pyx_v_nbin, __pyx_v_domains, __pyx_v_r_circum);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_8nlist_build_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, double __pyx_v_rcut, PyArrayObject *__pyx_v_rmax, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_status, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_binsizes, PyArrayObject *__pyx_v_binsizes_cum, PyArrayObject *__pyx_v_ijstart, PyObject *__pyx_v_nbin, PyArrayObject *__pyx_v_domains, double __pyx_v_r_circum) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_binsizes;
  __Pyx_Buffer __pyx_pybuffer_binsizes;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_binsizes_cum;
  __Pyx_Buffer __pyx_pybuffer_binsizes_cum;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_domains;
  __Pyx_Buffer __pyx_pybuffer_domains;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ijstart;
  __Pyx_Buffer __pyx_pybuffer_ijstart;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rmax;
  __Pyx_Buffer __pyx_pybuffer_rmax;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_status;
  __Pyx_Buffer __pyx_pybuffer_status;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  long __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_build_dd", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_rmax.pybuffer.buf = NULL;
  __pyx_pybuffer_rmax.refcount = 0;
  __pyx_pybuffernd_rmax.data = NULL;
  __pyx_pybuffernd_rmax.rcbuffer = &__pyx_pybuffer_rmax;
  __pyx_pybuffer_status.pybuffer.buf = NULL;
  __pyx_pybuffer_status.refcount = 0;
  __pyx_pybuffernd_status.data = NULL;
  __pyx_pybuffernd_status.rcbuffer = &__pyx_pybuffer_status;
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  __pyx_pybuffer_binsizes.pybuffer.buf = NULL;
  __pyx_pybuffer_binsizes.refcount = 0;
  __pyx_pybuffernd_binsizes.data = NULL;
  __pyx_pybuffernd_binsizes.rcbuffer = &__pyx_pybuffer_binsizes;
  __pyx_pybuffer_binsizes_cum.pybuffer.buf = NULL;
  __pyx_pybuffer_binsizes_cum.refcount = 0;
  __pyx_pybuffernd_binsizes_cum.data = NULL;
  __pyx_pybuffernd_binsizes_cum.rcbuffer = &__pyx_pybuffer_binsizes_cum;
  __pyx_pybuffer_ijstart.pybuffer.buf = NULL;
  __pyx_pybuffer_ijstart.refcount = 0;
  __pyx_pybuffernd_ijstart.data = NULL;
  __pyx_pybuffernd_ijstart.rcbuffer = &__pyx_pybuffer_ijstart;
  __pyx_pybuffer_domains.pybuffer.buf = NULL;
  __pyx_pybuffer_domains.refcount = 0;
  __pyx_pybuffernd_domains.data = NULL;
  __pyx_pybuffernd_domains.rcbuffer = &__pyx_pybuffer_domains;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_rmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rmax.diminfo[0].strides = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rmax.diminfo[0].shape = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_status.rcbuffer->pybuffer, (PyObject*)__pyx_v_status, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_status.diminfo[0].strides = __pyx_pybuffernd_status.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_status.diminfo[0].shape = __pyx_pybuffernd_status.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer, (PyObject*)__pyx_v_binsizes, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_binsizes.diminfo[0].strides = __pyx_pybuffernd_binsizes.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_binsizes.diminfo[0].shape = __pyx_pybuffernd_binsizes.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer, (PyObject*)__pyx_v_binsizes_cum, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_binsizes_cum.diminfo[0].strides = __pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_binsizes_cum.diminfo[0].shape = __pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ijstart.rcbuffer->pybuffer, (PyObject*)__pyx_v_ijstart, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ijstart.diminfo[0].strides = __pyx_pybuffernd_ijstart.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ijstart.diminfo[0].shape = __pyx_pybuffernd_ijstart.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_domains.rcbuffer->pybuffer, (PyObject*)__pyx_v_domains, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_domains.diminfo[0].strides = __pyx_pybuffernd_domains.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_domains.diminfo[0].shape = __pyx_pybuffernd_domains.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":515
 *        ``True`` if the neighbor list is complete. ``False`` otherwise
 *     '''
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":516
 *     '''
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":517
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_rcut > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":518
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3             # <<<<<<<<<<<<<<
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_rmax->dimensions[0]) <= 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":519
 *     assert rcut > 0
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rmax), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":520
 *     assert rmax.shape[0] <= 3
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8             # <<<<<<<<<<<<<<
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_status->dimensions[0]) == 8) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":521
 *     assert rmax.flags['C_CONTIGUOUS']
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_status), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":522
 *     assert status.shape[0] == 8
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert rmax.shape[0] == unitcell.nvec
 *     assert unitcell.nvec == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighs), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":523
 *     assert status.flags['C_CONTIGUOUS']
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec             # <<<<<<<<<<<<<<
 *     assert unitcell.nvec == 3
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_rmax->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":524
 *     assert neighs.flags['C_CONTIGUOUS']
 *     assert rmax.shape[0] == unitcell.nvec
 *     assert unitcell.nvec == 3             # <<<<<<<<<<<<<<
 * 
 *     return nlist.nlist_domain_decomposition(
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_4, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":526
 *     assert unitcell.nvec == 3
 * 
 *     return nlist.nlist_domain_decomposition(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":529
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 *         <nlist.neigh_row_type*>neighs.data, len(pos), len(neighs), nbin, <long*>binsizes.data, <long*>binsizes_cum.data,             # <<<<<<<<<<<<<<
 *         <long*>ijstart.data, <long*>domains.data, r_circum
 *     )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_neighs)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_v_nbin); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":526
 *     assert unitcell.nvec == 3
 * 
 *     return nlist.nlist_domain_decomposition(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, rcut, <long*>rmax.data,
 *         unitcell._c_cell, <long*>status.data,
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(nlist_domain_decomposition(((double *)__pyx_v_pos->data), __pyx_v_rcut, ((long *)__pyx_v_rmax->data), __pyx_v_unitcell->_c_cell, ((long *)__pyx_v_status->data), ((neigh_row_type *)__pyx_v_neighs->data), __pyx_t_5, __pyx_t_6, __pyx_t_7, ((long *)__pyx_v_binsizes->data), ((long *)__pyx_v_binsizes_cum->data), ((long *)__pyx_v_ijstart->data), ((long *)__pyx_v_domains->data), __pyx_v_r_circum)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":478
 *     )
 * 
 * def nlist_build_dd(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ijstart.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_build_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_binsizes_cum.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_domains.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ijstart.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_status.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":534
 * 
 * 
 * def nlist_status_finish(status):             # <<<<<<<<<<<<<<
 *     '''status
 *             The status array, either obtained from ``nlist_status_init``, or
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_11nlist_status_finish(PyObject *__pyx_self, PyObject *__pyx_v_status); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10nlist_status_finish[] = "nlist_status_finish(status)\nstatus\n            The status array, either obtained from ``nlist_status_init``, or\n            as it was modified by the last call to this function\n\n       Returns the number of rows generated by the neighbor list algorithm\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_11nlist_status_finish = {__Pyx_NAMESTR("nlist_status_finish"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_11nlist_status_finish, METH_O, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10nlist_status_finish)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_11nlist_status_finish(PyObject *__pyx_self, PyObject *__pyx_v_status) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_status_finish (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10nlist_status_finish(__pyx_self, ((PyObject *)__pyx_v_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10nlist_status_finish(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_status) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_status_finish", 0);

  /* "yaff/pes/ext.pyx":541
 *        Returns the number of rows generated by the neighbor list algorithm
 *     '''
 *     return status[-2]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_status, -2, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 541; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":534
 * 
 * 
 * def nlist_status_finish(status):             # <<<<<<<<<<<<<<
 *     '''status
 *             The status array, either obtained from ``nlist_status_init``, or
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.nlist_status_finish", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":544
 * 
 * 
 * def nlist_recompute(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=2] pos_old,
 *                     Cell unitcell,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13nlist_recompute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12nlist_recompute[] = "nlist_recompute(ndarray pos, ndarray pos_old, Cell unitcell, ndarray neighs)\nRecompute all relative vectors and distances in the neighbor list.\n\n       **Arguments:**\n\n       pos\n            The numpy array with the atomic positions, shape (natom, 3)\n\n       pos_old\n            The positions used during the last neighbor list rebuild. These\n            are used to make sure that there are no sudden jumps in the\n            relative vectors due to the minimum image convention.\n\n       unitcell\n            An instance of the UnitCell class, describing the periodic boundary\n            conditions.\n\n       neighs\n            The neighbor list array. One element is of the datatype\n            nlist.neigh_row_type.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_13nlist_recompute = {__Pyx_NAMESTR("nlist_recompute"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13nlist_recompute, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12nlist_recompute)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_13nlist_recompute(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_pos_old = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_neighs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_recompute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_pos_old,&__pyx_n_s_unitcell,&__pyx_n_s_neighs,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos_old)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_recompute", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_recompute", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_recompute", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_recompute") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_pos_old = ((PyArrayObject *)values[1]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[2]);
    __pyx_v_neighs = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_recompute", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_recompute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos_old), __pyx_ptype_5numpy_ndarray, 1, "pos_old", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12nlist_recompute(__pyx_self, __pyx_v_pos, __pyx_v_pos_old, __pyx_v_unitcell, __pyx_v_neighs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12nlist_recompute(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_pos_old, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_neighs) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos_old;
  __Pyx_Buffer __pyx_pybuffer_pos_old;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_recompute", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_pos_old.pybuffer.buf = NULL;
  __pyx_pybuffer_pos_old.refcount = 0;
  __pyx_pybuffernd_pos_old.data = NULL;
  __pyx_pybuffernd_pos_old.rcbuffer = &__pyx_pybuffer_pos_old;
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos_old.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos_old, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos_old.diminfo[0].strides = __pyx_pybuffernd_pos_old.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos_old.diminfo[0].shape = __pyx_pybuffernd_pos_old.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos_old.diminfo[1].strides = __pyx_pybuffernd_pos_old.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos_old.diminfo[1].shape = __pyx_pybuffernd_pos_old.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":568
 *             nlist.neigh_row_type.
 *     '''
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos_old.shape[1] == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":569
 *     '''
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos_old.shape[1] == 3
 *     assert pos_old.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":570
 *     assert pos.shape[1] == 3
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos_old.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert pos_old.flags['C_CONTIGUOUS']
 *     assert pos.shape[0] == pos_old.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos_old->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":571
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos_old.shape[1] == 3
 *     assert pos_old.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[0] == pos_old.shape[0]
 *     assert neighs.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos_old), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":572
 *     assert pos_old.shape[1] == 3
 *     assert pos_old.flags['C_CONTIGUOUS']
 *     assert pos.shape[0] == pos_old.shape[0]             # <<<<<<<<<<<<<<
 *     assert neighs.flags['C_CONTIGUOUS']
 *     nlist.nlist_recompute_low(
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[0]) == (__pyx_v_pos_old->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":573
 *     assert pos_old.flags['C_CONTIGUOUS']
 *     assert pos.shape[0] == pos_old.shape[0]
 *     assert neighs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     nlist.nlist_recompute_low(
 *         <double*>pos.data, <double*>pos_old.data, unitcell._c_cell,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighs), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":576
 *     nlist.nlist_recompute_low(
 *         <double*>pos.data, <double*>pos_old.data, unitcell._c_cell,
 *         <nlist.neigh_row_type*>neighs.data, len(neighs)             # <<<<<<<<<<<<<<
 *     )
 * 
 */
  __pyx_t_4 = PyObject_Length(((PyObject *)__pyx_v_neighs)); if (unlikely(__pyx_t_4 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":574
 *     assert pos.shape[0] == pos_old.shape[0]
 *     assert neighs.flags['C_CONTIGUOUS']
 *     nlist.nlist_recompute_low(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>pos_old.data, unitcell._c_cell,
 *         <nlist.neigh_row_type*>neighs.data, len(neighs)
 */
  nlist_recompute_low(((double *)__pyx_v_pos->data), ((double *)__pyx_v_pos_old->data), __pyx_v_unitcell->_c_cell, ((neigh_row_type *)__pyx_v_neighs->data), __pyx_t_4);

  /* "yaff/pes/ext.pyx":544
 * 
 * 
 * def nlist_recompute(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=2] pos_old,
 *                     Cell unitcell,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos_old.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_recompute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos_old.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":580
 * 
 * 
 * def nlist_inc_r(Cell unitcell, np.ndarray[long, ndim=1] r, np.ndarray[long, ndim=1] rmax):             # <<<<<<<<<<<<<<
 *     '''Increment the vector ``r`` to the location of the `next` periodic image.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15nlist_inc_r(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_14nlist_inc_r[] = "nlist_inc_r(Cell unitcell, ndarray r, ndarray rmax)\nIncrement the vector ``r`` to the location of the `next` periodic image.\n\n       **Arguments:**\n\n       unitcell\n            An instance of the UnitCell class, describing the periodic boundary\n            conditions.\n\n       r\n            An array of integers describing the current image. This will be\n            incremented in place.\n\n       rmax\n            An array of integers specifying the range of periodic images that\n            must be visited along each cell vector.\n\n       **Returns:**\n\n       True if the counter ``r`` was at the last image and is therefore reset\n       to the first image. False in all other cases.\n\n       **Description:**\n\n       This Python wrapper is only present for debugging purposes. Note that\n       this routine visits only half of the periodic images because the other\n       half contains exactly the same relative vectors.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_15nlist_inc_r = {__Pyx_NAMESTR("nlist_inc_r"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15nlist_inc_r, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_14nlist_inc_r)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_15nlist_inc_r(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_r = 0;
  PyArrayObject *__pyx_v_rmax = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("nlist_inc_r (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_unitcell,&__pyx_n_s_r,&__pyx_n_s_rmax,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_inc_r", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("nlist_inc_r", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "nlist_inc_r") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[0]);
    __pyx_v_r = ((PyArrayObject *)values[1]);
    __pyx_v_rmax = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("nlist_inc_r", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.nlist_inc_r", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r), __pyx_ptype_5numpy_ndarray, 1, "r", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rmax), __pyx_ptype_5numpy_ndarray, 1, "rmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_14nlist_inc_r(__pyx_self, __pyx_v_unitcell, __pyx_v_r, __pyx_v_rmax);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_14nlist_inc_r(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_rmax) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r;
  __Pyx_Buffer __pyx_pybuffer_r;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rmax;
  __Pyx_Buffer __pyx_pybuffer_rmax;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("nlist_inc_r", 0);
  __pyx_pybuffer_r.pybuffer.buf = NULL;
  __pyx_pybuffer_r.refcount = 0;
  __pyx_pybuffernd_r.data = NULL;
  __pyx_pybuffernd_r.rcbuffer = &__pyx_pybuffer_r;
  __pyx_pybuffer_rmax.pybuffer.buf = NULL;
  __pyx_pybuffer_rmax.refcount = 0;
  __pyx_pybuffernd_rmax.data = NULL;
  __pyx_pybuffernd_rmax.rcbuffer = &__pyx_pybuffer_rmax;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r.rcbuffer->pybuffer, (PyObject*)__pyx_v_r, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_r.diminfo[0].strides = __pyx_pybuffernd_r.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r.diminfo[0].shape = __pyx_pybuffernd_r.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_rmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_rmax.diminfo[0].strides = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rmax.diminfo[0].shape = __pyx_pybuffernd_rmax.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":608
 *        half contains exactly the same relative vectors.
 *     '''
 *     return nlist.nlist_inc_r(unitcell._c_cell, <long*>r.data, <long*>rmax.data)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(nlist_inc_r(__pyx_v_unitcell->_c_cell, ((long *)__pyx_v_r->data), ((long *)__pyx_v_rmax->data))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":580
 * 
 * 
 * def nlist_inc_r(Cell unitcell, np.ndarray[long, ndim=1] r, np.ndarray[long, ndim=1] rmax):             # <<<<<<<<<<<<<<
 *     '''Increment the vector ``r`` to the location of the `next` periodic image.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.nlist_inc_r", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rmax.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":620
 *     cdef truncation.trunc_scheme_type* _c_trunc_scheme
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_trunc_scheme is not NULL:
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)
 */

/* Python wrapper */
static void __pyx_pw_4yaff_3pes_3ext_10Truncation_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yaff_3pes_3ext_10Truncation_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yaff_3pes_3ext_10Truncation___dealloc__(((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yaff_3pes_3ext_10Truncation___dealloc__(struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "yaff/pes/ext.pyx":621
 * 
 *     def __dealloc__(self):
 *         if self._c_trunc_scheme is not NULL:             # <<<<<<<<<<<<<<
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_trunc_scheme != NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":622
 *     def __dealloc__(self):
 *         if self._c_trunc_scheme is not NULL:
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)             # <<<<<<<<<<<<<<
 * 
 *     def trunc_fn(self, double d, double rcut):
 */
    trunc_scheme_free(__pyx_v_self->_c_trunc_scheme);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":620
 *     cdef truncation.trunc_scheme_type* _c_trunc_scheme
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_trunc_scheme is not NULL:
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "yaff/pes/ext.pyx":624
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)
 * 
 *     def trunc_fn(self, double d, double rcut):             # <<<<<<<<<<<<<<
 *         '''trunc_fn(d, rcut)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_10Truncation_3trunc_fn(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10Truncation_2trunc_fn[] = "Truncation.trunc_fn(self, double d, double rcut)\ntrunc_fn(d, rcut)\n\n           Return the truncation function and its derivative.\n\n           **Arguments:**\n\n           d\n                The distance at which the truncation function must be evaluated.\n\n           rcut\n                The cutoff radius.\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_10Truncation_3trunc_fn(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_d;
  double __pyx_v_rcut;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("trunc_fn (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,&__pyx_n_s_rcut,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("trunc_fn", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "trunc_fn") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("trunc_fn", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Truncation.trunc_fn", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10Truncation_2trunc_fn(((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)__pyx_v_self), __pyx_v_d, __pyx_v_rcut);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10Truncation_2trunc_fn(struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_self, double __pyx_v_d, double __pyx_v_rcut) {
  double __pyx_v_hg;
  double __pyx_v_hgg;
  double __pyx_v_h;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("trunc_fn", 0);

  /* "yaff/pes/ext.pyx":639
 *         cdef double hg
 *         cdef double hgg
 *         hg, hgg = 0.0, 0.0             # <<<<<<<<<<<<<<
 *         h = truncation.trunc_scheme_fn(self._c_trunc_scheme, d, rcut, &hg, &hgg)
 *         return h, hg
 */
  __pyx_t_1 = 0.0;
  __pyx_t_2 = 0.0;
  __pyx_v_hg = __pyx_t_1;
  __pyx_v_hgg = __pyx_t_2;

  /* "yaff/pes/ext.pyx":640
 *         cdef double hgg
 *         hg, hgg = 0.0, 0.0
 *         h = truncation.trunc_scheme_fn(self._c_trunc_scheme, d, rcut, &hg, &hgg)             # <<<<<<<<<<<<<<
 *         return h, hg
 * 
 */
  __pyx_v_h = trunc_scheme_fn(__pyx_v_self->_c_trunc_scheme, __pyx_v_d, __pyx_v_rcut, (&__pyx_v_hg), (&__pyx_v_hgg));

  /* "yaff/pes/ext.pyx":641
 *         hg, hgg = 0.0, 0.0
 *         h = truncation.trunc_scheme_fn(self._c_trunc_scheme, d, rcut, &hg, &hgg)
 *         return h, hg             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_h); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_hg); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":624
 *             truncation.trunc_scheme_free(self._c_trunc_scheme)
 * 
 *     def trunc_fn(self, double d, double rcut):             # <<<<<<<<<<<<<<
 *         '''trunc_fn(d, rcut)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("yaff.pes.ext.Truncation.trunc_fn", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":660
 *                  \end{array} \right.
 *     '''
 *     def __cinit__(self, double tau):             # <<<<<<<<<<<<<<
 *         self._c_trunc_scheme = truncation.hammer_new(tau)
 *         if self._c_trunc_scheme is NULL:
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_6Hammer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_6Hammer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_tau;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tau,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tau)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_tau = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_tau == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Hammer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_6Hammer___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_Hammer *)__pyx_v_self), __pyx_v_tau);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_6Hammer___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self, double __pyx_v_tau) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yaff/pes/ext.pyx":661
 *     '''
 *     def __cinit__(self, double tau):
 *         self._c_trunc_scheme = truncation.hammer_new(tau)             # <<<<<<<<<<<<<<
 *         if self._c_trunc_scheme is NULL:
 *             raise MemoryError
 */
  __pyx_v_self->__pyx_base._c_trunc_scheme = hammer_new(__pyx_v_tau);

  /* "yaff/pes/ext.pyx":662
 *     def __cinit__(self, double tau):
 *         self._c_trunc_scheme = truncation.hammer_new(tau)
 *         if self._c_trunc_scheme is NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->__pyx_base._c_trunc_scheme == NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":663
 *         self._c_trunc_scheme = truncation.hammer_new(tau)
 *         if self._c_trunc_scheme is NULL:
 *             raise MemoryError             # <<<<<<<<<<<<<<
 * 
 *     def _get_tau(self):
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":660
 *                  \end{array} \right.
 *     '''
 *     def __cinit__(self, double tau):             # <<<<<<<<<<<<<<
 *         self._c_trunc_scheme = truncation.hammer_new(tau)
 *         if self._c_trunc_scheme is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Hammer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":665
 *             raise MemoryError
 * 
 *     def _get_tau(self):             # <<<<<<<<<<<<<<
 *         '''The Tau parameter of the truncation function'''
 *         return truncation.hammer_get_tau(self._c_trunc_scheme)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_6Hammer_3_get_tau(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_6Hammer_2_get_tau[] = "Hammer._get_tau(self)\nThe Tau parameter of the truncation function";
static PyObject *__pyx_pw_4yaff_3pes_3ext_6Hammer_3_get_tau(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_tau (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_6Hammer_2_get_tau(((struct __pyx_obj_4yaff_3pes_3ext_Hammer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_6Hammer_2_get_tau(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_tau", 0);

  /* "yaff/pes/ext.pyx":667
 *     def _get_tau(self):
 *         '''The Tau parameter of the truncation function'''
 *         return truncation.hammer_get_tau(self._c_trunc_scheme)             # <<<<<<<<<<<<<<
 * 
 *     tau = property(_get_tau)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(hammer_get_tau(__pyx_v_self->__pyx_base._c_trunc_scheme)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":665
 *             raise MemoryError
 * 
 *     def _get_tau(self):             # <<<<<<<<<<<<<<
 *         '''The Tau parameter of the truncation function'''
 *         return truncation.hammer_get_tau(self._c_trunc_scheme)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.Hammer._get_tau", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":671
 *     tau = property(_get_tau)
 * 
 *     def get_log(self):             # <<<<<<<<<<<<<<
 *         '''get_log()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_6Hammer_5get_log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_6Hammer_4get_log[] = "Hammer.get_log(self)\nget_log()\n\n           Return a string suitable for the screen logger\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_6Hammer_5get_log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_6Hammer_4get_log(((struct __pyx_obj_4yaff_3pes_3ext_Hammer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_6Hammer_4get_log(struct __pyx_obj_4yaff_3pes_3ext_Hammer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_log", 0);

  /* "yaff/pes/ext.pyx":676
 *            Return a string suitable for the screen logger
 *         '''
 *         return 'hammer %s' % log.length(self.tau)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_length); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_tau); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Remainder(__pyx_kp_s_hammer_s, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":671
 *     tau = property(_get_tau)
 * 
 *     def get_log(self):             # <<<<<<<<<<<<<<
 *         '''get_log()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yaff.pes.ext.Hammer.get_log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":696
 *                  \end{array} \right.
 *     '''
 *     def __cinit__(self, double width):             # <<<<<<<<<<<<<<
 *         self._c_trunc_scheme = truncation.switch3_new(width)
 *         if self._c_trunc_scheme is NULL:
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_7Switch3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_7Switch3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_width;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_width,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_width)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 696; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_width = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_width == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 696; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 696; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Switch3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7Switch3___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_Switch3 *)__pyx_v_self), __pyx_v_width);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_7Switch3___cinit__(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self, double __pyx_v_width) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yaff/pes/ext.pyx":697
 *     '''
 *     def __cinit__(self, double width):
 *         self._c_trunc_scheme = truncation.switch3_new(width)             # <<<<<<<<<<<<<<
 *         if self._c_trunc_scheme is NULL:
 *             raise MemoryError
 */
  __pyx_v_self->__pyx_base._c_trunc_scheme = switch3_new(__pyx_v_width);

  /* "yaff/pes/ext.pyx":698
 *     def __cinit__(self, double width):
 *         self._c_trunc_scheme = truncation.switch3_new(width)
 *         if self._c_trunc_scheme is NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->__pyx_base._c_trunc_scheme == NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":699
 *         self._c_trunc_scheme = truncation.switch3_new(width)
 *         if self._c_trunc_scheme is NULL:
 *             raise MemoryError             # <<<<<<<<<<<<<<
 * 
 *     def _get_width(self):
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":696
 *                  \end{array} \right.
 *     '''
 *     def __cinit__(self, double width):             # <<<<<<<<<<<<<<
 *         self._c_trunc_scheme = truncation.switch3_new(width)
 *         if self._c_trunc_scheme is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yaff.pes.ext.Switch3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":701
 *             raise MemoryError
 * 
 *     def _get_width(self):             # <<<<<<<<<<<<<<
 *         '''The width parameter of the truncation scheme'''
 *         return truncation.switch3_get_width(self._c_trunc_scheme)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7Switch3_3_get_width(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7Switch3_2_get_width[] = "Switch3._get_width(self)\nThe width parameter of the truncation scheme";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7Switch3_3_get_width(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_width (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7Switch3_2_get_width(((struct __pyx_obj_4yaff_3pes_3ext_Switch3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7Switch3_2_get_width(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_width", 0);

  /* "yaff/pes/ext.pyx":703
 *     def _get_width(self):
 *         '''The width parameter of the truncation scheme'''
 *         return truncation.switch3_get_width(self._c_trunc_scheme)             # <<<<<<<<<<<<<<
 * 
 *     width = property(_get_width)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(switch3_get_width(__pyx_v_self->__pyx_base._c_trunc_scheme)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":701
 *             raise MemoryError
 * 
 *     def _get_width(self):             # <<<<<<<<<<<<<<
 *         '''The width parameter of the truncation scheme'''
 *         return truncation.switch3_get_width(self._c_trunc_scheme)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.Switch3._get_width", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":707
 *     width = property(_get_width)
 * 
 *     def get_log(self):             # <<<<<<<<<<<<<<
 *         '''get_log()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7Switch3_5get_log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7Switch3_4get_log[] = "Switch3.get_log(self)\nget_log()\n\n           Return a string suitable for the screen logger\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7Switch3_5get_log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7Switch3_4get_log(((struct __pyx_obj_4yaff_3pes_3ext_Switch3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7Switch3_4get_log(struct __pyx_obj_4yaff_3pes_3ext_Switch3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_log", 0);

  /* "yaff/pes/ext.pyx":712
 *            Return a string suitable for the screen logger
 *         '''
 *         return 'switch3 %s' % log.length(self.width)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_length); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_width); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Remainder(__pyx_kp_s_switch3_s, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":707
 *     width = property(_get_width)
 * 
 *     def get_log(self):             # <<<<<<<<<<<<<<
 *         '''get_log()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("yaff.pes.ext.Switch3.get_log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":724
 *     cdef switchon.switchon_type* _c_switchon
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_switchon = switchon.switchon_new()
 *         if self._c_switchon is NULL:
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_8SwitchOn_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_8SwitchOn_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_8SwitchOn___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_8SwitchOn___cinit__(struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yaff/pes/ext.pyx":725
 * 
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_switchon = switchon.switchon_new()             # <<<<<<<<<<<<<<
 *         if self._c_switchon is NULL:
 *             raise MemoryError()
 */
  __pyx_v_self->_c_switchon = switchon_new();

  /* "yaff/pes/ext.pyx":726
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_switchon = switchon.switchon_new()
 *         if self._c_switchon is NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_switchon == NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":727
 *         self._c_switchon = switchon.switchon_new()
 *         if self._c_switchon is NULL:
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":724
 *     cdef switchon.switchon_type* _c_switchon
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_switchon = switchon.switchon_new()
 *         if self._c_switchon is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yaff.pes.ext.SwitchOn.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":729
 *             raise MemoryError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_switchon is not NULL:
 *             switchon.switchon_free(self._c_switchon)
 */

/* Python wrapper */
static void __pyx_pw_4yaff_3pes_3ext_8SwitchOn_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yaff_3pes_3ext_8SwitchOn_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yaff_3pes_3ext_8SwitchOn_2__dealloc__(((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yaff_3pes_3ext_8SwitchOn_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "yaff/pes/ext.pyx":730
 * 
 *     def __dealloc__(self):
 *         if self._c_switchon is not NULL:             # <<<<<<<<<<<<<<
 *             switchon.switchon_free(self._c_switchon)
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_switchon != NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":731
 *     def __dealloc__(self):
 *         if self._c_switchon is not NULL:
 *             switchon.switchon_free(self._c_switchon)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    switchon_free(__pyx_v_self->_c_switchon);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":729
 *             raise MemoryError()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._c_switchon is not NULL:
 *             switchon.switchon_free(self._c_switchon)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "yaff/pes/ext.pyx":748
 *     cdef np.ndarray _c_radii
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] radii):             # <<<<<<<<<<<<<<
 *         assert radii.flags['C_CONTIGUOUS']
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_19SwitchErrorFunction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_19SwitchErrorFunction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_radii = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_radii,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radii)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_radii = ((PyArrayObject *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.SwitchErrorFunction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_radii), __pyx_ptype_5numpy_ndarray, 1, "radii", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19SwitchErrorFunction___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *)__pyx_v_self), __pyx_v_radii);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_19SwitchErrorFunction___cinit__(struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *__pyx_v_self, PyArrayObject *__pyx_v_radii) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_radii;
  __Pyx_Buffer __pyx_pybuffer_radii;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_radii.pybuffer.buf = NULL;
  __pyx_pybuffer_radii.refcount = 0;
  __pyx_pybuffernd_radii.data = NULL;
  __pyx_pybuffernd_radii.rcbuffer = &__pyx_pybuffer_radii;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_radii.diminfo[0].strides = __pyx_pybuffernd_radii.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii.diminfo[0].shape = __pyx_pybuffernd_radii.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":749
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] radii):
 *         assert radii.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)
 *         if not switchon.switchon_ready(self._c_switchon):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_radii), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":750
 *     def __cinit__(self, np.ndarray[double, ndim=1] radii):
 *         assert radii.flags['C_CONTIGUOUS']
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)             # <<<<<<<<<<<<<<
 *         if not switchon.switchon_ready(self._c_switchon):
 *             raise MemoryError()
 */
  switchon_data_erf_init(__pyx_v_self->__pyx_base._c_switchon, ((double *)__pyx_v_radii->data));

  /* "yaff/pes/ext.pyx":751
 *         assert radii.flags['C_CONTIGUOUS']
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)
 *         if not switchon.switchon_ready(self._c_switchon):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_radii = radii
 */
  __pyx_t_3 = ((!(switchon_ready(__pyx_v_self->__pyx_base._c_switchon) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":752
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)
 *         if not switchon.switchon_ready(self._c_switchon):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_radii = radii
 * 
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":753
 *         if not switchon.switchon_ready(self._c_switchon):
 *             raise MemoryError()
 *         self._c_radii = radii             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_radii));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_radii));
  __Pyx_GOTREF(__pyx_v_self->_c_radii);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_radii));
  __pyx_v_self->_c_radii = ((PyArrayObject *)__pyx_v_radii);

  /* "yaff/pes/ext.pyx":748
 *     cdef np.ndarray _c_radii
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] radii):             # <<<<<<<<<<<<<<
 *         assert radii.flags['C_CONTIGUOUS']
 *         switchon.switchon_data_erf_init(self._c_switchon, <double*>radii.data)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.SwitchErrorFunction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":768
 *     cdef long _c_hsize
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_pair_pot = pair_pot.pair_pot_new()
 *         if self._c_pair_pot is NULL:
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_7PairPot_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_7PairPot_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __pyx_v_kwargs = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7PairPot___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_7PairPot___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "yaff/pes/ext.pyx":769
 * 
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_pair_pot = pair_pot.pair_pot_new()             # <<<<<<<<<<<<<<
 *         if self._c_pair_pot is NULL:
 *             raise MemoryError()
 */
  __pyx_v_self->_c_pair_pot = pair_pot_new();

  /* "yaff/pes/ext.pyx":770
 *     def __cinit__(self, *args, **kwargs):
 *         self._c_pair_pot = pair_pot.pair_pot_new()
 *         if self._c_pair_pot is NULL:             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_hsize = 0
 */
  __pyx_t_1 = ((__pyx_v_self->_c_pair_pot == NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":771
 *         self._c_pair_pot = pair_pot.pair_pot_new()
 *         if self._c_pair_pot is NULL:
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_hsize = 0
 * 
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":772
 *         if self._c_pair_pot is NULL:
 *             raise MemoryError()
 *         self._c_hsize = 0             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->_c_hsize = 0;

  /* "yaff/pes/ext.pyx":768
 *     cdef long _c_hsize
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._c_pair_pot = pair_pot.pair_pot_new()
 *         if self._c_pair_pot is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPot.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":774
 *         self._c_hsize = 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if pair_pot.pair_pot_ready(self._c_pair_pot):
 *             pair_pot.pair_data_free(self._c_pair_pot)
 */

/* Python wrapper */
static void __pyx_pw_4yaff_3pes_3ext_7PairPot_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4yaff_3pes_3ext_7PairPot_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4yaff_3pes_3ext_7PairPot_2__dealloc__(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4yaff_3pes_3ext_7PairPot_2__dealloc__(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "yaff/pes/ext.pyx":775
 * 
 *     def __dealloc__(self):
 *         if pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             pair_pot.pair_data_free(self._c_pair_pot)
 *         if self._c_pair_pot is not NULL:
 */
  __pyx_t_1 = (pair_pot_ready(__pyx_v_self->_c_pair_pot) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":776
 *     def __dealloc__(self):
 *         if pair_pot.pair_pot_ready(self._c_pair_pot):
 *             pair_pot.pair_data_free(self._c_pair_pot)             # <<<<<<<<<<<<<<
 *         if self._c_pair_pot is not NULL:
 *             pair_pot.pair_pot_free(self._c_pair_pot)
 */
    pair_data_free(__pyx_v_self->_c_pair_pot);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":777
 *         if pair_pot.pair_pot_ready(self._c_pair_pot):
 *             pair_pot.pair_data_free(self._c_pair_pot)
 *         if self._c_pair_pot is not NULL:             # <<<<<<<<<<<<<<
 *             pair_pot.pair_pot_free(self._c_pair_pot)
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->_c_pair_pot != NULL) != 0);
  if (__pyx_t_1) {

    /* "yaff/pes/ext.pyx":778
 *             pair_pot.pair_data_free(self._c_pair_pot)
 *         if self._c_pair_pot is not NULL:
 *             pair_pot.pair_pot_free(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     def _get_rcut(self):
 */
    pair_pot_free(__pyx_v_self->_c_pair_pot);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":774
 *         self._c_hsize = 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if pair_pot.pair_pot_ready(self._c_pair_pot):
 *             pair_pot.pair_data_free(self._c_pair_pot)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "yaff/pes/ext.pyx":780
 *             pair_pot.pair_pot_free(self._c_pair_pot)
 * 
 *     def _get_rcut(self):             # <<<<<<<<<<<<<<
 *         '''The cutoff parameter'''
 *         return pair_pot.pair_pot_get_rcut(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_5_get_rcut(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7PairPot_4_get_rcut[] = "PairPot._get_rcut(self)\nThe cutoff parameter";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_5_get_rcut(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_rcut (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7PairPot_4_get_rcut(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_4_get_rcut(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_rcut", 0);

  /* "yaff/pes/ext.pyx":782
 *     def _get_rcut(self):
 *         '''The cutoff parameter'''
 *         return pair_pot.pair_pot_get_rcut(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     rcut = property(_get_rcut)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_pot_get_rcut(__pyx_v_self->_c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":780
 *             pair_pot.pair_pot_free(self._c_pair_pot)
 * 
 *     def _get_rcut(self):             # <<<<<<<<<<<<<<
 *         '''The cutoff parameter'''
 *         return pair_pot.pair_pot_get_rcut(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPot._get_rcut", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":786
 *     rcut = property(_get_rcut)
 * 
 *     cdef set_truncation(self, Truncation tr):             # <<<<<<<<<<<<<<
 *         '''Set the truncation scheme'''
 *         self.tr = tr
 */

static PyObject *__pyx_f_4yaff_3pes_3ext_7PairPot_set_truncation(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_truncation", 0);

  /* "yaff/pes/ext.pyx":788
 *     cdef set_truncation(self, Truncation tr):
 *         '''Set the truncation scheme'''
 *         self.tr = tr             # <<<<<<<<<<<<<<
 *         if tr is None:
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, NULL)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_tr));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_tr));
  __Pyx_GOTREF(__pyx_v_self->tr);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->tr));
  __pyx_v_self->tr = __pyx_v_tr;

  /* "yaff/pes/ext.pyx":789
 *         '''Set the truncation scheme'''
 *         self.tr = tr
 *         if tr is None:             # <<<<<<<<<<<<<<
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, NULL)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_tr) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yaff/pes/ext.pyx":790
 *         self.tr = tr
 *         if tr is None:
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, NULL)             # <<<<<<<<<<<<<<
 *         else:
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, tr._c_trunc_scheme)
 */
    pair_pot_set_trunc_scheme(__pyx_v_self->_c_pair_pot, NULL);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":792
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, NULL)
 *         else:
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, tr._c_trunc_scheme)             # <<<<<<<<<<<<<<
 * 
 *     def get_truncation(self):
 */
    pair_pot_set_trunc_scheme(__pyx_v_self->_c_pair_pot, __pyx_v_tr->_c_trunc_scheme);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":786
 *     rcut = property(_get_rcut)
 * 
 *     cdef set_truncation(self, Truncation tr):             # <<<<<<<<<<<<<<
 *         '''Set the truncation scheme'''
 *         self.tr = tr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":794
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, tr._c_trunc_scheme)
 * 
 *     def get_truncation(self):             # <<<<<<<<<<<<<<
 *         '''Returns the current truncation scheme'''
 *         return self.tr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_7get_truncation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7PairPot_6get_truncation[] = "PairPot.get_truncation(self)\nReturns the current truncation scheme";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_7get_truncation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_truncation (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7PairPot_6get_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_6get_truncation(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_truncation", 0);

  /* "yaff/pes/ext.pyx":796
 *     def get_truncation(self):
 *         '''Returns the current truncation scheme'''
 *         return self.tr             # <<<<<<<<<<<<<<
 * 
 *     cdef set_switchon(self, SwitchOn sw):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->tr));
  __pyx_r = ((PyObject *)__pyx_v_self->tr);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":794
 *             pair_pot.pair_pot_set_trunc_scheme(self._c_pair_pot, tr._c_trunc_scheme)
 * 
 *     def get_truncation(self):             # <<<<<<<<<<<<<<
 *         '''Returns the current truncation scheme'''
 *         return self.tr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":798
 *         return self.tr
 * 
 *     cdef set_switchon(self, SwitchOn sw):             # <<<<<<<<<<<<<<
 *         '''Set the switchon scheme'''
 *         self.sw = sw
 */

static PyObject *__pyx_f_4yaff_3pes_3ext_7PairPot_set_switchon(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_switchon", 0);

  /* "yaff/pes/ext.pyx":800
 *     cdef set_switchon(self, SwitchOn sw):
 *         '''Set the switchon scheme'''
 *         self.sw = sw             # <<<<<<<<<<<<<<
 *         if sw is None:
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, NULL)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_sw));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sw));
  __Pyx_GOTREF(__pyx_v_self->sw);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->sw));
  __pyx_v_self->sw = __pyx_v_sw;

  /* "yaff/pes/ext.pyx":801
 *         '''Set the switchon scheme'''
 *         self.sw = sw
 *         if sw is None:             # <<<<<<<<<<<<<<
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, NULL)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_sw) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yaff/pes/ext.pyx":802
 *         self.sw = sw
 *         if sw is None:
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, NULL)             # <<<<<<<<<<<<<<
 *         else:
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, sw._c_switchon)
 */
    pair_pot_set_switchon_scheme(__pyx_v_self->_c_pair_pot, NULL);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":804
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, NULL)
 *         else:
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, sw._c_switchon)             # <<<<<<<<<<<<<<
 * 
 *     def get_switchon(self):
 */
    pair_pot_set_switchon_scheme(__pyx_v_self->_c_pair_pot, __pyx_v_sw->_c_switchon);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":798
 *         return self.tr
 * 
 *     cdef set_switchon(self, SwitchOn sw):             # <<<<<<<<<<<<<<
 *         '''Set the switchon scheme'''
 *         self.sw = sw
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":806
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, sw._c_switchon)
 * 
 *     def get_switchon(self):             # <<<<<<<<<<<<<<
 *         '''Returns the current switchon scheme'''
 *         return self.sw
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_9get_switchon(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7PairPot_8get_switchon[] = "PairPot.get_switchon(self)\nReturns the current switchon scheme";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_9get_switchon(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_switchon (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7PairPot_8get_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_8get_switchon(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_switchon", 0);

  /* "yaff/pes/ext.pyx":808
 *     def get_switchon(self):
 *         '''Returns the current switchon scheme'''
 *         return self.sw             # <<<<<<<<<<<<<<
 * 
 *     def compute(self, np.ndarray[nlist.neigh_row_type, ndim=1] neighs,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->sw));
  __pyx_r = ((PyObject *)__pyx_v_self->sw);
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":806
 *             pair_pot.pair_pot_set_switchon_scheme(self._c_pair_pot, sw._c_switchon)
 * 
 *     def get_switchon(self):             # <<<<<<<<<<<<<<
 *         '''Returns the current switchon scheme'''
 *         return self.sw
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":810
 *         return self.sw
 * 
 *     def compute(self, np.ndarray[nlist.neigh_row_type, ndim=1] neighs,             # <<<<<<<<<<<<<<
 *                 np.ndarray[pair_pot.scaling_row_type, ndim=1] stab,
 *                 np.ndarray[double, ndim=2] gpos,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_11compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_7PairPot_10compute[] = "PairPot.compute(self, ndarray neighs, ndarray stab, ndarray gpos, ndarray vtens, ndarray hess, long nneigh)\nCompute the pairwise interactions\n\n           **Arguments:**\n\n           neighs\n                The neighbor list array. One element is of the datatype\n                nlist.neigh_row_type.\n\n           stab\n                The array with short-range scalings. Each element is of the\n                datatype pair_pot.scaling_row_type\n\n           gpos\n                The output array for the derivative of the energy towards the\n                atomic positions. If None, these derivatives are not computed.\n\n           vtens\n                The output array for the virial tensor. If none, it is not\n                computed.\n\n           hess\n                The output array for the hessian. If none, it is not computed.\n\n           nneigh\n                The number of records to consider in the neighbor list.\n\n           **Returns:** the energy.\n        ";
static PyObject *__pyx_pw_4yaff_3pes_3ext_7PairPot_11compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_neighs = 0;
  PyArrayObject *__pyx_v_stab = 0;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  PyArrayObject *__pyx_v_hess = 0;
  long __pyx_v_nneigh;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_neighs,&__pyx_n_s_stab,&__pyx_n_s_gpos,&__pyx_n_s_vtens,&__pyx_n_s_hess,&__pyx_n_s_nneigh,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hess)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nneigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_neighs = ((PyArrayObject *)values[0]);
    __pyx_v_stab = ((PyArrayObject *)values[1]);
    __pyx_v_gpos = ((PyArrayObject *)values[2]);
    __pyx_v_vtens = ((PyArrayObject *)values[3]);
    __pyx_v_hess = ((PyArrayObject *)values[4]);
    __pyx_v_nneigh = __Pyx_PyInt_As_long(values[5]); if (unlikely((__pyx_v_nneigh == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPot.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_stab), __pyx_ptype_5numpy_ndarray, 1, "stab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hess), __pyx_ptype_5numpy_ndarray, 1, "hess", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_7PairPot_10compute(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_neighs, __pyx_v_stab, __pyx_v_gpos, __pyx_v_vtens, __pyx_v_hess, __pyx_v_nneigh);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_7PairPot_10compute(struct __pyx_obj_4yaff_3pes_3ext_PairPot *__pyx_v_self, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess, long __pyx_v_nneigh) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_vtens;
  double *__pyx_v_my_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hess;
  __Pyx_Buffer __pyx_pybuffer_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_stab;
  __Pyx_Buffer __pyx_pybuffer_stab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute", 0);
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  __pyx_pybuffer_stab.pybuffer.buf = NULL;
  __pyx_pybuffer_stab.refcount = 0;
  __pyx_pybuffernd_stab.data = NULL;
  __pyx_pybuffernd_stab.rcbuffer = &__pyx_pybuffer_stab;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  __pyx_pybuffer_hess.pybuffer.buf = NULL;
  __pyx_pybuffer_hess.refcount = 0;
  __pyx_pybuffernd_hess.data = NULL;
  __pyx_pybuffernd_hess.rcbuffer = &__pyx_pybuffer_hess;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_stab.rcbuffer->pybuffer, (PyObject*)__pyx_v_stab, &__Pyx_TypeInfo_nn_scaling_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_stab.diminfo[0].strides = __pyx_pybuffernd_stab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_stab.diminfo[0].shape = __pyx_pybuffernd_stab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hess.rcbuffer->pybuffer, (PyObject*)__pyx_v_hess, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hess.diminfo[0].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hess.diminfo[0].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hess.diminfo[1].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hess.diminfo[1].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":847
 *         cdef double *my_hess
 * 
 *         assert pair_pot.pair_pot_ready(self._c_pair_pot)             # <<<<<<<<<<<<<<
 *         assert neighs.flags['C_CONTIGUOUS']
 *         assert stab.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(pair_pot_ready(__pyx_v_self->_c_pair_pot) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":848
 * 
 *         assert pair_pot.pair_pot_ready(self._c_pair_pot)
 *         assert neighs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert stab.flags['C_CONTIGUOUS']
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_neighs), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 848; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":849
 *         assert pair_pot.pair_pot_ready(self._c_pair_pot)
 *         assert neighs.flags['C_CONTIGUOUS']
 *         assert stab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 * 
 *         if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_stab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":851
 *         assert stab.flags['C_CONTIGUOUS']
 * 
 *         if gpos is None:             # <<<<<<<<<<<<<<
 *             my_gpos = NULL
 *         else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":852
 * 
 *         if gpos is None:
 *             my_gpos = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_gpos = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":854
 *             my_gpos = NULL
 *         else:
 *             assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert gpos.shape[1] == 3
 *             my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":855
 *         else:
 *             assert gpos.flags['C_CONTIGUOUS']
 *             assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *             my_gpos = <double*>gpos.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":856
 *             assert gpos.flags['C_CONTIGUOUS']
 *             assert gpos.shape[1] == 3
 *             my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 * 
 *         if vtens is None:
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":858
 *             my_gpos = <double*>gpos.data
 * 
 *         if vtens is None:             # <<<<<<<<<<<<<<
 *             my_vtens = NULL
 *         else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":859
 * 
 *         if vtens is None:
 *             my_vtens = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":861
 *             my_vtens = NULL
 *         else:
 *             assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert vtens.shape[0] == 3
 *             assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":862
 *         else:
 *             assert vtens.flags['C_CONTIGUOUS']
 *             assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *             assert vtens.shape[1] == 3
 *             my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":863
 *             assert vtens.flags['C_CONTIGUOUS']
 *             assert vtens.shape[0] == 3
 *             assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *             my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":864
 *             assert vtens.shape[0] == 3
 *             assert vtens.shape[1] == 3
 *             my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *         if hess is None:
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":866
 *             my_vtens = <double*>vtens.data
 * 
 *         if hess is None:             # <<<<<<<<<<<<<<
 *             my_hess = NULL
 *         else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_hess) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":867
 * 
 *         if hess is None:
 *             my_hess = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             assert hess.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_hess = NULL;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":869
 *             my_hess = NULL
 *         else:
 *             assert hess.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             my_hess = <double*>hess.data
 *             self._c_hsize = hess.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_hess), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":870
 *         else:
 *             assert hess.flags['C_CONTIGUOUS']
 *             my_hess = <double*>hess.data             # <<<<<<<<<<<<<<
 *             self._c_hsize = hess.shape[0]
 * 
 */
    __pyx_v_my_hess = ((double *)__pyx_v_hess->data);

    /* "yaff/pes/ext.pyx":871
 *             assert hess.flags['C_CONTIGUOUS']
 *             my_hess = <double*>hess.data
 *             self._c_hsize = hess.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         return pair_pot.pair_pot_compute(
 */
    __pyx_v_self->_c_hsize = (__pyx_v_hess->dimensions[0]);
  }
  __pyx_L5:;

  /* "yaff/pes/ext.pyx":873
 *             self._c_hsize = hess.shape[0]
 * 
 *         return pair_pot.pair_pot_compute(             # <<<<<<<<<<<<<<
 *             <nlist.neigh_row_type*>neighs.data, nneigh,
 *             <pair_pot.scaling_row_type*>stab.data, len(stab),
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":875
 *         return pair_pot.pair_pot_compute(
 *             <nlist.neigh_row_type*>neighs.data, nneigh,
 *             <pair_pot.scaling_row_type*>stab.data, len(stab),             # <<<<<<<<<<<<<<
 *             self._c_pair_pot, my_gpos, my_vtens, my_hess, self._c_hsize
 *         )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_stab)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":873
 *             self._c_hsize = hess.shape[0]
 * 
 *         return pair_pot.pair_pot_compute(             # <<<<<<<<<<<<<<
 *             <nlist.neigh_row_type*>neighs.data, nneigh,
 *             <pair_pot.scaling_row_type*>stab.data, len(stab),
 */
  __pyx_t_2 = PyFloat_FromDouble(pair_pot_compute(((neigh_row_type *)__pyx_v_neighs->data), __pyx_v_nneigh, ((scaling_row_type *)__pyx_v_stab->data), __pyx_t_5, __pyx_v_self->_c_pair_pot, __pyx_v_my_gpos, __pyx_v_my_vtens, __pyx_v_my_hess, __pyx_v_self->_c_hsize)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":810
 *         return self.sw
 * 
 *     def compute(self, np.ndarray[nlist.neigh_row_type, ndim=1] neighs,             # <<<<<<<<<<<<<<
 *                 np.ndarray[pair_pot.scaling_row_type, ndim=1] stab,
 *                 np.ndarray[double, ndim=2] gpos,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPot.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":919
 *     name = 'lj'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_9PairPotLJ_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_9PairPotLJ_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_sigmas = 0;
  PyArrayObject *__pyx_v_epsilons = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sigmas,&__pyx_n_s_epsilons,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "yaff/pes/ext.pyx":921
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,
 *                   np.ndarray[double, ndim=1] epsilons, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):             # <<<<<<<<<<<<<<
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']
 */
    values[3] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sigmas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_epsilons)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sigmas = ((PyArrayObject *)values[0]);
    __pyx_v_epsilons = ((PyArrayObject *)values[1]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[3]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJ.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sigmas), __pyx_ptype_5numpy_ndarray, 1, "sigmas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_epsilons), __pyx_ptype_5numpy_ndarray, 1, "epsilons", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotLJ___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self), __pyx_v_sigmas, __pyx_v_epsilons, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw);

  /* "yaff/pes/ext.pyx":919
 *     name = 'lj'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_9PairPotLJ___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self, PyArrayObject *__pyx_v_sigmas, PyArrayObject *__pyx_v_epsilons, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_epsilons;
  __Pyx_Buffer __pyx_pybuffer_epsilons;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_sigmas;
  __Pyx_Buffer __pyx_pybuffer_sigmas;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_sigmas.pybuffer.buf = NULL;
  __pyx_pybuffer_sigmas.refcount = 0;
  __pyx_pybuffernd_sigmas.data = NULL;
  __pyx_pybuffernd_sigmas.rcbuffer = &__pyx_pybuffer_sigmas;
  __pyx_pybuffer_epsilons.pybuffer.buf = NULL;
  __pyx_pybuffer_epsilons.refcount = 0;
  __pyx_pybuffernd_epsilons.data = NULL;
  __pyx_pybuffernd_epsilons.rcbuffer = &__pyx_pybuffer_epsilons;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer, (PyObject*)__pyx_v_sigmas, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_sigmas.diminfo[0].strides = __pyx_pybuffernd_sigmas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_sigmas.diminfo[0].shape = __pyx_pybuffernd_sigmas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer, (PyObject*)__pyx_v_epsilons, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_epsilons.diminfo[0].strides = __pyx_pybuffernd_epsilons.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_epsilons.diminfo[0].shape = __pyx_pybuffernd_epsilons.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":922
 *                   np.ndarray[double, ndim=1] epsilons, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert sigmas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_sigmas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":923
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_epsilons), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":924
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_sigmas->dimensions[0]) == (__pyx_v_epsilons->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":925
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":926
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_lj_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":927
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_lj_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":928
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_lj_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_lj_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_sigmas->data), ((double *)__pyx_v_epsilons->data));

  /* "yaff/pes/ext.pyx":929
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_lj_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_sigmas = sigmas
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":930
 *         pair_pot.pair_data_lj_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_sigmas = sigmas
 *         self._c_epsilons = epsilons
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":931
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_sigmas = sigmas             # <<<<<<<<<<<<<<
 *         self._c_epsilons = epsilons
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_sigmas));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sigmas));
  __Pyx_GOTREF(__pyx_v_self->_c_sigmas);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_sigmas));
  __pyx_v_self->_c_sigmas = ((PyArrayObject *)__pyx_v_sigmas);

  /* "yaff/pes/ext.pyx":932
 *             raise MemoryError()
 *         self._c_sigmas = sigmas
 *         self._c_epsilons = epsilons             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_epsilons));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_epsilons));
  __Pyx_GOTREF(__pyx_v_self->_c_epsilons);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_epsilons));
  __pyx_v_self->_c_epsilons = ((PyArrayObject *)__pyx_v_epsilons);

  /* "yaff/pes/ext.pyx":919
 *     name = 'lj'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJ.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":934
 *         self._c_epsilons = epsilons
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotLJ_2log[] = "PairPotLJ.log(self)\nWrite some suitable post-initialization screen log";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotLJ_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":936
 *     def log(self):
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":937
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom      Sigma    Epsilon')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":938
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__15, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":939
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_sigmas.shape[0]):
 *                 log('%7i %s %s' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i])))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 939; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":940
 *             log('   Atom      Sigma    Epsilon')
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i %s %s' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i])))
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_c_sigmas->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":941
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 *                 log('%7i %s %s' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_sigmas(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_sigmas), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_energy); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_epsilons), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_s_7i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":934
 *         self._c_epsilons = epsilons
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJ.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":943
 *                 log('%7i %s %s' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i])))
 * 
 *     def _get_sigmas(self):             # <<<<<<<<<<<<<<
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_5_get_sigmas(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotLJ_4_get_sigmas[] = "PairPotLJ._get_sigmas(self)\nThe array with sigma parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_5_get_sigmas(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_sigmas (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotLJ_4_get_sigmas(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_4_get_sigmas(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_sigmas", 0);

  /* "yaff/pes/ext.pyx":945
 *     def _get_sigmas(self):
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()             # <<<<<<<<<<<<<<
 * 
 *     sigmas = property(_get_sigmas)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_sigmas), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":943
 *                 log('%7i %s %s' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i])))
 * 
 *     def _get_sigmas(self):             # <<<<<<<<<<<<<<
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJ._get_sigmas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":949
 *     sigmas = property(_get_sigmas)
 * 
 *     def _get_epsilons(self):             # <<<<<<<<<<<<<<
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_7_get_epsilons(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotLJ_6_get_epsilons[] = "PairPotLJ._get_epsilons(self)\nThe array with epsilon parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_7_get_epsilons(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_epsilons (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotLJ_6_get_epsilons(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotLJ_6_get_epsilons(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_epsilons", 0);

  /* "yaff/pes/ext.pyx":951
 *     def _get_epsilons(self):
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()             # <<<<<<<<<<<<<<
 * 
 *     epsilons = property(_get_epsilons)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_epsilons), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":949
 *     sigmas = property(_get_sigmas)
 * 
 *     def _get_epsilons(self):             # <<<<<<<<<<<<<<
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJ._get_epsilons", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":999
 *     name = 'mm3'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons,
 *                   np.ndarray[int, ndim=1] onlypaulis, double rcut,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_10PairPotMM3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_10PairPotMM3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_sigmas = 0;
  PyArrayObject *__pyx_v_epsilons = 0;
  PyArrayObject *__pyx_v_onlypaulis = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sigmas,&__pyx_n_s_epsilons,&__pyx_n_s_onlypaulis,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1002
 *                   np.ndarray[double, ndim=1] epsilons,
 *                   np.ndarray[int, ndim=1] onlypaulis, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):             # <<<<<<<<<<<<<<
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sigmas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_epsilons)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_onlypaulis)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sigmas = ((PyArrayObject *)values[0]);
    __pyx_v_epsilons = ((PyArrayObject *)values[1]);
    __pyx_v_onlypaulis = ((PyArrayObject *)values[2]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sigmas), __pyx_ptype_5numpy_ndarray, 1, "sigmas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_epsilons), __pyx_ptype_5numpy_ndarray, 1, "epsilons", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_onlypaulis), __pyx_ptype_5numpy_ndarray, 1, "onlypaulis", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10PairPotMM3___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self), __pyx_v_sigmas, __pyx_v_epsilons, __pyx_v_onlypaulis, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw);

  /* "yaff/pes/ext.pyx":999
 *     name = 'mm3'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons,
 *                   np.ndarray[int, ndim=1] onlypaulis, double rcut,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_10PairPotMM3___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self, PyArrayObject *__pyx_v_sigmas, PyArrayObject *__pyx_v_epsilons, PyArrayObject *__pyx_v_onlypaulis, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_epsilons;
  __Pyx_Buffer __pyx_pybuffer_epsilons;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_onlypaulis;
  __Pyx_Buffer __pyx_pybuffer_onlypaulis;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_sigmas;
  __Pyx_Buffer __pyx_pybuffer_sigmas;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_sigmas.pybuffer.buf = NULL;
  __pyx_pybuffer_sigmas.refcount = 0;
  __pyx_pybuffernd_sigmas.data = NULL;
  __pyx_pybuffernd_sigmas.rcbuffer = &__pyx_pybuffer_sigmas;
  __pyx_pybuffer_epsilons.pybuffer.buf = NULL;
  __pyx_pybuffer_epsilons.refcount = 0;
  __pyx_pybuffernd_epsilons.data = NULL;
  __pyx_pybuffernd_epsilons.rcbuffer = &__pyx_pybuffer_epsilons;
  __pyx_pybuffer_onlypaulis.pybuffer.buf = NULL;
  __pyx_pybuffer_onlypaulis.refcount = 0;
  __pyx_pybuffernd_onlypaulis.data = NULL;
  __pyx_pybuffernd_onlypaulis.rcbuffer = &__pyx_pybuffer_onlypaulis;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer, (PyObject*)__pyx_v_sigmas, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_sigmas.diminfo[0].strides = __pyx_pybuffernd_sigmas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_sigmas.diminfo[0].shape = __pyx_pybuffernd_sigmas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer, (PyObject*)__pyx_v_epsilons, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_epsilons.diminfo[0].strides = __pyx_pybuffernd_epsilons.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_epsilons.diminfo[0].shape = __pyx_pybuffernd_epsilons.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_onlypaulis.rcbuffer->pybuffer, (PyObject*)__pyx_v_onlypaulis, &__Pyx_TypeInfo_int, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_onlypaulis.diminfo[0].strides = __pyx_pybuffernd_onlypaulis.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_onlypaulis.diminfo[0].shape = __pyx_pybuffernd_onlypaulis.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1003
 *                   np.ndarray[int, ndim=1] onlypaulis, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert sigmas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert onlypaulis.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_sigmas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1003; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1004
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert onlypaulis.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_epsilons), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1005
 *         assert sigmas.flags['C_CONTIGUOUS']
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert onlypaulis.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         assert sigmas.shape[0] == onlypaulis.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_onlypaulis), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1006
 *         assert epsilons.flags['C_CONTIGUOUS']
 *         assert onlypaulis.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]             # <<<<<<<<<<<<<<
 *         assert sigmas.shape[0] == onlypaulis.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_sigmas->dimensions[0]) == (__pyx_v_epsilons->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1007
 *         assert onlypaulis.flags['C_CONTIGUOUS']
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         assert sigmas.shape[0] == onlypaulis.shape[0]             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_sigmas->dimensions[0]) == (__pyx_v_onlypaulis->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1008
 *         assert sigmas.shape[0] == epsilons.shape[0]
 *         assert sigmas.shape[0] == onlypaulis.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1009
 *         assert sigmas.shape[0] == onlypaulis.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_mm3_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data, <int*>onlypaulis.data)
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1010
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_mm3_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data, <int*>onlypaulis.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1011
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_mm3_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data, <int*>onlypaulis.data)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_mm3_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_sigmas->data), ((double *)__pyx_v_epsilons->data), ((int *)__pyx_v_onlypaulis->data));

  /* "yaff/pes/ext.pyx":1012
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_mm3_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data, <int*>onlypaulis.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_sigmas = sigmas
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1013
 *         pair_pot.pair_data_mm3_init(self._c_pair_pot, <double*>sigmas.data, <double*>epsilons.data, <int*>onlypaulis.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_sigmas = sigmas
 *         self._c_epsilons = epsilons
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1013; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1014
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_sigmas = sigmas             # <<<<<<<<<<<<<<
 *         self._c_epsilons = epsilons
 *         self._c_onlypaulis = onlypaulis
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_sigmas));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sigmas));
  __Pyx_GOTREF(__pyx_v_self->_c_sigmas);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_sigmas));
  __pyx_v_self->_c_sigmas = ((PyArrayObject *)__pyx_v_sigmas);

  /* "yaff/pes/ext.pyx":1015
 *             raise MemoryError()
 *         self._c_sigmas = sigmas
 *         self._c_epsilons = epsilons             # <<<<<<<<<<<<<<
 *         self._c_onlypaulis = onlypaulis
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_epsilons));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_epsilons));
  __Pyx_GOTREF(__pyx_v_self->_c_epsilons);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_epsilons));
  __pyx_v_self->_c_epsilons = ((PyArrayObject *)__pyx_v_epsilons);

  /* "yaff/pes/ext.pyx":1016
 *         self._c_sigmas = sigmas
 *         self._c_epsilons = epsilons
 *         self._c_onlypaulis = onlypaulis             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_onlypaulis));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_onlypaulis));
  __Pyx_GOTREF(__pyx_v_self->_c_onlypaulis);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_onlypaulis));
  __pyx_v_self->_c_onlypaulis = ((PyArrayObject *)__pyx_v_onlypaulis);

  /* "yaff/pes/ext.pyx":999
 *     name = 'mm3'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] epsilons,
 *                   np.ndarray[int, ndim=1] onlypaulis, double rcut,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_onlypaulis.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilons.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_onlypaulis.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sigmas.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1018
 *         self._c_onlypaulis = onlypaulis
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10PairPotMM3_2log[] = "PairPotMM3.log(self)\nWrite some suitable post-initialization screen log";
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10PairPotMM3_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1020
 *     def log(self):
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1021
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1021; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1021; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1021; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1022
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__16, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1023
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_sigmas.shape[0]):
 *                 log('%7i %s %s            %i' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i]), self._c_onlypaulis[i]))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1024
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i %s %s            %i' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i]), self._c_onlypaulis[i]))
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_c_sigmas->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":1025
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 *                 log('%7i %s %s            %i' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i]), self._c_onlypaulis[i]))             # <<<<<<<<<<<<<<
 * 
 *     def _get_sigmas(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_sigmas), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_energy); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_epsilons), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_onlypaulis), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = PyTuple_New(4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Remainder(__pyx_kp_s_7i_s_s_i, __pyx_t_7); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1018
 *         self._c_onlypaulis = onlypaulis
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Write some suitable post-initialization screen log'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1027
 *                 log('%7i %s %s            %i' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i]), self._c_onlypaulis[i]))
 * 
 *     def _get_sigmas(self):             # <<<<<<<<<<<<<<
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_5_get_sigmas(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10PairPotMM3_4_get_sigmas[] = "PairPotMM3._get_sigmas(self)\nThe array with sigma parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_5_get_sigmas(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_sigmas (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10PairPotMM3_4_get_sigmas(((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_4_get_sigmas(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_sigmas", 0);

  /* "yaff/pes/ext.pyx":1029
 *     def _get_sigmas(self):
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()             # <<<<<<<<<<<<<<
 * 
 *     sigmas = property(_get_sigmas)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_sigmas), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1027
 *                 log('%7i %s %s            %i' % (i, log.length(self._c_sigmas[i]), log.energy(self._c_epsilons[i]), self._c_onlypaulis[i]))
 * 
 *     def _get_sigmas(self):             # <<<<<<<<<<<<<<
 *         '''The array with sigma parameters'''
 *         return self._c_sigmas.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3._get_sigmas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1033
 *     sigmas = property(_get_sigmas)
 * 
 *     def _get_epsilons(self):             # <<<<<<<<<<<<<<
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_7_get_epsilons(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10PairPotMM3_6_get_epsilons[] = "PairPotMM3._get_epsilons(self)\nThe array with epsilon parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_7_get_epsilons(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_epsilons (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10PairPotMM3_6_get_epsilons(((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_6_get_epsilons(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_epsilons", 0);

  /* "yaff/pes/ext.pyx":1035
 *     def _get_epsilons(self):
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()             # <<<<<<<<<<<<<<
 * 
 *     epsilons = property(_get_epsilons)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_epsilons), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1033
 *     sigmas = property(_get_sigmas)
 * 
 *     def _get_epsilons(self):             # <<<<<<<<<<<<<<
 *         '''The array with epsilon parameters'''
 *         return self._c_epsilons.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3._get_epsilons", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1039
 *     epsilons = property(_get_epsilons)
 * 
 *     def _get_onlypaulis(self):             # <<<<<<<<<<<<<<
 *         '''The array with the only-Pauli flag'''
 *         return self._c_onlypaulis.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_9_get_onlypaulis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_10PairPotMM3_8_get_onlypaulis[] = "PairPotMM3._get_onlypaulis(self)\nThe array with the only-Pauli flag";
static PyObject *__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_9_get_onlypaulis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_onlypaulis (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_10PairPotMM3_8_get_onlypaulis(((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_10PairPotMM3_8_get_onlypaulis(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_onlypaulis", 0);

  /* "yaff/pes/ext.pyx":1041
 *     def _get_onlypaulis(self):
 *         '''The array with the only-Pauli flag'''
 *         return self._c_onlypaulis.view()             # <<<<<<<<<<<<<<
 * 
 *     onlypaulis = property(_get_onlypaulis)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_onlypaulis), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1039
 *     epsilons = property(_get_epsilons)
 * 
 *     def _get_onlypaulis(self):             # <<<<<<<<<<<<<<
 *         '''The array with the only-Pauli flag'''
 *         return self._c_onlypaulis.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotMM3._get_onlypaulis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1051
 *     name = 'grimme'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] r0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c6, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_r0 = 0;
  PyArrayObject *__pyx_v_c6 = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_r0,&__pyx_n_s_c6,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,0};
    PyObject* values[5] = {0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1053
 *     def __cinit__(self, np.ndarray[double, ndim=1] r0,
 *                   np.ndarray[double, ndim=1] c6, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):             # <<<<<<<<<<<<<<
 *         assert r0.flags['C_CONTIGUOUS']
 *         assert c6.flags['C_CONTIGUOUS']
 */
    values[3] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_r0)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_r0 = ((PyArrayObject *)values[0]);
    __pyx_v_c6 = ((PyArrayObject *)values[1]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[3]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotGrimme.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r0), __pyx_ptype_5numpy_ndarray, 1, "r0", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c6), __pyx_ptype_5numpy_ndarray, 1, "c6", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)__pyx_v_self), __pyx_v_r0, __pyx_v_c6, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw);

  /* "yaff/pes/ext.pyx":1051
 *     name = 'grimme'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] r0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c6, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self, PyArrayObject *__pyx_v_r0, PyArrayObject *__pyx_v_c6, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c6;
  __Pyx_Buffer __pyx_pybuffer_c6;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r0;
  __Pyx_Buffer __pyx_pybuffer_r0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_r0.pybuffer.buf = NULL;
  __pyx_pybuffer_r0.refcount = 0;
  __pyx_pybuffernd_r0.data = NULL;
  __pyx_pybuffernd_r0.rcbuffer = &__pyx_pybuffer_r0;
  __pyx_pybuffer_c6.pybuffer.buf = NULL;
  __pyx_pybuffer_c6.refcount = 0;
  __pyx_pybuffernd_c6.data = NULL;
  __pyx_pybuffernd_c6.rcbuffer = &__pyx_pybuffer_c6;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r0.rcbuffer->pybuffer, (PyObject*)__pyx_v_r0, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_r0.diminfo[0].strides = __pyx_pybuffernd_r0.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r0.diminfo[0].shape = __pyx_pybuffernd_r0.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c6.rcbuffer->pybuffer, (PyObject*)__pyx_v_c6, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c6.diminfo[0].strides = __pyx_pybuffernd_c6.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c6.diminfo[0].shape = __pyx_pybuffernd_c6.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1054
 *                   np.ndarray[double, ndim=1] c6, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert r0.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert c6.flags['C_CONTIGUOUS']
 *         assert r0.shape[0] == c6.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_r0), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1055
 *                   Truncation tr=None, SwitchOn sw=None):
 *         assert r0.flags['C_CONTIGUOUS']
 *         assert c6.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert r0.shape[0] == c6.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c6), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1056
 *         assert r0.flags['C_CONTIGUOUS']
 *         assert c6.flags['C_CONTIGUOUS']
 *         assert r0.shape[0] == c6.shape[0]             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_r0->dimensions[0]) == (__pyx_v_c6->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1057
 *         assert c6.flags['C_CONTIGUOUS']
 *         assert r0.shape[0] == c6.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         pair_pot.pair_data_grimme_init(self._c_pair_pot, <double*>r0.data, <double*>c6.data)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1058
 *         assert r0.shape[0] == c6.shape[0]
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_grimme_init(self._c_pair_pot, <double*>r0.data, <double*>c6.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotGrimme *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1059
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         pair_pot.pair_data_grimme_init(self._c_pair_pot, <double*>r0.data, <double*>c6.data)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_grimme_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_r0->data), ((double *)__pyx_v_c6->data));

  /* "yaff/pes/ext.pyx":1060
 *         self.set_truncation(tr)
 *         pair_pot.pair_data_grimme_init(self._c_pair_pot, <double*>r0.data, <double*>c6.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_r0 = r0
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1061
 *         pair_pot.pair_data_grimme_init(self._c_pair_pot, <double*>r0.data, <double*>c6.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_r0 = r0
 *         self._c_c6 = c6
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1062
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_r0 = r0             # <<<<<<<<<<<<<<
 *         self._c_c6 = c6
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_r0));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_r0));
  __Pyx_GOTREF(__pyx_v_self->_c_r0);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_r0));
  __pyx_v_self->_c_r0 = ((PyArrayObject *)__pyx_v_r0);

  /* "yaff/pes/ext.pyx":1063
 *             raise MemoryError()
 *         self._c_r0 = r0
 *         self._c_c6 = c6             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_c6));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_c6));
  __Pyx_GOTREF(__pyx_v_self->_c_c6);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_c6));
  __pyx_v_self->_c_c6 = ((PyArrayObject *)__pyx_v_c6);

  /* "yaff/pes/ext.pyx":1051
 *     name = 'grimme'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] r0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c6, double rcut,
 *                   Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r0.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotGrimme.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r0.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1065
 *         self._c_c6 = c6
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_2log[] = "PairPotGrimme.log(self)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1066
 * 
 *     def log(self):
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom         r0         c6')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1067
 *     def log(self):
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom         r0         c6')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1068
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom         r0         c6')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_r0.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__17, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1069
 *             log.hline()
 *             log('   Atom         r0         c6')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_r0.shape[0]):
 *                 log('%7i %s %s' % (i, log.length(self._c_r0[i]), log.c6(self._c_c6[i])))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1070
 *             log('   Atom         r0         c6')
 *             log.hline()
 *             for i in xrange(self._c_r0.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i %s %s' % (i, log.length(self._c_r0[i]), log.c6(self._c_c6[i])))
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_c_r0->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":1071
 *             log.hline()
 *             for i in xrange(self._c_r0.shape[0]):
 *                 log('%7i %s %s' % (i, log.length(self._c_r0[i]), log.c6(self._c_c6[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_r0(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_r0), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_c6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_c6), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_s_7i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1065
 *         self._c_c6 = c6
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotGrimme.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1073
 *                 log('%7i %s %s' % (i, log.length(self._c_r0[i]), log.c6(self._c_c6[i])))
 * 
 *     def _get_r0(self):             # <<<<<<<<<<<<<<
 *         return self._c_r0.view()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_5_get_r0(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_4_get_r0[] = "PairPotGrimme._get_r0(self)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_5_get_r0(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_r0 (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_4_get_r0(((struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_4_get_r0(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_r0", 0);

  /* "yaff/pes/ext.pyx":1074
 * 
 *     def _get_r0(self):
 *         return self._c_r0.view()             # <<<<<<<<<<<<<<
 * 
 *     r0 = property(_get_r0)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_r0), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1073
 *                 log('%7i %s %s' % (i, log.length(self._c_r0[i]), log.c6(self._c_c6[i])))
 * 
 *     def _get_r0(self):             # <<<<<<<<<<<<<<
 *         return self._c_r0.view()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotGrimme._get_r0", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1078
 *     r0 = property(_get_r0)
 * 
 *     def _get_c6(self):             # <<<<<<<<<<<<<<
 *         return self._c_c6.view()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_7_get_c6(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_6_get_c6[] = "PairPotGrimme._get_c6(self)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_7_get_c6(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c6 (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_6_get_c6(((struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotGrimme_6_get_c6(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c6", 0);

  /* "yaff/pes/ext.pyx":1079
 * 
 *     def _get_c6(self):
 *         return self._c_c6.view()             # <<<<<<<<<<<<<<
 * 
 *     c6 = property(_get_c6)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_c6), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1078
 *     r0 = property(_get_r0)
 * 
 *     def _get_c6(self):             # <<<<<<<<<<<<<<
 *         return self._c_c6.view()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotGrimme._get_c6", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1153
 *     name = 'exprep'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] amp_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ffatype_ids = 0;
  PyArrayObject *__pyx_v_amp_cross = 0;
  PyArrayObject *__pyx_v_b_cross = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  PyArrayObject *__pyx_v_amps = 0;
  long __pyx_v_amp_mix;
  double __pyx_v_amp_mix_coeff;
  PyArrayObject *__pyx_v_bs = 0;
  long __pyx_v_b_mix;
  double __pyx_v_b_mix_coeff;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ffatype_ids,&__pyx_n_s_amp_cross,&__pyx_n_s_b_cross,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,&__pyx_n_s_amps,&__pyx_n_s_amp_mix,&__pyx_n_s_amp_mix_coeff,&__pyx_n_s_bs,&__pyx_n_s_b_mix,&__pyx_n_s_b_mix_coeff,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1156
 *                   np.ndarray[double, ndim=2] amp_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] amps=None, long amp_mix=-1, double amp_mix_coeff=-1,
 *                   np.ndarray[double, ndim=1] bs=None, long b_mix=-1, double b_mix_coeff=-1):
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);

    /* "yaff/pes/ext.pyx":1157
 *                   np.ndarray[double, ndim=2] b_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] amps=None, long amp_mix=-1, double amp_mix_coeff=-1,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] bs=None, long b_mix=-1, double b_mix_coeff=-1):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 */
    values[6] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":1158
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] amps=None, long amp_mix=-1, double amp_mix_coeff=-1,
 *                   np.ndarray[double, ndim=1] bs=None, long b_mix=-1, double b_mix_coeff=-1):             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert amp_cross.flags['C_CONTIGUOUS']
 */
    values[9] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ffatype_ids)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 12, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 12, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 12, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amps);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_mix);
          if (value) { values[7] = value; kw_args--; }
        }
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_mix_coeff);
          if (value) { values[8] = value; kw_args--; }
        }
        case  9:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bs);
          if (value) { values[9] = value; kw_args--; }
        }
        case 10:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_mix);
          if (value) { values[10] = value; kw_args--; }
        }
        case 11:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_mix_coeff);
          if (value) { values[11] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ffatype_ids = ((PyArrayObject *)values[0]);
    __pyx_v_amp_cross = ((PyArrayObject *)values[1]);
    __pyx_v_b_cross = ((PyArrayObject *)values[2]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
    __pyx_v_amps = ((PyArrayObject *)values[6]);
    if (values[7]) {
      __pyx_v_amp_mix = __Pyx_PyInt_As_long(values[7]); if (unlikely((__pyx_v_amp_mix == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_amp_mix = ((long)-1);
    }
    if (values[8]) {
      __pyx_v_amp_mix_coeff = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_amp_mix_coeff == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1157; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_amp_mix_coeff = ((double)-1.0);
    }
    __pyx_v_bs = ((PyArrayObject *)values[9]);
    if (values[10]) {
      __pyx_v_b_mix = __Pyx_PyInt_As_long(values[10]); if (unlikely((__pyx_v_b_mix == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_b_mix = ((long)-1);
    }
    if (values[11]) {
      __pyx_v_b_mix_coeff = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b_mix_coeff == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1158; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_b_mix_coeff = ((double)-1.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 12, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ffatype_ids), __pyx_ptype_5numpy_ndarray, 0, "ffatype_ids", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_amp_cross), __pyx_ptype_5numpy_ndarray, 0, "amp_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b_cross), __pyx_ptype_5numpy_ndarray, 0, "b_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_amps), __pyx_ptype_5numpy_ndarray, 1, "amps", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_bs), __pyx_ptype_5numpy_ndarray, 1, "bs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self), __pyx_v_ffatype_ids, __pyx_v_amp_cross, __pyx_v_b_cross, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw, __pyx_v_amps, __pyx_v_amp_mix, __pyx_v_amp_mix_coeff, __pyx_v_bs, __pyx_v_b_mix, __pyx_v_b_mix_coeff);

  /* "yaff/pes/ext.pyx":1153
 *     name = 'exprep'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] amp_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_amp_cross, PyArrayObject *__pyx_v_b_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_amps, long __pyx_v_amp_mix, double __pyx_v_amp_mix_coeff, PyArrayObject *__pyx_v_bs, long __pyx_v_b_mix, double __pyx_v_b_mix_coeff) {
  npy_intp __pyx_v_nffatype;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_amp_cross;
  __Pyx_Buffer __pyx_pybuffer_amp_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_amps;
  __Pyx_Buffer __pyx_pybuffer_amps;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_b_cross;
  __Pyx_Buffer __pyx_pybuffer_b_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_bs;
  __Pyx_Buffer __pyx_pybuffer_bs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ffatype_ids;
  __Pyx_Buffer __pyx_pybuffer_ffatype_ids;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_ffatype_ids.pybuffer.buf = NULL;
  __pyx_pybuffer_ffatype_ids.refcount = 0;
  __pyx_pybuffernd_ffatype_ids.data = NULL;
  __pyx_pybuffernd_ffatype_ids.rcbuffer = &__pyx_pybuffer_ffatype_ids;
  __pyx_pybuffer_amp_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_amp_cross.refcount = 0;
  __pyx_pybuffernd_amp_cross.data = NULL;
  __pyx_pybuffernd_amp_cross.rcbuffer = &__pyx_pybuffer_amp_cross;
  __pyx_pybuffer_b_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_b_cross.refcount = 0;
  __pyx_pybuffernd_b_cross.data = NULL;
  __pyx_pybuffernd_b_cross.rcbuffer = &__pyx_pybuffer_b_cross;
  __pyx_pybuffer_amps.pybuffer.buf = NULL;
  __pyx_pybuffer_amps.refcount = 0;
  __pyx_pybuffernd_amps.data = NULL;
  __pyx_pybuffernd_amps.rcbuffer = &__pyx_pybuffer_amps;
  __pyx_pybuffer_bs.pybuffer.buf = NULL;
  __pyx_pybuffer_bs.refcount = 0;
  __pyx_pybuffernd_bs.data = NULL;
  __pyx_pybuffernd_bs.rcbuffer = &__pyx_pybuffer_bs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer, (PyObject*)__pyx_v_ffatype_ids, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ffatype_ids.diminfo[0].strides = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ffatype_ids.diminfo[0].shape = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_amp_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_amp_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_amp_cross.diminfo[0].strides = __pyx_pybuffernd_amp_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_amp_cross.diminfo[0].shape = __pyx_pybuffernd_amp_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_amp_cross.diminfo[1].strides = __pyx_pybuffernd_amp_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_amp_cross.diminfo[1].shape = __pyx_pybuffernd_amp_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_b_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_b_cross.diminfo[0].strides = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_b_cross.diminfo[0].shape = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_b_cross.diminfo[1].strides = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_b_cross.diminfo[1].shape = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_amps.rcbuffer->pybuffer, (PyObject*)__pyx_v_amps, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_amps.diminfo[0].strides = __pyx_pybuffernd_amps.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_amps.diminfo[0].shape = __pyx_pybuffernd_amps.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_bs.rcbuffer->pybuffer, (PyObject*)__pyx_v_bs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_bs.diminfo[0].strides = __pyx_pybuffernd_bs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_bs.diminfo[0].shape = __pyx_pybuffernd_bs.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1159
 *                   np.ndarray[double, ndim=1] amps=None, long amp_mix=-1, double amp_mix_coeff=-1,
 *                   np.ndarray[double, ndim=1] bs=None, long b_mix=-1, double b_mix_coeff=-1):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert amp_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1160
 *                   np.ndarray[double, ndim=1] bs=None, long b_mix=-1, double b_mix_coeff=-1):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert amp_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = amp_cross.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_amp_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1161
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert amp_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         nffatype = amp_cross.shape[0]
 *         assert amp_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_b_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1162
 *         assert amp_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = amp_cross.shape[0]             # <<<<<<<<<<<<<<
 *         assert amp_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype
 */
  __pyx_v_nffatype = (__pyx_v_amp_cross->dimensions[0]);

  /* "yaff/pes/ext.pyx":1163
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = amp_cross.shape[0]
 *         assert amp_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_amp_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1164
 *         nffatype = amp_cross.shape[0]
 *         assert amp_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *         assert b_cross.shape[1] == nffatype
 *         assert ffatype_ids.min() >= 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_b_cross->dimensions[0]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1165
 *         assert amp_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_b_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1166
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype
 *         assert ffatype_ids.min() >= 0             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.max() < nffatype
 *         if amps is not None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_min); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1167
 *         assert b_cross.shape[1] == nffatype
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype             # <<<<<<<<<<<<<<
 *         if amps is not None:
 *             assert amps.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_max); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1168
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 *         if amps is not None:             # <<<<<<<<<<<<<<
 *             assert amps.shape[0] == nffatype
 *             assert amp_mix == 0 or amp_mix == 1
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_amps) != Py_None);
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1169
 *         assert ffatype_ids.max() < nffatype
 *         if amps is not None:
 *             assert amps.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             assert amp_mix == 0 or amp_mix == 1
 *             assert amp_mix_coeff >= 0 and amp_mix_coeff <= 1
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_amps->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1170
 *         if amps is not None:
 *             assert amps.shape[0] == nffatype
 *             assert amp_mix == 0 or amp_mix == 1             # <<<<<<<<<<<<<<
 *             assert amp_mix_coeff >= 0 and amp_mix_coeff <= 1
 *             self._init_amp_cross(nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      switch (__pyx_v_amp_mix) {
        case 0:
        case 1:
        __pyx_t_5 = 1;
        break;
        default:
        __pyx_t_5 = 0;
        break;
      }
      if (unlikely(!__pyx_t_5)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1171
 *             assert amps.shape[0] == nffatype
 *             assert amp_mix == 0 or amp_mix == 1
 *             assert amp_mix_coeff >= 0 and amp_mix_coeff <= 1             # <<<<<<<<<<<<<<
 *             self._init_amp_cross(nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)
 *         assert (amp_cross == amp_cross.T).all()
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_5 = ((__pyx_v_amp_mix_coeff >= 0.0) != 0);
      if (__pyx_t_5) {
        __pyx_t_3 = ((__pyx_v_amp_mix_coeff <= 1.0) != 0);
        __pyx_t_6 = __pyx_t_3;
      } else {
        __pyx_t_6 = __pyx_t_5;
      }
      if (unlikely(!__pyx_t_6)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1172
 *             assert amp_mix == 0 or amp_mix == 1
 *             assert amp_mix_coeff >= 0 and amp_mix_coeff <= 1
 *             self._init_amp_cross(nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)             # <<<<<<<<<<<<<<
 *         assert (amp_cross == amp_cross.T).all()
 *         if bs is not None:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_amp_cross); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_amp_mix); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = PyFloat_FromDouble(__pyx_v_amp_mix_coeff); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = PyTuple_New(5); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)__pyx_v_amp_cross));
    PyTuple_SET_ITEM(__pyx_t_8, 1, ((PyObject *)__pyx_v_amp_cross));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_amp_cross));
    __Pyx_INCREF(((PyObject *)__pyx_v_amps));
    PyTuple_SET_ITEM(__pyx_t_8, 2, ((PyObject *)__pyx_v_amps));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_amps));
    PyTuple_SET_ITEM(__pyx_t_8, 3, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_8, 4, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_2 = 0;
    __pyx_t_1 = 0;
    __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1173
 *             assert amp_mix_coeff >= 0 and amp_mix_coeff <= 1
 *             self._init_amp_cross(nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)
 *         assert (amp_cross == amp_cross.T).all()             # <<<<<<<<<<<<<<
 *         if bs is not None:
 *             assert bs.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_amp_cross), __pyx_n_s_T); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = PyObject_RichCompare(((PyObject *)__pyx_v_amp_cross), __pyx_t_7, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_all); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_6)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1174
 *             self._init_amp_cross(nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)
 *         assert (amp_cross == amp_cross.T).all()
 *         if bs is not None:             # <<<<<<<<<<<<<<
 *             assert bs.shape[0] == nffatype
 *             assert b_mix == 0 or b_mix == 1
 */
  __pyx_t_6 = (((PyObject *)__pyx_v_bs) != Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1175
 *         assert (amp_cross == amp_cross.T).all()
 *         if bs is not None:
 *             assert bs.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             assert b_mix == 0 or b_mix == 1
 *             assert b_mix_coeff >= 0 and b_mix_coeff <= 1
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_bs->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1176
 *         if bs is not None:
 *             assert bs.shape[0] == nffatype
 *             assert b_mix == 0 or b_mix == 1             # <<<<<<<<<<<<<<
 *             assert b_mix_coeff >= 0 and b_mix_coeff <= 1
 *             self._init_b_cross(nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      switch (__pyx_v_b_mix) {
        case 0:
        case 1:
        __pyx_t_5 = 1;
        break;
        default:
        __pyx_t_5 = 0;
        break;
      }
      if (unlikely(!__pyx_t_5)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1177
 *             assert bs.shape[0] == nffatype
 *             assert b_mix == 0 or b_mix == 1
 *             assert b_mix_coeff >= 0 and b_mix_coeff <= 1             # <<<<<<<<<<<<<<
 *             self._init_b_cross(nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)
 *         assert (b_cross == b_cross.T).all()
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_5 = ((__pyx_v_b_mix_coeff >= 0.0) != 0);
      if (__pyx_t_5) {
        __pyx_t_6 = ((__pyx_v_b_mix_coeff <= 1.0) != 0);
        __pyx_t_3 = __pyx_t_6;
      } else {
        __pyx_t_3 = __pyx_t_5;
      }
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1178
 *             assert b_mix == 0 or b_mix == 1
 *             assert b_mix_coeff >= 0 and b_mix_coeff <= 1
 *             self._init_b_cross(nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)             # <<<<<<<<<<<<<<
 *         assert (b_cross == b_cross.T).all()
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_b_cross); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_v_b_mix); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_b_mix_coeff); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __Pyx_INCREF(((PyObject *)__pyx_v_b_cross));
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_b_cross));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_b_cross));
    __Pyx_INCREF(((PyObject *)__pyx_v_bs));
    PyTuple_SET_ITEM(__pyx_t_2, 2, ((PyObject *)__pyx_v_bs));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_bs));
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_v_amps));
    PyTuple_SET_ITEM(__pyx_t_2, 5, ((PyObject *)__pyx_v_amps));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_amps));
    __pyx_t_7 = 0;
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_8, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":1179
 *             assert b_mix_coeff >= 0 and b_mix_coeff <= 1
 *             self._init_b_cross(nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)
 *         assert (b_cross == b_cross.T).all()             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_b_cross), __pyx_n_s_T); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(((PyObject *)__pyx_v_b_cross), __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_all); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1180
 *             self._init_b_cross(nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)
 *         assert (b_cross == b_cross.T).all()
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1181
 *         assert (b_cross == b_cross.T).all()
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_exprep_init(
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1182
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_exprep_init(
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1183
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_exprep_init(             # <<<<<<<<<<<<<<
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 *             <double*> amp_cross.data, <double*> b_cross.data
 */
  pair_data_exprep_init(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_nffatype, ((long *)__pyx_v_ffatype_ids->data), ((double *)__pyx_v_amp_cross->data), ((double *)__pyx_v_b_cross->data));

  /* "yaff/pes/ext.pyx":1187
 *             <double*> amp_cross.data, <double*> b_cross.data
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1188
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_nffatype = nffatype
 *         self._c_amp_cross = amp_cross
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1189
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_nffatype = nffatype             # <<<<<<<<<<<<<<
 *         self._c_amp_cross = amp_cross
 *         self._c_b_cross = b_cross
 */
  __pyx_v_self->_c_nffatype = __pyx_v_nffatype;

  /* "yaff/pes/ext.pyx":1190
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 *         self._c_amp_cross = amp_cross             # <<<<<<<<<<<<<<
 *         self._c_b_cross = b_cross
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_amp_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_amp_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_amp_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_amp_cross));
  __pyx_v_self->_c_amp_cross = ((PyArrayObject *)__pyx_v_amp_cross);

  /* "yaff/pes/ext.pyx":1191
 *         self._c_nffatype = nffatype
 *         self._c_amp_cross = amp_cross
 *         self._c_b_cross = b_cross             # <<<<<<<<<<<<<<
 * 
 *     def _init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_b_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_b_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_b_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_b_cross));
  __pyx_v_self->_c_b_cross = ((PyArrayObject *)__pyx_v_b_cross);

  /* "yaff/pes/ext.pyx":1153
 *     name = 'exprep'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] amp_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_amp_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_amps.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_amp_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_amps.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1193
 *         self._c_b_cross = b_cross
 * 
 *     def _init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_3_init_amp_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_2_init_amp_cross[] = "PairPotExpRep._init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_3_init_amp_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nffatype = 0;
  PyObject *__pyx_v_amp_cross = 0;
  PyObject *__pyx_v_amps = 0;
  PyObject *__pyx_v_amp_mix = 0;
  PyObject *__pyx_v_amp_mix_coeff = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_init_amp_cross (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nffatype,&__pyx_n_s_amp_cross,&__pyx_n_s_amps,&__pyx_n_s_amp_mix,&__pyx_n_s_amp_mix_coeff,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nffatype)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_amp_cross", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amps)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_amp_cross", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_mix)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_amp_cross", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amp_mix_coeff)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_amp_cross", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_init_amp_cross") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_nffatype = values[0];
    __pyx_v_amp_cross = values[1];
    __pyx_v_amps = values[2];
    __pyx_v_amp_mix = values[3];
    __pyx_v_amp_mix_coeff = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_init_amp_cross", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._init_amp_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_2_init_amp_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self), __pyx_v_nffatype, __pyx_v_amp_cross, __pyx_v_amps, __pyx_v_amp_mix, __pyx_v_amp_mix_coeff);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_2_init_amp_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_amp_cross, PyObject *__pyx_v_amps, PyObject *__pyx_v_amp_mix, PyObject *__pyx_v_amp_mix_coeff) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_v_amp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_init_amp_cross", 0);

  /* "yaff/pes/ext.pyx":1194
 * 
 *     def _init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff):
 *         for i0 in xrange(nffatype):             # <<<<<<<<<<<<<<
 *             for i1 in xrange(i0+1):
 *                 if amp_cross[i0, i1] == 0.0:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_nffatype);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_nffatype);
  __Pyx_GIVEREF(__pyx_v_nffatype);
  __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1195
 *     def _init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff):
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                 if amp_cross[i0, i1] == 0.0:
 *                     if amp_mix == 0:
 */
    __pyx_t_2 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_2 = __pyx_t_7(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yaff/pes/ext.pyx":1196
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 *                 if amp_cross[i0, i1] == 0.0:             # <<<<<<<<<<<<<<
 *                     if amp_mix == 0:
 *                         amp_cross[i0, i1] = np.sqrt(amps[i0]*amps[i1])
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_i0);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i0);
      __Pyx_GIVEREF(__pyx_v_i0);
      __Pyx_INCREF(__pyx_v_i1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i1);
      __Pyx_GIVEREF(__pyx_v_i1);
      __pyx_t_8 = PyObject_GetItem(__pyx_v_amp_cross, __pyx_t_2); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {

        /* "yaff/pes/ext.pyx":1197
 *             for i1 in xrange(i0+1):
 *                 if amp_cross[i0, i1] == 0.0:
 *                     if amp_mix == 0:             # <<<<<<<<<<<<<<
 *                         amp_cross[i0, i1] = np.sqrt(amps[i0]*amps[i1])
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 */
        __pyx_t_2 = PyObject_RichCompare(__pyx_v_amp_mix, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_9) {

          /* "yaff/pes/ext.pyx":1198
 *                 if amp_cross[i0, i1] == 0.0:
 *                     if amp_mix == 0:
 *                         amp_cross[i0, i1] = np.sqrt(amps[i0]*amps[i1])             # <<<<<<<<<<<<<<
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 *                         amp = 0.0
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_10 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = PyNumber_Multiply(__pyx_t_2, __pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          __pyx_t_11 = 0;
          __pyx_t_11 = PyObject_Call(__pyx_t_8, __pyx_t_10, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_INCREF(__pyx_v_i0);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_i0);
          __Pyx_GIVEREF(__pyx_v_i0);
          __Pyx_INCREF(__pyx_v_i1);
          PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_i1);
          __Pyx_GIVEREF(__pyx_v_i1);
          if (unlikely(PyObject_SetItem(__pyx_v_amp_cross, __pyx_t_10, __pyx_t_11) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L8;
        }

        /* "yaff/pes/ext.pyx":1199
 *                     if amp_mix == 0:
 *                         amp_cross[i0, i1] = np.sqrt(amps[i0]*amps[i1])
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:             # <<<<<<<<<<<<<<
 *                         amp = 0.0
 *                     else:
 */
        __pyx_t_11 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_10 = PyObject_RichCompare(__pyx_t_11, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (!__pyx_t_9) {
          __pyx_t_10 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = PyObject_RichCompare(__pyx_t_10, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely(__pyx_t_12 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_13 = __pyx_t_12;
        } else {
          __pyx_t_13 = __pyx_t_9;
        }
        if (__pyx_t_13) {

          /* "yaff/pes/ext.pyx":1200
 *                         amp_cross[i0, i1] = np.sqrt(amps[i0]*amps[i1])
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 *                         amp = 0.0             # <<<<<<<<<<<<<<
 *                     else:
 *                         amp = (np.log(amps[i0])+np.log(amps[i1]))/2;
 */
          __Pyx_INCREF(__pyx_float_0_0);
          __Pyx_XDECREF_SET(__pyx_v_amp, __pyx_float_0_0);
          goto __pyx_L8;
        }
        /*else*/ {

          /* "yaff/pes/ext.pyx":1202
 *                         amp = 0.0
 *                     else:
 *                         amp = (np.log(amps[i0])+np.log(amps[i1]))/2;             # <<<<<<<<<<<<<<
 *                         amp *= 1 - amp_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         amp_cross[i0, i1] = np.exp(amp)
 */
          __pyx_t_11 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_log); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          __pyx_t_11 = 0;
          __pyx_t_11 = PyObject_Call(__pyx_t_10, __pyx_t_8, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_log); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_8);
          __pyx_t_8 = 0;
          __pyx_t_8 = PyObject_Call(__pyx_t_10, __pyx_t_2, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyNumber_Add(__pyx_t_11, __pyx_t_8); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_int_2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_amp, __pyx_t_8);
          __pyx_t_8 = 0;

          /* "yaff/pes/ext.pyx":1203
 *                     else:
 *                         amp = (np.log(amps[i0])+np.log(amps[i1]))/2;
 *                         amp *= 1 - amp_mix_coeff*abs(np.log(amps[i0]/amps[i1]));             # <<<<<<<<<<<<<<
 *                         amp_cross[i0, i1] = np.exp(amp)
 *                     amp_cross[i1, i0] = amp_cross[i0, i1]
 */
          __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_11 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_10 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          __pyx_t_10 = 0;
          __pyx_t_10 = PyObject_Call(__pyx_t_2, __pyx_t_11, NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Absolute(__pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyNumber_Multiply(__pyx_v_amp_mix_coeff, __pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Subtract(__pyx_int_1, __pyx_t_10); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyNumber_InPlaceMultiply(__pyx_v_amp, __pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF_SET(__pyx_v_amp, __pyx_t_10);
          __pyx_t_10 = 0;

          /* "yaff/pes/ext.pyx":1204
 *                         amp = (np.log(amps[i0])+np.log(amps[i1]))/2;
 *                         amp *= 1 - amp_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         amp_cross[i0, i1] = np.exp(amp)             # <<<<<<<<<<<<<<
 *                     amp_cross[i1, i0] = amp_cross[i0, i1]
 * 
 */
          __pyx_t_10 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_exp); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_INCREF(__pyx_v_amp);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_amp);
          __Pyx_GIVEREF(__pyx_v_amp);
          __pyx_t_2 = PyObject_Call(__pyx_t_11, __pyx_t_10, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_INCREF(__pyx_v_i0);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_i0);
          __Pyx_GIVEREF(__pyx_v_i0);
          __Pyx_INCREF(__pyx_v_i1);
          PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_i1);
          __Pyx_GIVEREF(__pyx_v_i1);
          if (unlikely(PyObject_SetItem(__pyx_v_amp_cross, __pyx_t_10, __pyx_t_2) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __pyx_L8:;

        /* "yaff/pes/ext.pyx":1205
 *                         amp *= 1 - amp_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         amp_cross[i0, i1] = np.exp(amp)
 *                     amp_cross[i1, i0] = amp_cross[i0, i1]             # <<<<<<<<<<<<<<
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps):
 */
        __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_10 = PyObject_GetItem(__pyx_v_amp_cross, __pyx_t_2); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        if (unlikely(PyObject_SetItem(__pyx_v_amp_cross, __pyx_t_2, __pyx_t_10) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1193
 *         self._c_b_cross = b_cross
 * 
 *     def _init_amp_cross(self, nffatype, amp_cross, amps, amp_mix, amp_mix_coeff):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._init_amp_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XDECREF(__pyx_v_amp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1207
 *                     amp_cross[i1, i0] = amp_cross[i0, i1]
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_5_init_b_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_4_init_b_cross[] = "PairPotExpRep._init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_5_init_b_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nffatype = 0;
  PyObject *__pyx_v_b_cross = 0;
  PyObject *__pyx_v_bs = 0;
  PyObject *__pyx_v_b_mix = 0;
  PyObject *__pyx_v_b_mix_coeff = 0;
  PyObject *__pyx_v_amps = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_init_b_cross (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nffatype,&__pyx_n_s_b_cross,&__pyx_n_s_bs,&__pyx_n_s_b_mix,&__pyx_n_s_b_mix_coeff,&__pyx_n_s_amps,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nffatype)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_mix)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_mix_coeff)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_amps)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_init_b_cross") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_nffatype = values[0];
    __pyx_v_b_cross = values[1];
    __pyx_v_bs = values[2];
    __pyx_v_b_mix = values[3];
    __pyx_v_b_mix_coeff = values[4];
    __pyx_v_amps = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1207; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._init_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_4_init_b_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self), __pyx_v_nffatype, __pyx_v_b_cross, __pyx_v_bs, __pyx_v_b_mix, __pyx_v_b_mix_coeff, __pyx_v_amps);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_4_init_b_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_b_cross, PyObject *__pyx_v_bs, PyObject *__pyx_v_b_mix, PyObject *__pyx_v_b_mix_coeff, PyObject *__pyx_v_amps) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_init_b_cross", 0);

  /* "yaff/pes/ext.pyx":1208
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps):
 *         for i0 in xrange(nffatype):             # <<<<<<<<<<<<<<
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_nffatype);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_nffatype);
  __Pyx_GIVEREF(__pyx_v_nffatype);
  __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1209
 *     def _init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps):
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                 if b_cross[i0, i1] == 0.0:
 *                     if b_mix == 0:
 */
    __pyx_t_2 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_2 = __pyx_t_7(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yaff/pes/ext.pyx":1210
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0:             # <<<<<<<<<<<<<<
 *                     if b_mix == 0:
 *                         b_cross[i0, i1] = (bs[i0] + bs[i1])/2
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_i0);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i0);
      __Pyx_GIVEREF(__pyx_v_i0);
      __Pyx_INCREF(__pyx_v_i1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i1);
      __Pyx_GIVEREF(__pyx_v_i1);
      __pyx_t_8 = PyObject_GetItem(__pyx_v_b_cross, __pyx_t_2); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {

        /* "yaff/pes/ext.pyx":1211
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0:
 *                     if b_mix == 0:             # <<<<<<<<<<<<<<
 *                         b_cross[i0, i1] = (bs[i0] + bs[i1])/2
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 */
        __pyx_t_2 = PyObject_RichCompare(__pyx_v_b_mix, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_9) {

          /* "yaff/pes/ext.pyx":1212
 *                 if b_cross[i0, i1] == 0.0:
 *                     if b_mix == 0:
 *                         b_cross[i0, i1] = (bs[i0] + bs[i1])/2             # <<<<<<<<<<<<<<
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 *                         b = 0.0
 */
          __pyx_t_2 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_8 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_10 = PyNumber_Add(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_10, __pyx_int_2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_INCREF(__pyx_v_i0);
          PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_i0);
          __Pyx_GIVEREF(__pyx_v_i0);
          __Pyx_INCREF(__pyx_v_i1);
          PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_i1);
          __Pyx_GIVEREF(__pyx_v_i1);
          if (unlikely(PyObject_SetItem(__pyx_v_b_cross, __pyx_t_10, __pyx_t_8) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          goto __pyx_L8;
        }

        /* "yaff/pes/ext.pyx":1213
 *                     if b_mix == 0:
 *                         b_cross[i0, i1] = (bs[i0] + bs[i1])/2
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:             # <<<<<<<<<<<<<<
 *                         b = 0.0
 *                     else:
 */
        __pyx_t_8 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_10 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (!__pyx_t_9) {
          __pyx_t_10 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_8 = PyObject_RichCompare(__pyx_t_10, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_11 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_12 = __pyx_t_11;
        } else {
          __pyx_t_12 = __pyx_t_9;
        }
        if (__pyx_t_12) {

          /* "yaff/pes/ext.pyx":1214
 *                         b_cross[i0, i1] = (bs[i0] + bs[i1])/2
 *                     elif amps[i0] == 0.0 or amps[i1] == 0.0:
 *                         b = 0.0             # <<<<<<<<<<<<<<
 *                     else:
 *                         b = (bs[i0] + bs[i1])/2;
 */
          __Pyx_INCREF(__pyx_float_0_0);
          __Pyx_XDECREF_SET(__pyx_v_b, __pyx_float_0_0);
          goto __pyx_L8;
        }
        /*else*/ {

          /* "yaff/pes/ext.pyx":1216
 *                         b = 0.0
 *                     else:
 *                         b = (bs[i0] + bs[i1])/2;             # <<<<<<<<<<<<<<
 *                         b *= 1 - b_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         b_cross[i0, i1] = b
 */
          __pyx_t_8 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i0); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1216; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_10 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i1); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1216; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_2 = PyNumber_Add(__pyx_t_8, __pyx_t_10); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_int_2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_10);
          __pyx_t_10 = 0;

          /* "yaff/pes/ext.pyx":1217
 *                     else:
 *                         b = (bs[i0] + bs[i1])/2;
 *                         b *= 1 - b_mix_coeff*abs(np.log(amps[i0]/amps[i1]));             # <<<<<<<<<<<<<<
 *                         b_cross[i0, i1] = b
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 */
          __pyx_t_10 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i0); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_8 = PyObject_GetItem(__pyx_v_amps, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_13 = __Pyx_PyNumber_Divide(__pyx_t_10, __pyx_t_8); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_13);
          __Pyx_GIVEREF(__pyx_t_13);
          __pyx_t_13 = 0;
          __pyx_t_13 = PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Absolute(__pyx_t_13); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = PyNumber_Multiply(__pyx_v_b_mix_coeff, __pyx_t_8); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_8 = PyNumber_Subtract(__pyx_int_1, __pyx_t_13); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = PyNumber_InPlaceMultiply(__pyx_v_b, __pyx_t_8); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF_SET(__pyx_v_b, __pyx_t_13);
          __pyx_t_13 = 0;

          /* "yaff/pes/ext.pyx":1218
 *                         b = (bs[i0] + bs[i1])/2;
 *                         b *= 1 - b_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         b_cross[i0, i1] = b             # <<<<<<<<<<<<<<
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 */
          __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_INCREF(__pyx_v_i0);
          PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_v_i0);
          __Pyx_GIVEREF(__pyx_v_i0);
          __Pyx_INCREF(__pyx_v_i1);
          PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i1);
          __Pyx_GIVEREF(__pyx_v_i1);
          if (unlikely(PyObject_SetItem(__pyx_v_b_cross, __pyx_t_13, __pyx_v_b) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        }
        __pyx_L8:;

        /* "yaff/pes/ext.pyx":1219
 *                         b *= 1 - b_mix_coeff*abs(np.log(amps[i0]/amps[i1]));
 *                         b_cross[i0, i1] = b
 *                     b_cross[i1, i0] = b_cross[i0, i1]             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
        __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_8 = PyObject_GetItem(__pyx_v_b_cross, __pyx_t_13); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        if (unlikely(PyObject_SetItem(__pyx_v_b_cross, __pyx_t_13, __pyx_t_8) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1207
 *                     amp_cross[i1, i0] = amp_cross[i0, i1]
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs, b_mix, b_mix_coeff, amps):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._init_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1221
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_7log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_6log[] = "PairPotExpRep.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_7log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_6log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_6log(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1223
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1          A          B')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1224
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('ffatype_id0 ffatype_id1          A          B')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1225
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1          A          B')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__18, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1226
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1          A          B')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1227
 *             log('ffatype_id0 ffatype_id1          A          B')
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):             # <<<<<<<<<<<<<<
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_amp_cross[i0, i1]), log.invlength(self._c_b_cross[i0,i1])))
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->_c_nffatype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_5 && PyList_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_5 && PyTuple_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "yaff/pes/ext.pyx":1228
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_amp_cross[i0, i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 */
      __pyx_t_1 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_6 = __pyx_t_1; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_1 = __pyx_t_8(__pyx_t_6);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "yaff/pes/ext.pyx":1229
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_amp_cross[i0, i1]), log.invlength(self._c_b_cross[i0,i1])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_amp_cross(self):
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_energy); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_11 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_amp_cross), __pyx_t_9); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_invlength); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_b_cross), __pyx_t_9); if (unlikely(__pyx_t_12 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_12 = PyNumber_Remainder(__pyx_kp_s_11i_11i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1221
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1231
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_amp_cross[i0, i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 *     def _get_amp_cross(self):             # <<<<<<<<<<<<<<
 *         '''The amplitude cross parameters'''
 *         return self._c_amp_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_9_get_amp_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_8_get_amp_cross[] = "PairPotExpRep._get_amp_cross(self)\nThe amplitude cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_9_get_amp_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_amp_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_8_get_amp_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_8_get_amp_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_amp_cross", 0);

  /* "yaff/pes/ext.pyx":1233
 *     def _get_amp_cross(self):
 *         '''The amplitude cross parameters'''
 *         return self._c_amp_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     amp_cross = property(_get_amp_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_amp_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1231
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_amp_cross[i0, i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 *     def _get_amp_cross(self):             # <<<<<<<<<<<<<<
 *         '''The amplitude cross parameters'''
 *         return self._c_amp_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._get_amp_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1237
 *     amp_cross = property(_get_amp_cross)
 * 
 *     def _get_b_cross(self):             # <<<<<<<<<<<<<<
 *         '''The decay cross parameters'''
 *         return self._c_b_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_11_get_b_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_10_get_b_cross[] = "PairPotExpRep._get_b_cross(self)\nThe decay cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_11_get_b_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_b_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_10_get_b_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_13PairPotExpRep_10_get_b_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_b_cross", 0);

  /* "yaff/pes/ext.pyx":1239
 *     def _get_b_cross(self):
 *         '''The decay cross parameters'''
 *         return self._c_b_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     b_cross = property(_get_b_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_b_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1237
 *     amp_cross = property(_get_amp_cross)
 * 
 *     def _get_b_cross(self):             # <<<<<<<<<<<<<<
 *         '''The decay cross parameters'''
 *         return self._c_b_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotExpRep._get_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1285
 *     name = 'ljcross'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] eps_cross not None,
 *                   np.ndarray[double, ndim=2] sig_cross not None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ffatype_ids = 0;
  PyArrayObject *__pyx_v_eps_cross = 0;
  PyArrayObject *__pyx_v_sig_cross = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ffatype_ids,&__pyx_n_s_eps_cross,&__pyx_n_s_sig_cross,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1288
 *                   np.ndarray[double, ndim=2] eps_cross not None,
 *                   np.ndarray[double, ndim=2] sig_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert eps_cross.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ffatype_ids)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sig_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ffatype_ids = ((PyArrayObject *)values[0]);
    __pyx_v_eps_cross = ((PyArrayObject *)values[1]);
    __pyx_v_sig_cross = ((PyArrayObject *)values[2]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJCross.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ffatype_ids), __pyx_ptype_5numpy_ndarray, 0, "ffatype_ids", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_eps_cross), __pyx_ptype_5numpy_ndarray, 0, "eps_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sig_cross), __pyx_ptype_5numpy_ndarray, 0, "sig_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self), __pyx_v_ffatype_ids, __pyx_v_eps_cross, __pyx_v_sig_cross, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw);

  /* "yaff/pes/ext.pyx":1285
 *     name = 'ljcross'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] eps_cross not None,
 *                   np.ndarray[double, ndim=2] sig_cross not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_eps_cross, PyArrayObject *__pyx_v_sig_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  npy_intp __pyx_v_nffatype;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_eps_cross;
  __Pyx_Buffer __pyx_pybuffer_eps_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ffatype_ids;
  __Pyx_Buffer __pyx_pybuffer_ffatype_ids;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_sig_cross;
  __Pyx_Buffer __pyx_pybuffer_sig_cross;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_ffatype_ids.pybuffer.buf = NULL;
  __pyx_pybuffer_ffatype_ids.refcount = 0;
  __pyx_pybuffernd_ffatype_ids.data = NULL;
  __pyx_pybuffernd_ffatype_ids.rcbuffer = &__pyx_pybuffer_ffatype_ids;
  __pyx_pybuffer_eps_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_eps_cross.refcount = 0;
  __pyx_pybuffernd_eps_cross.data = NULL;
  __pyx_pybuffernd_eps_cross.rcbuffer = &__pyx_pybuffer_eps_cross;
  __pyx_pybuffer_sig_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_sig_cross.refcount = 0;
  __pyx_pybuffernd_sig_cross.data = NULL;
  __pyx_pybuffernd_sig_cross.rcbuffer = &__pyx_pybuffer_sig_cross;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer, (PyObject*)__pyx_v_ffatype_ids, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ffatype_ids.diminfo[0].strides = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ffatype_ids.diminfo[0].shape = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_eps_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_eps_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_eps_cross.diminfo[0].strides = __pyx_pybuffernd_eps_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_eps_cross.diminfo[0].shape = __pyx_pybuffernd_eps_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_eps_cross.diminfo[1].strides = __pyx_pybuffernd_eps_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_eps_cross.diminfo[1].shape = __pyx_pybuffernd_eps_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_sig_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_sig_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_sig_cross.diminfo[0].strides = __pyx_pybuffernd_sig_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_sig_cross.diminfo[0].shape = __pyx_pybuffernd_sig_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_sig_cross.diminfo[1].strides = __pyx_pybuffernd_sig_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_sig_cross.diminfo[1].shape = __pyx_pybuffernd_sig_cross.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":1289
 *                   np.ndarray[double, ndim=2] sig_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert eps_cross.flags['C_CONTIGUOUS']
 *         assert sig_cross.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1290
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert eps_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert sig_cross.flags['C_CONTIGUOUS']
 *         nffatype = eps_cross.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_eps_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1290; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1291
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert eps_cross.flags['C_CONTIGUOUS']
 *         assert sig_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         nffatype = eps_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_sig_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1291; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1292
 *         assert eps_cross.flags['C_CONTIGUOUS']
 *         assert sig_cross.flags['C_CONTIGUOUS']
 *         nffatype = eps_cross.shape[0]             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 */
  __pyx_v_nffatype = (__pyx_v_eps_cross->dimensions[0]);

  /* "yaff/pes/ext.pyx":1293
 *         assert sig_cross.flags['C_CONTIGUOUS']
 *         nffatype = eps_cross.shape[0]
 *         assert ffatype_ids.min() >= 0             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.max() < nffatype
 *         assert eps_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_min); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1294
 *         nffatype = eps_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype             # <<<<<<<<<<<<<<
 *         assert eps_cross.shape[1] == nffatype
 *         assert sig_cross.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_max); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1295
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 *         assert eps_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert sig_cross.shape[0] == nffatype
 *         assert sig_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_eps_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1296
 *         assert ffatype_ids.max() < nffatype
 *         assert eps_cross.shape[1] == nffatype
 *         assert sig_cross.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *         assert sig_cross.shape[1] == nffatype
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_sig_cross->dimensions[0]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1297
 *         assert eps_cross.shape[1] == nffatype
 *         assert sig_cross.shape[0] == nffatype
 *         assert sig_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_sig_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1298
 *         assert sig_cross.shape[0] == nffatype
 *         assert sig_cross.shape[1] == nffatype
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1299
 *         assert sig_cross.shape[1] == nffatype
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_ljcross_init(
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":1300
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_ljcross_init(
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":1301
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_ljcross_init(             # <<<<<<<<<<<<<<
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 *             <double*> eps_cross.data, <double*> sig_cross.data,
 */
  pair_data_ljcross_init(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_nffatype, ((long *)__pyx_v_ffatype_ids->data), ((double *)__pyx_v_eps_cross->data), ((double *)__pyx_v_sig_cross->data));

  /* "yaff/pes/ext.pyx":1305
 *             <double*> eps_cross.data, <double*> sig_cross.data,
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1306
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_nffatype = nffatype
 *         self._c_eps_cross = eps_cross
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1307
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_nffatype = nffatype             # <<<<<<<<<<<<<<
 *         self._c_eps_cross = eps_cross
 *         self._c_sig_cross = sig_cross
 */
  __pyx_v_self->_c_nffatype = __pyx_v_nffatype;

  /* "yaff/pes/ext.pyx":1308
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 *         self._c_eps_cross = eps_cross             # <<<<<<<<<<<<<<
 *         self._c_sig_cross = sig_cross
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_eps_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_eps_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_eps_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_eps_cross));
  __pyx_v_self->_c_eps_cross = ((PyArrayObject *)__pyx_v_eps_cross);

  /* "yaff/pes/ext.pyx":1309
 *         self._c_nffatype = nffatype
 *         self._c_eps_cross = eps_cross
 *         self._c_sig_cross = sig_cross             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_sig_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_sig_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_sig_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_sig_cross));
  __pyx_v_self->_c_sig_cross = ((PyArrayObject *)__pyx_v_sig_cross);

  /* "yaff/pes/ext.pyx":1285
 *     name = 'ljcross'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] eps_cross not None,
 *                   np.ndarray[double, ndim=2] sig_cross not None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_eps_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sig_cross.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJCross.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_eps_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_sig_cross.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1311
 *         self._c_sig_cross = sig_cross
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_2log[] = "PairPotLJCross.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1313
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         eps          sig')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1314
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('ffatype_id0 ffatype_id1         eps          sig')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1315
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         eps          sig')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__19, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1316
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         eps          sig')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1317
 *             log('ffatype_id0 ffatype_id1         eps          sig')
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):             # <<<<<<<<<<<<<<
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_eps_cross[i0,i1]), log.length(self._c_sig_cross[i0,i1])))
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->_c_nffatype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_5 && PyList_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_5 && PyTuple_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "yaff/pes/ext.pyx":1318
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_eps_cross[i0,i1]), log.length(self._c_sig_cross[i0,i1])))
 * 
 */
      __pyx_t_1 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_6 = __pyx_t_1; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_1 = __pyx_t_8(__pyx_t_6);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "yaff/pes/ext.pyx":1319
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_eps_cross[i0,i1]), log.length(self._c_sig_cross[i0,i1])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_eps_cross(self):
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_energy); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_11 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_eps_cross), __pyx_t_9); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_length); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_sig_cross), __pyx_t_9); if (unlikely(__pyx_t_12 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_12 = PyNumber_Remainder(__pyx_kp_s_11i_11i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1311
 *         self._c_sig_cross = sig_cross
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJCross.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1321
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_eps_cross[i0,i1]), log.length(self._c_sig_cross[i0,i1])))
 * 
 *     def _get_eps_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_eps_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_5_get_eps_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_4_get_eps_cross[] = "PairPotLJCross._get_eps_cross(self)\nThe C6 cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_5_get_eps_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_eps_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_4_get_eps_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_4_get_eps_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_eps_cross", 0);

  /* "yaff/pes/ext.pyx":1323
 *     def _get_eps_cross(self):
 *         '''The C6 cross parameters'''
 *         return self._c_eps_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     eps_cross = property(_get_eps_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_eps_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1321
 *                     log('%11i %11i %s %s' % (i0, i1, log.energy(self._c_eps_cross[i0,i1]), log.length(self._c_sig_cross[i0,i1])))
 * 
 *     def _get_eps_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_eps_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJCross._get_eps_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1327
 *     eps_cross = property(_get_eps_cross)
 * 
 *     def _get_sig_cross(self):             # <<<<<<<<<<<<<<
 *         '''The damping cross parameters'''
 *         return self._c_sig_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_7_get_sig_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_6_get_sig_cross[] = "PairPotLJCross._get_sig_cross(self)\nThe damping cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_7_get_sig_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_sig_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_6_get_sig_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_14PairPotLJCross_6_get_sig_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_sig_cross", 0);

  /* "yaff/pes/ext.pyx":1329
 *     def _get_sig_cross(self):
 *         '''The damping cross parameters'''
 *         return self._c_sig_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     sig_cross = property(_get_sig_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_sig_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1327
 *     eps_cross = property(_get_eps_cross)
 * 
 *     def _get_sig_cross(self):             # <<<<<<<<<<<<<<
 *         '''The damping cross parameters'''
 *         return self._c_sig_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotLJCross._get_sig_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1396
 *     name = 'dampdisp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ffatype_ids = 0;
  PyArrayObject *__pyx_v_c6_cross = 0;
  PyArrayObject *__pyx_v_b_cross = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  PyArrayObject *__pyx_v_c6s = 0;
  PyArrayObject *__pyx_v_bs = 0;
  PyArrayObject *__pyx_v_vols = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ffatype_ids,&__pyx_n_s_c6_cross,&__pyx_n_s_b_cross,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,&__pyx_n_s_c6s,&__pyx_n_s_bs,&__pyx_n_s_vols,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1399
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] bs=None,
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);

    /* "yaff/pes/ext.pyx":1400
 *                   np.ndarray[double, ndim=2] b_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] c6s=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] bs=None,
 *                   np.ndarray[double, ndim=1] vols=None):
 */
    values[6] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":1401
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] bs=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] vols=None):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 */
    values[7] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":1402
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] bs=None,
 *                   np.ndarray[double, ndim=1] vols=None):             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert c6_cross.flags['C_CONTIGUOUS']
 */
    values[8] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ffatype_ids)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6s);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bs);
          if (value) { values[7] = value; kw_args--; }
        }
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vols);
          if (value) { values[8] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ffatype_ids = ((PyArrayObject *)values[0]);
    __pyx_v_c6_cross = ((PyArrayObject *)values[1]);
    __pyx_v_b_cross = ((PyArrayObject *)values[2]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1399; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
    __pyx_v_c6s = ((PyArrayObject *)values[6]);
    __pyx_v_bs = ((PyArrayObject *)values[7]);
    __pyx_v_vols = ((PyArrayObject *)values[8]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ffatype_ids), __pyx_ptype_5numpy_ndarray, 0, "ffatype_ids", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c6_cross), __pyx_ptype_5numpy_ndarray, 0, "c6_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_b_cross), __pyx_ptype_5numpy_ndarray, 0, "b_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c6s), __pyx_ptype_5numpy_ndarray, 1, "c6s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_bs), __pyx_ptype_5numpy_ndarray, 1, "bs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vols), __pyx_ptype_5numpy_ndarray, 1, "vols", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self), __pyx_v_ffatype_ids, __pyx_v_c6_cross, __pyx_v_b_cross, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw, __pyx_v_c6s, __pyx_v_bs, __pyx_v_vols);

  /* "yaff/pes/ext.pyx":1396
 *     name = 'dampdisp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_c6_cross, PyArrayObject *__pyx_v_b_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_c6s, PyArrayObject *__pyx_v_bs, PyArrayObject *__pyx_v_vols) {
  npy_intp __pyx_v_nffatype;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_b_cross;
  __Pyx_Buffer __pyx_pybuffer_b_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_bs;
  __Pyx_Buffer __pyx_pybuffer_bs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c6_cross;
  __Pyx_Buffer __pyx_pybuffer_c6_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c6s;
  __Pyx_Buffer __pyx_pybuffer_c6s;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ffatype_ids;
  __Pyx_Buffer __pyx_pybuffer_ffatype_ids;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vols;
  __Pyx_Buffer __pyx_pybuffer_vols;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_ffatype_ids.pybuffer.buf = NULL;
  __pyx_pybuffer_ffatype_ids.refcount = 0;
  __pyx_pybuffernd_ffatype_ids.data = NULL;
  __pyx_pybuffernd_ffatype_ids.rcbuffer = &__pyx_pybuffer_ffatype_ids;
  __pyx_pybuffer_c6_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_c6_cross.refcount = 0;
  __pyx_pybuffernd_c6_cross.data = NULL;
  __pyx_pybuffernd_c6_cross.rcbuffer = &__pyx_pybuffer_c6_cross;
  __pyx_pybuffer_b_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_b_cross.refcount = 0;
  __pyx_pybuffernd_b_cross.data = NULL;
  __pyx_pybuffernd_b_cross.rcbuffer = &__pyx_pybuffer_b_cross;
  __pyx_pybuffer_c6s.pybuffer.buf = NULL;
  __pyx_pybuffer_c6s.refcount = 0;
  __pyx_pybuffernd_c6s.data = NULL;
  __pyx_pybuffernd_c6s.rcbuffer = &__pyx_pybuffer_c6s;
  __pyx_pybuffer_bs.pybuffer.buf = NULL;
  __pyx_pybuffer_bs.refcount = 0;
  __pyx_pybuffernd_bs.data = NULL;
  __pyx_pybuffernd_bs.rcbuffer = &__pyx_pybuffer_bs;
  __pyx_pybuffer_vols.pybuffer.buf = NULL;
  __pyx_pybuffer_vols.refcount = 0;
  __pyx_pybuffernd_vols.data = NULL;
  __pyx_pybuffernd_vols.rcbuffer = &__pyx_pybuffer_vols;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer, (PyObject*)__pyx_v_ffatype_ids, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ffatype_ids.diminfo[0].strides = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ffatype_ids.diminfo[0].shape = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_c6_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c6_cross.diminfo[0].strides = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c6_cross.diminfo[0].shape = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_c6_cross.diminfo[1].strides = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_c6_cross.diminfo[1].shape = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_b_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_b_cross.diminfo[0].strides = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_b_cross.diminfo[0].shape = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_b_cross.diminfo[1].strides = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_b_cross.diminfo[1].shape = __pyx_pybuffernd_b_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer, (PyObject*)__pyx_v_c6s, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c6s.diminfo[0].strides = __pyx_pybuffernd_c6s.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c6s.diminfo[0].shape = __pyx_pybuffernd_c6s.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_bs.rcbuffer->pybuffer, (PyObject*)__pyx_v_bs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_bs.diminfo[0].strides = __pyx_pybuffernd_bs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_bs.diminfo[0].shape = __pyx_pybuffernd_bs.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vols.rcbuffer->pybuffer, (PyObject*)__pyx_v_vols, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vols.diminfo[0].strides = __pyx_pybuffernd_vols.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vols.diminfo[0].shape = __pyx_pybuffernd_vols.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1403
 *                   np.ndarray[double, ndim=1] bs=None,
 *                   np.ndarray[double, ndim=1] vols=None):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1404
 *                   np.ndarray[double, ndim=1] vols=None):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert c6_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c6_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1404; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1405
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_b_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1405; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1406
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 */
  __pyx_v_nffatype = (__pyx_v_c6_cross->dimensions[0]);

  /* "yaff/pes/ext.pyx":1407
 *         assert b_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_min); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1408
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype             # <<<<<<<<<<<<<<
 *         assert c6_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_max); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1409
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_c6_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1410
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *         assert b_cross.shape[1] == nffatype
 *         if c6s is not None or vols is not None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_b_cross->dimensions[0]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1411
 *         assert c6_cross.shape[1] == nffatype
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         if c6s is not None or vols is not None:
 *             assert c6s is not None
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_b_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1412
 *         assert b_cross.shape[0] == nffatype
 *         assert b_cross.shape[1] == nffatype
 *         if c6s is not None or vols is not None:             # <<<<<<<<<<<<<<
 *             assert c6s is not None
 *             assert vols is not None
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_c6s) != Py_None);
  if (!(__pyx_t_3 != 0)) {
    __pyx_t_5 = (((PyObject *)__pyx_v_vols) != Py_None);
    __pyx_t_6 = (__pyx_t_5 != 0);
  } else {
    __pyx_t_6 = (__pyx_t_3 != 0);
  }
  if (__pyx_t_6) {

    /* "yaff/pes/ext.pyx":1413
 *         assert b_cross.shape[1] == nffatype
 *         if c6s is not None or vols is not None:
 *             assert c6s is not None             # <<<<<<<<<<<<<<
 *             assert vols is not None
 *             assert c6s.flags['C_CONTIGUOUS']
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_6 = (((PyObject *)__pyx_v_c6s) != Py_None);
      if (unlikely(!(__pyx_t_6 != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1414
 *         if c6s is not None or vols is not None:
 *             assert c6s is not None
 *             assert vols is not None             # <<<<<<<<<<<<<<
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert vols.flags['C_CONTIGUOUS']
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_6 = (((PyObject *)__pyx_v_vols) != Py_None);
      if (unlikely(!(__pyx_t_6 != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1415
 *             assert c6s is not None
 *             assert vols is not None
 *             assert c6s.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert vols.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c6s), __pyx_n_s_flags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_4, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_6)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1416
 *             assert vols is not None
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert vols.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert c6s.shape[0] == nffatype
 *             assert bs.shape[0] == nffatype
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vols), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1416; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_6)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1417
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert vols.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             assert bs.shape[0] == nffatype
 *             self._init_c6_cross(nffatype, c6_cross, c6s, vols)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_c6s->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1418
 *             assert vols.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype
 *             assert bs.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             self._init_c6_cross(nffatype, c6_cross, c6s, vols)
 *         if bs is not None:
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_bs->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1419
 *             assert c6s.shape[0] == nffatype
 *             assert bs.shape[0] == nffatype
 *             self._init_c6_cross(nffatype, c6_cross, c6s, vols)             # <<<<<<<<<<<<<<
 *         if bs is not None:
 *             assert bs.flags['C_CONTIGUOUS']
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_c6_cross); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)__pyx_v_c6_cross));
    PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_c6_cross));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_c6_cross));
    __Pyx_INCREF(((PyObject *)__pyx_v_c6s));
    PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)__pyx_v_c6s));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_c6s));
    __Pyx_INCREF(((PyObject *)__pyx_v_vols));
    PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)__pyx_v_vols));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_vols));
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1420
 *             assert bs.shape[0] == nffatype
 *             self._init_c6_cross(nffatype, c6_cross, c6s, vols)
 *         if bs is not None:             # <<<<<<<<<<<<<<
 *             assert bs.flags['C_CONTIGUOUS']
 *             self._init_b_cross(nffatype, b_cross, bs)
 */
  __pyx_t_6 = (((PyObject *)__pyx_v_bs) != Py_None);
  __pyx_t_3 = (__pyx_t_6 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1421
 *             self._init_c6_cross(nffatype, c6_cross, c6s, vols)
 *         if bs is not None:
 *             assert bs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             self._init_b_cross(nffatype, b_cross, bs)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_bs), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1422
 *         if bs is not None:
 *             assert bs.flags['C_CONTIGUOUS']
 *             self._init_b_cross(nffatype, b_cross, bs)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_init_b_cross); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)__pyx_v_b_cross));
    PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_v_b_cross));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_b_cross));
    __Pyx_INCREF(((PyObject *)__pyx_v_bs));
    PyTuple_SET_ITEM(__pyx_t_4, 2, ((PyObject *)__pyx_v_bs));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_bs));
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":1423
 *             assert bs.flags['C_CONTIGUOUS']
 *             self._init_b_cross(nffatype, b_cross, bs)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1424
 *             self._init_b_cross(nffatype, b_cross, bs)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_dampdisp_init(
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1425
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_dampdisp_init(
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1426
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_dampdisp_init(             # <<<<<<<<<<<<<<
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 *             <double*> c6_cross.data, <double*> b_cross.data,
 */
  pair_data_dampdisp_init(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_nffatype, ((long *)__pyx_v_ffatype_ids->data), ((double *)__pyx_v_c6_cross->data), ((double *)__pyx_v_b_cross->data));

  /* "yaff/pes/ext.pyx":1430
 *             <double*> c6_cross.data, <double*> b_cross.data,
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1431
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1432
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_nffatype = nffatype             # <<<<<<<<<<<<<<
 *         self._c_c6_cross = c6_cross
 *         self._c_b_cross = b_cross
 */
  __pyx_v_self->_c_nffatype = __pyx_v_nffatype;

  /* "yaff/pes/ext.pyx":1433
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross             # <<<<<<<<<<<<<<
 *         self._c_b_cross = b_cross
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_c6_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_c6_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_c6_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_c6_cross));
  __pyx_v_self->_c_c6_cross = ((PyArrayObject *)__pyx_v_c6_cross);

  /* "yaff/pes/ext.pyx":1434
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross
 *         self._c_b_cross = b_cross             # <<<<<<<<<<<<<<
 * 
 *     def _init_c6_cross(self, nffatype, c6_cross, c6s, vols):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_b_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_b_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_b_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_b_cross));
  __pyx_v_self->_c_b_cross = ((PyArrayObject *)__pyx_v_b_cross);

  /* "yaff/pes/ext.pyx":1396
 *     name = 'dampdisp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] b_cross not None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vols.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_b_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_bs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vols.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1436
 *         self._c_b_cross = b_cross
 * 
 *     def _init_c6_cross(self, nffatype, c6_cross, c6s, vols):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_3_init_c6_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_2_init_c6_cross[] = "PairPotDampDisp._init_c6_cross(self, nffatype, c6_cross, c6s, vols)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_3_init_c6_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nffatype = 0;
  PyObject *__pyx_v_c6_cross = 0;
  PyObject *__pyx_v_c6s = 0;
  PyObject *__pyx_v_vols = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_init_c6_cross (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nffatype,&__pyx_n_s_c6_cross,&__pyx_n_s_c6s,&__pyx_n_s_vols,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nffatype)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_c6_cross", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1436; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_c6_cross", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1436; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vols)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_c6_cross", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1436; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_init_c6_cross") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1436; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_nffatype = values[0];
    __pyx_v_c6_cross = values[1];
    __pyx_v_c6s = values[2];
    __pyx_v_vols = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_init_c6_cross", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1436; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._init_c6_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_2_init_c6_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self), __pyx_v_nffatype, __pyx_v_c6_cross, __pyx_v_c6s, __pyx_v_vols);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_2_init_c6_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_c6_cross, PyObject *__pyx_v_c6s, PyObject *__pyx_v_vols) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_v_ratio = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_init_c6_cross", 0);

  /* "yaff/pes/ext.pyx":1437
 * 
 *     def _init_c6_cross(self, nffatype, c6_cross, c6s, vols):
 *         for i0 in xrange(nffatype):             # <<<<<<<<<<<<<<
 *             for i1 in xrange(i0+1):
 *                 if c6_cross[i0, i1] == 0.0 and vols[i0] != 0.0 and vols[i1] != 0.0:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_nffatype);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_nffatype);
  __Pyx_GIVEREF(__pyx_v_nffatype);
  __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1438
 *     def _init_c6_cross(self, nffatype, c6_cross, c6s, vols):
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                 if c6_cross[i0, i1] == 0.0 and vols[i0] != 0.0 and vols[i1] != 0.0:
 *                     ratio = vols[i0]/vols[i1]
 */
    __pyx_t_2 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_2 = __pyx_t_7(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yaff/pes/ext.pyx":1439
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 *                 if c6_cross[i0, i1] == 0.0 and vols[i0] != 0.0 and vols[i1] != 0.0:             # <<<<<<<<<<<<<<
 *                     ratio = vols[i0]/vols[i1]
 *                     c6_cross[i0, i1] = 2.0*c6s[i0]*c6s[i1]/(c6s[i0]/ratio+c6s[i1]*ratio)
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_i0);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i0);
      __Pyx_GIVEREF(__pyx_v_i0);
      __Pyx_INCREF(__pyx_v_i1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i1);
      __Pyx_GIVEREF(__pyx_v_i1);
      __pyx_t_8 = PyObject_GetItem(__pyx_v_c6_cross, __pyx_t_2); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {
        __pyx_t_2 = PyObject_GetItem(__pyx_v_vols, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = PyObject_RichCompare(__pyx_t_2, __pyx_float_0_0, Py_NE); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_10) {
          __pyx_t_8 = PyObject_GetItem(__pyx_v_vols, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_12 = __pyx_t_11;
        } else {
          __pyx_t_12 = __pyx_t_10;
        }
        __pyx_t_10 = __pyx_t_12;
      } else {
        __pyx_t_10 = __pyx_t_9;
      }
      if (__pyx_t_10) {

        /* "yaff/pes/ext.pyx":1440
 *             for i1 in xrange(i0+1):
 *                 if c6_cross[i0, i1] == 0.0 and vols[i0] != 0.0 and vols[i1] != 0.0:
 *                     ratio = vols[i0]/vols[i1]             # <<<<<<<<<<<<<<
 *                     c6_cross[i0, i1] = 2.0*c6s[i0]*c6s[i1]/(c6s[i0]/ratio+c6s[i1]*ratio)
 *                     c6_cross[i1, i0] = c6_cross[i0, i1]
 */
        __pyx_t_2 = PyObject_GetItem(__pyx_v_vols, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = PyObject_GetItem(__pyx_v_vols, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_13 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ratio, __pyx_t_13);
        __pyx_t_13 = 0;

        /* "yaff/pes/ext.pyx":1441
 *                 if c6_cross[i0, i1] == 0.0 and vols[i0] != 0.0 and vols[i1] != 0.0:
 *                     ratio = vols[i0]/vols[i1]
 *                     c6_cross[i0, i1] = 2.0*c6s[i0]*c6s[i1]/(c6s[i0]/ratio+c6s[i1]*ratio)             # <<<<<<<<<<<<<<
 *                     c6_cross[i1, i0] = c6_cross[i0, i1]
 * 
 */
        __pyx_t_13 = PyObject_GetItem(__pyx_v_c6s, __pyx_v_i0); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_8 = PyNumber_Multiply(__pyx_float_2_0, __pyx_t_13); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyObject_GetItem(__pyx_v_c6s, __pyx_v_i1); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_2 = PyNumber_Multiply(__pyx_t_8, __pyx_t_13); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyObject_GetItem(__pyx_v_c6s, __pyx_v_i0); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_13, __pyx_v_ratio); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyObject_GetItem(__pyx_v_c6s, __pyx_v_i1); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_14 = PyNumber_Multiply(__pyx_t_13, __pyx_v_ratio); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyNumber_Add(__pyx_t_8, __pyx_t_14); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_13); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        if (unlikely(PyObject_SetItem(__pyx_v_c6_cross, __pyx_t_13, __pyx_t_14) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

        /* "yaff/pes/ext.pyx":1442
 *                     ratio = vols[i0]/vols[i1]
 *                     c6_cross[i0, i1] = 2.0*c6s[i0]*c6s[i1]/(c6s[i0]/ratio+c6s[i1]*ratio)
 *                     c6_cross[i1, i0] = c6_cross[i0, i1]             # <<<<<<<<<<<<<<
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs):
 */
        __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_13 = PyObject_GetItem(__pyx_v_c6_cross, __pyx_t_14); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        if (unlikely(PyObject_SetItem(__pyx_v_c6_cross, __pyx_t_14, __pyx_t_13) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1436
 *         self._c_b_cross = b_cross
 * 
 *     def _init_c6_cross(self, nffatype, c6_cross, c6s, vols):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._init_c6_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XDECREF(__pyx_v_ratio);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1444
 *                     c6_cross[i1, i0] = c6_cross[i0, i1]
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_5_init_b_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_4_init_b_cross[] = "PairPotDampDisp._init_b_cross(self, nffatype, b_cross, bs)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_5_init_b_cross(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_nffatype = 0;
  PyObject *__pyx_v_b_cross = 0;
  PyObject *__pyx_v_bs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_init_b_cross (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_nffatype,&__pyx_n_s_b_cross,&__pyx_n_s_bs,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nffatype)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_b_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_init_b_cross") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_nffatype = values[0];
    __pyx_v_b_cross = values[1];
    __pyx_v_bs = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_init_b_cross", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1444; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._init_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_4_init_b_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self), __pyx_v_nffatype, __pyx_v_b_cross, __pyx_v_bs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_4_init_b_cross(CYTHON_UNUSED struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self, PyObject *__pyx_v_nffatype, PyObject *__pyx_v_b_cross, PyObject *__pyx_v_bs) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_init_b_cross", 0);

  /* "yaff/pes/ext.pyx":1445
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs):
 *         for i0 in xrange(nffatype):             # <<<<<<<<<<<<<<
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0 and bs[i0] != 0.0 and bs[i1] != 0.0:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_nffatype);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_nffatype);
  __Pyx_GIVEREF(__pyx_v_nffatype);
  __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = Py_TYPE(__pyx_t_1)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (!__pyx_t_4 && PyList_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_4 && PyTuple_CheckExact(__pyx_t_1)) {
      if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_3); __Pyx_INCREF(__pyx_t_2); __pyx_t_3++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_2 = __pyx_t_4(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1446
 *     def _init_b_cross(self, nffatype, b_cross, bs):
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                 if b_cross[i0, i1] == 0.0 and bs[i0] != 0.0 and bs[i1] != 0.0:
 *                     b_cross[i0, i1] = 0.5*(bs[i0] + bs[i1])
 */
    __pyx_t_2 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_2) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_5 = __pyx_t_2; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (!__pyx_t_7 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_7 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_2 = __pyx_t_7(__pyx_t_5);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "yaff/pes/ext.pyx":1447
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0 and bs[i0] != 0.0 and bs[i1] != 0.0:             # <<<<<<<<<<<<<<
 *                     b_cross[i0, i1] = 0.5*(bs[i0] + bs[i1])
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_i0);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_i0);
      __Pyx_GIVEREF(__pyx_v_i0);
      __Pyx_INCREF(__pyx_v_i1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_i1);
      __Pyx_GIVEREF(__pyx_v_i1);
      __pyx_t_8 = PyObject_GetItem(__pyx_v_b_cross, __pyx_t_2); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_9) {
        __pyx_t_2 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = PyObject_RichCompare(__pyx_t_2, __pyx_float_0_0, Py_NE); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_10 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (__pyx_t_10) {
          __pyx_t_8 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_2 = PyObject_RichCompare(__pyx_t_8, __pyx_float_0_0, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_11 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_12 = __pyx_t_11;
        } else {
          __pyx_t_12 = __pyx_t_10;
        }
        __pyx_t_10 = __pyx_t_12;
      } else {
        __pyx_t_10 = __pyx_t_9;
      }
      if (__pyx_t_10) {

        /* "yaff/pes/ext.pyx":1448
 *             for i1 in xrange(i0+1):
 *                 if b_cross[i0, i1] == 0.0 and bs[i0] != 0.0 and bs[i1] != 0.0:
 *                     b_cross[i0, i1] = 0.5*(bs[i0] + bs[i1])             # <<<<<<<<<<<<<<
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 */
        __pyx_t_2 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i0); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = PyObject_GetItem(__pyx_v_bs, __pyx_v_i1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_13 = PyNumber_Add(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Multiply(__pyx_float_0_5, __pyx_t_13); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        if (unlikely(PyObject_SetItem(__pyx_v_b_cross, __pyx_t_13, __pyx_t_8) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "yaff/pes/ext.pyx":1449
 *                 if b_cross[i0, i1] == 0.0 and bs[i0] != 0.0 and bs[i1] != 0.0:
 *                     b_cross[i0, i1] = 0.5*(bs[i0] + bs[i1])
 *                     b_cross[i1, i0] = b_cross[i0, i1]             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
        __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_13 = PyObject_GetItem(__pyx_v_b_cross, __pyx_t_8); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1449; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyTuple_New(2); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        if (unlikely(PyObject_SetItem(__pyx_v_b_cross, __pyx_t_8, __pyx_t_13) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1444
 *                     c6_cross[i1, i0] = c6_cross[i0, i1]
 * 
 *     def _init_b_cross(self, nffatype, b_cross, bs):             # <<<<<<<<<<<<<<
 *         for i0 in xrange(nffatype):
 *             for i1 in xrange(i0+1):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._init_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1451
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_7log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_6log[] = "PairPotDampDisp.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_7log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_6log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_6log(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1453
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6          B')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1454
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('ffatype_id0 ffatype_id1         C6          B')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1455
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6          B')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__20, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1456
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6          B')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1457
 *             log('ffatype_id0 ffatype_id1         C6          B')
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):             # <<<<<<<<<<<<<<
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), log.invlength(self._c_b_cross[i0,i1])))
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->_c_nffatype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_5 && PyList_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_5 && PyTuple_CheckExact(__pyx_t_2)) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "yaff/pes/ext.pyx":1458
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                     log('%11i %11i %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 */
      __pyx_t_1 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_6 = __pyx_t_1; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_6)) {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_1 = __pyx_t_8(__pyx_t_6);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "yaff/pes/ext.pyx":1459
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), log.invlength(self._c_b_cross[i0,i1])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_c6_cross(self):
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_c6); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_11 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_c6_cross), __pyx_t_9); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_invlength); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_b_cross), __pyx_t_9); if (unlikely(__pyx_t_12 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_11 = 0;
        __pyx_t_12 = 0;
        __pyx_t_12 = PyNumber_Remainder(__pyx_kp_s_11i_11i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        __pyx_t_12 = 0;
        __pyx_t_12 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1451
 *                     b_cross[i1, i0] = b_cross[i0, i1]
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1461
 *                     log('%11i %11i %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 *     def _get_c6_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_9_get_c6_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_8_get_c6_cross[] = "PairPotDampDisp._get_c6_cross(self)\nThe C6 cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_9_get_c6_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c6_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_8_get_c6_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_8_get_c6_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c6_cross", 0);

  /* "yaff/pes/ext.pyx":1463
 *     def _get_c6_cross(self):
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     c6_cross = property(_get_c6_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_c6_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1461
 *                     log('%11i %11i %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), log.invlength(self._c_b_cross[i0,i1])))
 * 
 *     def _get_c6_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._get_c6_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1467
 *     c6_cross = property(_get_c6_cross)
 * 
 *     def _get_b_cross(self):             # <<<<<<<<<<<<<<
 *         '''The damping cross parameters'''
 *         return self._c_b_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_11_get_b_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_10_get_b_cross[] = "PairPotDampDisp._get_b_cross(self)\nThe damping cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_11_get_b_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_b_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_10_get_b_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_15PairPotDampDisp_10_get_b_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_b_cross", 0);

  /* "yaff/pes/ext.pyx":1469
 *     def _get_b_cross(self):
 *         '''The damping cross parameters'''
 *         return self._c_b_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     b_cross = property(_get_b_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_b_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1467
 *     c6_cross = property(_get_c6_cross)
 * 
 *     def _get_b_cross(self):             # <<<<<<<<<<<<<<
 *         '''The damping cross parameters'''
 *         return self._c_b_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDampDisp._get_b_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1535
 *     name = 'disp68bjdamp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] c8_cross not None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ffatype_ids = 0;
  PyArrayObject *__pyx_v_c6_cross = 0;
  PyArrayObject *__pyx_v_c8_cross = 0;
  PyArrayObject *__pyx_v_R_cross = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  PyArrayObject *__pyx_v_c6s = 0;
  PyArrayObject *__pyx_v_c8s = 0;
  PyArrayObject *__pyx_v_Rs = 0;
  double __pyx_v_c6_scale;
  double __pyx_v_c8_scale;
  double __pyx_v_bj_a;
  double __pyx_v_bj_b;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ffatype_ids,&__pyx_n_s_c6_cross,&__pyx_n_s_c8_cross,&__pyx_n_s_R_cross,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,&__pyx_n_s_c6s,&__pyx_n_s_c8s,&__pyx_n_s_Rs,&__pyx_n_s_c6_scale,&__pyx_n_s_c8_scale,&__pyx_n_s_bj_a,&__pyx_n_s_bj_b,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1539
 *                   np.ndarray[double, ndim=2] c8_cross not None,
 *                   np.ndarray[double, ndim=2] R_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] c8s=None,
 */
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[6] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);

    /* "yaff/pes/ext.pyx":1540
 *                   np.ndarray[double, ndim=2] R_cross not None,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] c6s=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] c8s=None,
 *                   np.ndarray[double, ndim=1] Rs=None,
 */
    values[7] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":1541
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] c8s=None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] Rs=None,
 *                   double c6_scale=1.0, double c8_scale=1.0, double bj_a=0.0, double bj_b=0.0):
 */
    values[8] = (PyObject *)((PyArrayObject *)Py_None);

    /* "yaff/pes/ext.pyx":1542
 *                   np.ndarray[double, ndim=1] c6s=None,
 *                   np.ndarray[double, ndim=1] c8s=None,
 *                   np.ndarray[double, ndim=1] Rs=None,             # <<<<<<<<<<<<<<
 *                   double c6_scale=1.0, double c8_scale=1.0, double bj_a=0.0, double bj_b=0.0):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 */
    values[9] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ffatype_ids)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 14, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c8_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 14, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_R_cross)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 14, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 14, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6s);
          if (value) { values[7] = value; kw_args--; }
        }
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c8s);
          if (value) { values[8] = value; kw_args--; }
        }
        case  9:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Rs);
          if (value) { values[9] = value; kw_args--; }
        }
        case 10:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c6_scale);
          if (value) { values[10] = value; kw_args--; }
        }
        case 11:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_c8_scale);
          if (value) { values[11] = value; kw_args--; }
        }
        case 12:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bj_a);
          if (value) { values[12] = value; kw_args--; }
        }
        case 13:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bj_b);
          if (value) { values[13] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_ffatype_ids = ((PyArrayObject *)values[0]);
    __pyx_v_c6_cross = ((PyArrayObject *)values[1]);
    __pyx_v_c8_cross = ((PyArrayObject *)values[2]);
    __pyx_v_R_cross = ((PyArrayObject *)values[3]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[5]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[6]);
    __pyx_v_c6s = ((PyArrayObject *)values[7]);
    __pyx_v_c8s = ((PyArrayObject *)values[8]);
    __pyx_v_Rs = ((PyArrayObject *)values[9]);
    if (values[10]) {
      __pyx_v_c6_scale = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_c6_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_c6_scale = ((double)1.0);
    }
    if (values[11]) {
      __pyx_v_c8_scale = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_c8_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_c8_scale = ((double)1.0);
    }
    if (values[12]) {
      __pyx_v_bj_a = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_bj_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bj_a = ((double)0.0);
    }
    if (values[13]) {
      __pyx_v_bj_b = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_bj_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bj_b = ((double)0.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 14, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ffatype_ids), __pyx_ptype_5numpy_ndarray, 0, "ffatype_ids", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c6_cross), __pyx_ptype_5numpy_ndarray, 0, "c6_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c8_cross), __pyx_ptype_5numpy_ndarray, 0, "c8_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_R_cross), __pyx_ptype_5numpy_ndarray, 0, "R_cross", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c6s), __pyx_ptype_5numpy_ndarray, 1, "c6s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_c8s), __pyx_ptype_5numpy_ndarray, 1, "c8s", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_Rs), __pyx_ptype_5numpy_ndarray, 1, "Rs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self), __pyx_v_ffatype_ids, __pyx_v_c6_cross, __pyx_v_c8_cross, __pyx_v_R_cross, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw, __pyx_v_c6s, __pyx_v_c8s, __pyx_v_Rs, __pyx_v_c6_scale, __pyx_v_c8_scale, __pyx_v_bj_a, __pyx_v_bj_b);

  /* "yaff/pes/ext.pyx":1535
 *     name = 'disp68bjdamp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] c8_cross not None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self, PyArrayObject *__pyx_v_ffatype_ids, PyArrayObject *__pyx_v_c6_cross, PyArrayObject *__pyx_v_c8_cross, PyArrayObject *__pyx_v_R_cross, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, PyArrayObject *__pyx_v_c6s, PyArrayObject *__pyx_v_c8s, PyArrayObject *__pyx_v_Rs, double __pyx_v_c6_scale, double __pyx_v_c8_scale, double __pyx_v_bj_a, double __pyx_v_bj_b) {
  npy_intp __pyx_v_nffatype;
  PyObject *__pyx_v_mask = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_R_cross;
  __Pyx_Buffer __pyx_pybuffer_R_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Rs;
  __Pyx_Buffer __pyx_pybuffer_Rs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c6_cross;
  __Pyx_Buffer __pyx_pybuffer_c6_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c6s;
  __Pyx_Buffer __pyx_pybuffer_c6s;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c8_cross;
  __Pyx_Buffer __pyx_pybuffer_c8_cross;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_c8s;
  __Pyx_Buffer __pyx_pybuffer_c8s;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ffatype_ids;
  __Pyx_Buffer __pyx_pybuffer_ffatype_ids;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_ffatype_ids.pybuffer.buf = NULL;
  __pyx_pybuffer_ffatype_ids.refcount = 0;
  __pyx_pybuffernd_ffatype_ids.data = NULL;
  __pyx_pybuffernd_ffatype_ids.rcbuffer = &__pyx_pybuffer_ffatype_ids;
  __pyx_pybuffer_c6_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_c6_cross.refcount = 0;
  __pyx_pybuffernd_c6_cross.data = NULL;
  __pyx_pybuffernd_c6_cross.rcbuffer = &__pyx_pybuffer_c6_cross;
  __pyx_pybuffer_c8_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_c8_cross.refcount = 0;
  __pyx_pybuffernd_c8_cross.data = NULL;
  __pyx_pybuffernd_c8_cross.rcbuffer = &__pyx_pybuffer_c8_cross;
  __pyx_pybuffer_R_cross.pybuffer.buf = NULL;
  __pyx_pybuffer_R_cross.refcount = 0;
  __pyx_pybuffernd_R_cross.data = NULL;
  __pyx_pybuffernd_R_cross.rcbuffer = &__pyx_pybuffer_R_cross;
  __pyx_pybuffer_c6s.pybuffer.buf = NULL;
  __pyx_pybuffer_c6s.refcount = 0;
  __pyx_pybuffernd_c6s.data = NULL;
  __pyx_pybuffernd_c6s.rcbuffer = &__pyx_pybuffer_c6s;
  __pyx_pybuffer_c8s.pybuffer.buf = NULL;
  __pyx_pybuffer_c8s.refcount = 0;
  __pyx_pybuffernd_c8s.data = NULL;
  __pyx_pybuffernd_c8s.rcbuffer = &__pyx_pybuffer_c8s;
  __pyx_pybuffer_Rs.pybuffer.buf = NULL;
  __pyx_pybuffer_Rs.refcount = 0;
  __pyx_pybuffernd_Rs.data = NULL;
  __pyx_pybuffernd_Rs.rcbuffer = &__pyx_pybuffer_Rs;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer, (PyObject*)__pyx_v_ffatype_ids, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ffatype_ids.diminfo[0].strides = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ffatype_ids.diminfo[0].shape = __pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_c6_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c6_cross.diminfo[0].strides = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c6_cross.diminfo[0].shape = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_c6_cross.diminfo[1].strides = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_c6_cross.diminfo[1].shape = __pyx_pybuffernd_c6_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c8_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_c8_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c8_cross.diminfo[0].strides = __pyx_pybuffernd_c8_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c8_cross.diminfo[0].shape = __pyx_pybuffernd_c8_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_c8_cross.diminfo[1].strides = __pyx_pybuffernd_c8_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_c8_cross.diminfo[1].shape = __pyx_pybuffernd_c8_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_R_cross.rcbuffer->pybuffer, (PyObject*)__pyx_v_R_cross, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_R_cross.diminfo[0].strides = __pyx_pybuffernd_R_cross.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_R_cross.diminfo[0].shape = __pyx_pybuffernd_R_cross.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_R_cross.diminfo[1].strides = __pyx_pybuffernd_R_cross.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_R_cross.diminfo[1].shape = __pyx_pybuffernd_R_cross.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer, (PyObject*)__pyx_v_c6s, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c6s.diminfo[0].strides = __pyx_pybuffernd_c6s.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c6s.diminfo[0].shape = __pyx_pybuffernd_c6s.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_c8s.rcbuffer->pybuffer, (PyObject*)__pyx_v_c8s, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_c8s.diminfo[0].strides = __pyx_pybuffernd_c8s.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_c8s.diminfo[0].shape = __pyx_pybuffernd_c8s.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Rs.rcbuffer->pybuffer, (PyObject*)__pyx_v_Rs, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_Rs.diminfo[0].strides = __pyx_pybuffernd_Rs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Rs.diminfo[0].shape = __pyx_pybuffernd_Rs.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1544
 *                   np.ndarray[double, ndim=1] Rs=None,
 *                   double c6_scale=1.0, double c8_scale=1.0, double bj_a=0.0, double bj_b=0.0):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert c8_cross.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1545
 *                   double c6_scale=1.0, double c8_scale=1.0, double bj_a=0.0, double bj_b=0.0):
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert c6_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert c8_cross.flags['C_CONTIGUOUS']
 *         assert R_cross.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c6_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1546
 *         assert ffatype_ids.flags['C_CONTIGUOUS']
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert c8_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert R_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c8_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1546; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1547
 *         assert c6_cross.flags['C_CONTIGUOUS']
 *         assert c8_cross.flags['C_CONTIGUOUS']
 *         assert R_cross.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_R_cross), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1548
 *         assert c8_cross.flags['C_CONTIGUOUS']
 *         assert R_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 */
  __pyx_v_nffatype = (__pyx_v_c6_cross->dimensions[0]);

  /* "yaff/pes/ext.pyx":1549
 *         assert R_cross.flags['C_CONTIGUOUS']
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0             # <<<<<<<<<<<<<<
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_min); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1550
 *         nffatype = c6_cross.shape[0]
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype             # <<<<<<<<<<<<<<
 *         assert c6_cross.shape[1] == nffatype
 *         assert c8_cross.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffatype_ids), __pyx_n_s_max); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_nffatype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1551
 *         assert ffatype_ids.min() >= 0
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert c8_cross.shape[0] == nffatype
 *         assert c8_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_c6_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1552
 *         assert ffatype_ids.max() < nffatype
 *         assert c6_cross.shape[1] == nffatype
 *         assert c8_cross.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *         assert c8_cross.shape[1] == nffatype
 *         assert R_cross.shape[0] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_c8_cross->dimensions[0]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1553
 *         assert c6_cross.shape[1] == nffatype
 *         assert c8_cross.shape[0] == nffatype
 *         assert c8_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         assert R_cross.shape[0] == nffatype
 *         assert R_cross.shape[1] == nffatype
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_c8_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1554
 *         assert c8_cross.shape[0] == nffatype
 *         assert c8_cross.shape[1] == nffatype
 *         assert R_cross.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *         assert R_cross.shape[1] == nffatype
 *         if c6s is not None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_R_cross->dimensions[0]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1555
 *         assert c8_cross.shape[1] == nffatype
 *         assert R_cross.shape[0] == nffatype
 *         assert R_cross.shape[1] == nffatype             # <<<<<<<<<<<<<<
 *         if c6s is not None:
 *             assert c6s.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_R_cross->dimensions[1]) == __pyx_v_nffatype) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1556
 *         assert R_cross.shape[0] == nffatype
 *         assert R_cross.shape[1] == nffatype
 *         if c6s is not None:             # <<<<<<<<<<<<<<
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_c6s) != Py_None);
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1557
 *         assert R_cross.shape[1] == nffatype
 *         if c6s is not None:
 *             assert c6s.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert c6s.shape[0] == nffatype
 *             raise NotImplementedError
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c6s), __pyx_n_s_flags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_4, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1557; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_5)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1558
 *         if c6s is not None:
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             raise NotImplementedError
 *         if c8s is not None:
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_c6s->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1559
 *             assert c6s.flags['C_CONTIGUOUS']
 *             assert c6s.shape[0] == nffatype
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 *         if c8s is not None:
 *             assert c8s.flags['C_CONTIGUOUS']
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1560
 *             assert c6s.shape[0] == nffatype
 *             raise NotImplementedError
 *         if c8s is not None:             # <<<<<<<<<<<<<<
 *             assert c8s.flags['C_CONTIGUOUS']
 *             assert c8s.shape[0] == nffatype
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_c8s) != Py_None);
  __pyx_t_3 = (__pyx_t_5 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1561
 *             raise NotImplementedError
 *         if c8s is not None:
 *             assert c8s.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert c8s.shape[0] == nffatype
 *             raise NotImplementedError
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_c8s), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1562
 *         if c8s is not None:
 *             assert c8s.flags['C_CONTIGUOUS']
 *             assert c8s.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             raise NotImplementedError
 *         if Rs is not None:
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_c8s->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1563
 *             assert c8s.flags['C_CONTIGUOUS']
 *             assert c8s.shape[0] == nffatype
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 *         if Rs is not None:
 *             assert Rs.flags['C_CONTIGUOUS']
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1564
 *             assert c8s.shape[0] == nffatype
 *             raise NotImplementedError
 *         if Rs is not None:             # <<<<<<<<<<<<<<
 *             assert Rs.flags['C_CONTIGUOUS']
 *             assert Rs.shape[0] == nffatype
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_Rs) != Py_None);
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1565
 *             raise NotImplementedError
 *         if Rs is not None:
 *             assert Rs.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *             assert Rs.shape[0] == nffatype
 *             raise NotImplementedError
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_Rs), __pyx_n_s_flags); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_4, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_5)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1566
 *         if Rs is not None:
 *             assert Rs.flags['C_CONTIGUOUS']
 *             assert Rs.shape[0] == nffatype             # <<<<<<<<<<<<<<
 *             raise NotImplementedError
 *         if np.all(R_cross==0.0):
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_Rs->dimensions[0]) == __pyx_v_nffatype) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":1567
 *             assert Rs.flags['C_CONTIGUOUS']
 *             assert Rs.shape[0] == nffatype
 *             raise NotImplementedError             # <<<<<<<<<<<<<<
 *         if np.all(R_cross==0.0):
 *             # We need to mask out zero c6 coefficients
 */
    __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1568
 *             assert Rs.shape[0] == nffatype
 *             raise NotImplementedError
 *         if np.all(R_cross==0.0):             # <<<<<<<<<<<<<<
 *             # We need to mask out zero c6 coefficients
 *             mask = c6_cross != 0.0
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_all); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)__pyx_v_R_cross), __pyx_float_0_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1570
 *         if np.all(R_cross==0.0):
 *             # We need to mask out zero c6 coefficients
 *             mask = c6_cross != 0.0             # <<<<<<<<<<<<<<
 *             R_cross[mask] = np.sqrt(c8_scale*c8_cross[mask]/c6_cross[mask]/c6_scale)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
    __pyx_t_1 = PyObject_RichCompare(((PyObject *)__pyx_v_c6_cross), __pyx_float_0_0, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_mask = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1571
 *             # We need to mask out zero c6 coefficients
 *             mask = c6_cross != 0.0
 *             R_cross[mask] = np.sqrt(c8_scale*c8_cross[mask]/c6_cross[mask]/c6_scale)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_c8_scale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_GetItem(((PyObject *)__pyx_v_c8_cross), __pyx_v_mask); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_GetItem(((PyObject *)__pyx_v_c6_cross), __pyx_v_mask); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_c6_scale); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_R_cross), __pyx_v_mask, __pyx_t_6) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "yaff/pes/ext.pyx":1572
 *             mask = c6_cross != 0.0
 *             R_cross[mask] = np.sqrt(c8_scale*c8_cross[mask]/c6_cross[mask]/c6_scale)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1573
 *             R_cross[mask] = np.sqrt(c8_scale*c8_cross[mask]/c6_cross[mask]/c6_scale)
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_disp68bjdamp_init(
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "yaff/pes/ext.pyx":1574
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_disp68bjdamp_init(
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "yaff/pes/ext.pyx":1575
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_disp68bjdamp_init(             # <<<<<<<<<<<<<<
 *             self._c_pair_pot, nffatype, <long*> ffatype_ids.data,
 *             <double*> c6_cross.data, <double*> c8_cross.data,
 */
  pair_data_disp68bjdamp_init(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_nffatype, ((long *)__pyx_v_ffatype_ids->data), ((double *)__pyx_v_c6_cross->data), ((double *)__pyx_v_c8_cross->data), ((double *)__pyx_v_R_cross->data), __pyx_v_c6_scale, __pyx_v_c8_scale, __pyx_v_bj_a, __pyx_v_bj_b);

  /* "yaff/pes/ext.pyx":1580
 *             <double*> R_cross.data, c6_scale, c8_scale, bj_a, bj_b,
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 */
  __pyx_t_5 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":1581
 *         )
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1582
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_nffatype = nffatype             # <<<<<<<<<<<<<<
 *         self._c_c6_cross = c6_cross
 *         self._c_c8_cross = c8_cross
 */
  __pyx_v_self->_c_nffatype = __pyx_v_nffatype;

  /* "yaff/pes/ext.pyx":1583
 *             raise MemoryError()
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross             # <<<<<<<<<<<<<<
 *         self._c_c8_cross = c8_cross
 *         self._c_R_cross = R_cross
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_c6_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_c6_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_c6_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_c6_cross));
  __pyx_v_self->_c_c6_cross = ((PyArrayObject *)__pyx_v_c6_cross);

  /* "yaff/pes/ext.pyx":1584
 *         self._c_nffatype = nffatype
 *         self._c_c6_cross = c6_cross
 *         self._c_c8_cross = c8_cross             # <<<<<<<<<<<<<<
 *         self._c_R_cross = R_cross
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_c8_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_c8_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_c8_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_c8_cross));
  __pyx_v_self->_c_c8_cross = ((PyArrayObject *)__pyx_v_c8_cross);

  /* "yaff/pes/ext.pyx":1585
 *         self._c_c6_cross = c6_cross
 *         self._c_c8_cross = c8_cross
 *         self._c_R_cross = R_cross             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_R_cross));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_R_cross));
  __Pyx_GOTREF(__pyx_v_self->_c_R_cross);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_R_cross));
  __pyx_v_self->_c_R_cross = ((PyArrayObject *)__pyx_v_R_cross);

  /* "yaff/pes/ext.pyx":1535
 *     name = 'disp68bjdamp'
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] c6_cross not None,
 *                   np.ndarray[double, ndim=2] c8_cross not None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_R_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Rs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c8_cross.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c8s.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_R_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Rs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c6s.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c8_cross.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_c8s.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ffatype_ids.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_mask);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1587
 *         self._c_R_cross = R_cross
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_2log[] = "PairPotDisp68BJDamp.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_v_i0 = NULL;
  PyObject *__pyx_v_i1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1589
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:             # <<<<<<<<<<<<<<
 *             log('  c6_scale:             %s' % ("%10.5f"%self.c6_scale))
 *             log('  c8_scale:             %s' % ("%10.5f"%self.c8_scale))
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_medium); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1590
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 *             log('  c6_scale:             %s' % ("%10.5f"%self.c6_scale))             # <<<<<<<<<<<<<<
 *             log('  c8_scale:             %s' % ("%10.5f"%self.c8_scale))
 *             log('  bj_a:             %s' % ("%10.5f"%self.bj_a))
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_c6_scale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_c6_scale_s, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1591
 *         if log.do_medium:
 *             log('  c6_scale:             %s' % ("%10.5f"%self.c6_scale))
 *             log('  c8_scale:             %s' % ("%10.5f"%self.c8_scale))             # <<<<<<<<<<<<<<
 *             log('  bj_a:             %s' % ("%10.5f"%self.bj_a))
 *             log('  bj_b:             %s' % ("%10.5f"%self.bj_b))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_c8_scale); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_c8_scale_s, __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":1592
 *             log('  c6_scale:             %s' % ("%10.5f"%self.c6_scale))
 *             log('  c8_scale:             %s' % ("%10.5f"%self.c8_scale))
 *             log('  bj_a:             %s' % ("%10.5f"%self.bj_a))             # <<<<<<<<<<<<<<
 *             log('  bj_b:             %s' % ("%10.5f"%self.bj_b))
 *         if log.do_high:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bj_a); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_bj_a_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1593
 *             log('  c8_scale:             %s' % ("%10.5f"%self.c8_scale))
 *             log('  bj_a:             %s' % ("%10.5f"%self.bj_a))
 *             log('  bj_b:             %s' % ("%10.5f"%self.bj_b))             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bj_b); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_bj_b_s, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1594
 *             log('  bj_a:             %s' % ("%10.5f"%self.bj_a))
 *             log('  bj_b:             %s' % ("%10.5f"%self.bj_b))
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1595
 *             log('  bj_b:             %s' % ("%10.5f"%self.bj_b))
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')
 *             log.hline()
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":1596
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_k_tuple__21, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1597
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1598
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):             # <<<<<<<<<<<<<<
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), "%10.5f"%self._c_c8_cross[i0,i1], log.length(self._c_R_cross[i0,i1])))
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->_c_nffatype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_4 = __pyx_t_1; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_4)) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_4)) {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_6(__pyx_t_4);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_i0, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "yaff/pes/ext.pyx":1599
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):             # <<<<<<<<<<<<<<
 *                     log('%11i %11i %s %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), "%10.5f"%self._c_c8_cross[i0,i1], log.length(self._c_R_cross[i0,i1])))
 * 
 */
      __pyx_t_1 = PyNumber_Add(__pyx_v_i0, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_builtin_xrange, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = Py_TYPE(__pyx_t_2)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (!__pyx_t_8 && PyList_CheckExact(__pyx_t_2)) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_8 && PyTuple_CheckExact(__pyx_t_2)) {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_1 = __pyx_t_8(__pyx_t_2);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_i1, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "yaff/pes/ext.pyx":1600
 *             for i0 in xrange(self._c_nffatype):
 *                 for i1 in xrange(i0+1):
 *                     log('%11i %11i %s %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), "%10.5f"%self._c_c8_cross[i0,i1], log.length(self._c_R_cross[i0,i1])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_c6_cross(self):
 */
        __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_c6); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_11 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_c6_cross), __pyx_t_9); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = PyObject_Call(__pyx_t_10, __pyx_t_9, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_10 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_c8_cross), __pyx_t_9); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_9 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_10); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_length); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        __pyx_t_13 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_R_cross), __pyx_t_10); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_13);
        __Pyx_GIVEREF(__pyx_t_13);
        __pyx_t_13 = 0;
        __pyx_t_13 = PyObject_Call(__pyx_t_12, __pyx_t_10, NULL); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyTuple_New(5); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_v_i0);
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_i0);
        __Pyx_GIVEREF(__pyx_v_i0);
        __Pyx_INCREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_i1);
        __Pyx_GIVEREF(__pyx_v_i1);
        PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_9);
        __Pyx_GIVEREF(__pyx_t_9);
        PyTuple_SET_ITEM(__pyx_t_10, 4, __pyx_t_13);
        __Pyx_GIVEREF(__pyx_t_13);
        __pyx_t_11 = 0;
        __pyx_t_9 = 0;
        __pyx_t_13 = 0;
        __pyx_t_13 = PyNumber_Remainder(__pyx_kp_s_11i_11i_s_s_s, __pyx_t_10); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_13);
        __Pyx_GIVEREF(__pyx_t_13);
        __pyx_t_13 = 0;
        __pyx_t_13 = PyObject_Call(__pyx_t_1, __pyx_t_10, NULL); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":1587
 *         self._c_R_cross = R_cross
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i0);
  __Pyx_XDECREF(__pyx_v_i1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1602
 *                     log('%11i %11i %s %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), "%10.5f"%self._c_c8_cross[i0,i1], log.length(self._c_R_cross[i0,i1])))
 * 
 *     def _get_c6_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_5_get_c6_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_4_get_c6_cross[] = "PairPotDisp68BJDamp._get_c6_cross(self)\nThe C6 cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_5_get_c6_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c6_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_4_get_c6_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_4_get_c6_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c6_cross", 0);

  /* "yaff/pes/ext.pyx":1604
 *     def _get_c6_cross(self):
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     c6_cross = property(_get_c6_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_c6_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1602
 *                     log('%11i %11i %s %s %s' % (i0, i1, log.c6(self._c_c6_cross[i0,i1]), "%10.5f"%self._c_c8_cross[i0,i1], log.length(self._c_R_cross[i0,i1])))
 * 
 *     def _get_c6_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C6 cross parameters'''
 *         return self._c_c6_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_c6_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1608
 *     c6_cross = property(_get_c6_cross)
 * 
 *     def _get_c8_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C8 cross parameters'''
 *         return self._c_c8_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_7_get_c8_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_6_get_c8_cross[] = "PairPotDisp68BJDamp._get_c8_cross(self)\nThe C8 cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_7_get_c8_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c8_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_6_get_c8_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_6_get_c8_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c8_cross", 0);

  /* "yaff/pes/ext.pyx":1610
 *     def _get_c8_cross(self):
 *         '''The C8 cross parameters'''
 *         return self._c_c8_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     c8_cross = property(_get_c8_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_c8_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1608
 *     c6_cross = property(_get_c6_cross)
 * 
 *     def _get_c8_cross(self):             # <<<<<<<<<<<<<<
 *         '''The C8 cross parameters'''
 *         return self._c_c8_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_c8_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1614
 *     c8_cross = property(_get_c8_cross)
 * 
 *     def _get_R_cross(self):             # <<<<<<<<<<<<<<
 *         '''The R cross parameters'''
 *         return self._c_R_cross.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_9_get_R_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_8_get_R_cross[] = "PairPotDisp68BJDamp._get_R_cross(self)\nThe R cross parameters";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_9_get_R_cross(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_R_cross (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_8_get_R_cross(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_8_get_R_cross(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_R_cross", 0);

  /* "yaff/pes/ext.pyx":1616
 *     def _get_R_cross(self):
 *         '''The R cross parameters'''
 *         return self._c_R_cross.view()             # <<<<<<<<<<<<<<
 * 
 *     R_cross = property(_get_R_cross)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_R_cross), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1614
 *     c8_cross = property(_get_c8_cross)
 * 
 *     def _get_R_cross(self):             # <<<<<<<<<<<<<<
 *         '''The R cross parameters'''
 *         return self._c_R_cross.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_R_cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1620
 *     R_cross = property(_get_R_cross)
 * 
 *     def _get_c6_scale(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c6_scale(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_11_get_c6_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_10_get_c6_scale[] = "PairPotDisp68BJDamp._get_c6_scale(self)\nGlobal scaling of C6 coefficients";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_11_get_c6_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c6_scale (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_10_get_c6_scale(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_10_get_c6_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c6_scale", 0);

  /* "yaff/pes/ext.pyx":1622
 *     def _get_c6_scale(self):
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c6_scale(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     c6_scale = property(_get_c6_scale)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_disp68bjdamp_get_c6_scale(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1620
 *     R_cross = property(_get_R_cross)
 * 
 *     def _get_c6_scale(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c6_scale(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_c6_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1626
 *     c6_scale = property(_get_c6_scale)
 * 
 *     def _get_c8_scale(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C8 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c8_scale(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_13_get_c8_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_12_get_c8_scale[] = "PairPotDisp68BJDamp._get_c8_scale(self)\nGlobal scaling of C8 coefficients";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_13_get_c8_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_c8_scale (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_12_get_c8_scale(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_12_get_c8_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_c8_scale", 0);

  /* "yaff/pes/ext.pyx":1628
 *     def _get_c8_scale(self):
 *         '''Global scaling of C8 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c8_scale(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     c8_scale = property(_get_c8_scale)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_disp68bjdamp_get_c8_scale(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1626
 *     c6_scale = property(_get_c6_scale)
 * 
 *     def _get_c8_scale(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C8 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_c8_scale(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_c8_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1632
 *     c8_scale = property(_get_c8_scale)
 * 
 *     def _get_bj_a(self):             # <<<<<<<<<<<<<<
 *         '''First parameter of Becke-Johnson damping'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_a(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_15_get_bj_a(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_14_get_bj_a[] = "PairPotDisp68BJDamp._get_bj_a(self)\nFirst parameter of Becke-Johnson damping";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_15_get_bj_a(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_bj_a (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_14_get_bj_a(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_14_get_bj_a(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_bj_a", 0);

  /* "yaff/pes/ext.pyx":1634
 *     def _get_bj_a(self):
 *         '''First parameter of Becke-Johnson damping'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_a(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     bj_a = property(_get_bj_a)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_disp68bjdamp_get_bj_a(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1632
 *     c8_scale = property(_get_c8_scale)
 * 
 *     def _get_bj_a(self):             # <<<<<<<<<<<<<<
 *         '''First parameter of Becke-Johnson damping'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_a(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_bj_a", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1638
 *     bj_a = property(_get_bj_a)
 * 
 *     def _get_bj_b(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_b(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_17_get_bj_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_16_get_bj_b[] = "PairPotDisp68BJDamp._get_bj_b(self)\nGlobal scaling of C6 coefficients";
static PyObject *__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_17_get_bj_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_bj_b (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_16_get_bj_b(((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_19PairPotDisp68BJDamp_16_get_bj_b(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_bj_b", 0);

  /* "yaff/pes/ext.pyx":1640
 *     def _get_bj_b(self):
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_b(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     bj_b = property(_get_bj_b)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_disp68bjdamp_get_bj_b(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1638
 *     bj_a = property(_get_bj_a)
 * 
 *     def _get_bj_b(self):             # <<<<<<<<<<<<<<
 *         '''Global scaling of C6 coefficients'''
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_b(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotDisp68BJDamp._get_bj_b", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1684
 *     name = 'ei'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,             # <<<<<<<<<<<<<<
 *                   double rcut, Truncation tr=None, double dielectric=1.0,
 *                   np.ndarray[double, ndim=1] radii=None):
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_9PairPotEI_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_9PairPotEI_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_charges = 0;
  double __pyx_v_alpha;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  double __pyx_v_dielectric;
  PyArrayObject *__pyx_v_radii = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_charges,&__pyx_n_s_alpha,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_dielectric,&__pyx_n_s_radii,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1685
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,
 *                   double rcut, Truncation tr=None, double dielectric=1.0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] radii=None):
 *         assert charges.flags['C_CONTIGUOUS']
 */
    values[3] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);

    /* "yaff/pes/ext.pyx":1686
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,
 *                   double rcut, Truncation tr=None, double dielectric=1.0,
 *                   np.ndarray[double, ndim=1] radii=None):             # <<<<<<<<<<<<<<
 *         assert charges.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
    values[5] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dielectric);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radii);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_charges = ((PyArrayObject *)values[0]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[3]);
    if (values[4]) {
      __pyx_v_dielectric = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_dielectric == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_dielectric = ((double)1.0);
    }
    __pyx_v_radii = ((PyArrayObject *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_radii), __pyx_ptype_5numpy_ndarray, 1, "radii", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self), __pyx_v_charges, __pyx_v_alpha, __pyx_v_rcut, __pyx_v_tr, __pyx_v_dielectric, __pyx_v_radii);

  /* "yaff/pes/ext.pyx":1684
 *     name = 'ei'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,             # <<<<<<<<<<<<<<
 *                   double rcut, Truncation tr=None, double dielectric=1.0,
 *                   np.ndarray[double, ndim=1] radii=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_9PairPotEI___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self, PyArrayObject *__pyx_v_charges, double __pyx_v_alpha, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, double __pyx_v_dielectric, PyArrayObject *__pyx_v_radii) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_radii;
  __Pyx_Buffer __pyx_pybuffer_radii;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_radii);
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_radii.pybuffer.buf = NULL;
  __pyx_pybuffer_radii.refcount = 0;
  __pyx_pybuffernd_radii.data = NULL;
  __pyx_pybuffernd_radii.rcbuffer = &__pyx_pybuffer_radii;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_radii.diminfo[0].strides = __pyx_pybuffernd_radii.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii.diminfo[0].shape = __pyx_pybuffernd_radii.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1687
 *                   double rcut, Truncation tr=None, double dielectric=1.0,
 *                   np.ndarray[double, ndim=1] radii=None):
 *         assert charges.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_charges), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1688
 *                   np.ndarray[double, ndim=1] radii=None):
 *         assert charges.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         #No atomic radii specified, set to point charges
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1689
 *         assert charges.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         #No atomic radii specified, set to point charges
 *         if radii is None: radii = np.zeros( np.shape(charges) )
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1691
 *         self.set_truncation(tr)
 *         #No atomic radii specified, set to point charges
 *         if radii is None: radii = np.zeros( np.shape(charges) )             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_ei_init(self._c_pair_pot, <double*>charges.data, alpha, dielectric, <double*>radii.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_radii) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_shape); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)__pyx_v_charges));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_charges));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_charges));
    __pyx_t_6 = PyObject_Call(__pyx_t_5, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyArrayObject *)__pyx_t_6);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
      }
      __pyx_pybuffernd_radii.diminfo[0].strides = __pyx_pybuffernd_radii.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii.diminfo[0].shape = __pyx_pybuffernd_radii.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_radii, ((PyArrayObject *)__pyx_t_6));
    __pyx_t_6 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1692
 *         #No atomic radii specified, set to point charges
 *         if radii is None: radii = np.zeros( np.shape(charges) )
 *         pair_pot.pair_data_ei_init(self._c_pair_pot, <double*>charges.data, alpha, dielectric, <double*>radii.data)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_ei_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_charges->data), __pyx_v_alpha, __pyx_v_dielectric, ((double *)__pyx_v_radii->data));

  /* "yaff/pes/ext.pyx":1693
 *         if radii is None: radii = np.zeros( np.shape(charges) )
 *         pair_pot.pair_data_ei_init(self._c_pair_pot, <double*>charges.data, alpha, dielectric, <double*>radii.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_charges = charges
 */
  __pyx_t_4 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":1694
 *         pair_pot.pair_data_ei_init(self._c_pair_pot, <double*>charges.data, alpha, dielectric, <double*>radii.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_charges = charges
 *         self._c_radii = radii
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1695
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_charges = charges             # <<<<<<<<<<<<<<
 *         self._c_radii = radii
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_charges));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_charges));
  __Pyx_GOTREF(__pyx_v_self->_c_charges);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_charges));
  __pyx_v_self->_c_charges = ((PyArrayObject *)__pyx_v_charges);

  /* "yaff/pes/ext.pyx":1696
 *             raise MemoryError()
 *         self._c_charges = charges
 *         self._c_radii = radii             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_radii));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_radii));
  __Pyx_GOTREF(__pyx_v_self->_c_radii);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_radii));
  __pyx_v_self->_c_radii = ((PyArrayObject *)__pyx_v_radii);

  /* "yaff/pes/ext.pyx":1684
 *     name = 'ei'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,             # <<<<<<<<<<<<<<
 *                   double rcut, Truncation tr=None, double dielectric=1.0,
 *                   np.ndarray[double, ndim=1] radii=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_radii);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1698
 *         self._c_radii = radii
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotEI_2log[] = "PairPotEI.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  npy_intp __pyx_t_6;
  npy_intp __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1700
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:             # <<<<<<<<<<<<<<
 *             log('  alpha:                 %s' % log.invlength(self.alpha))
 *             log('  relative permittivity: %5.3f' % self.dielectric)
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_medium); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1701
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 *             log('  alpha:                 %s' % log.invlength(self.alpha))             # <<<<<<<<<<<<<<
 *             log('  relative permittivity: %5.3f' % self.dielectric)
 *         if log.do_high:
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_invlength); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_alpha); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Remainder(__pyx_kp_s_alpha_s, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "yaff/pes/ext.pyx":1702
 *         if log.do_medium:
 *             log('  alpha:                 %s' % log.invlength(self.alpha))
 *             log('  relative permittivity: %5.3f' % self.dielectric)             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dielectric); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_relative_permittivity_5_3f, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1703
 *             log('  alpha:                 %s' % log.invlength(self.alpha))
 *             log('  relative permittivity: %5.3f' % self.dielectric)
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom     Charge     Radius')
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_do_high); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1704
 *             log('  relative permittivity: %5.3f' % self.dielectric)
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom     Charge     Radius')
 *             log.hline()
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1705
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom     Charge     Radius')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_k_tuple__22, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1706
 *             log.hline()
 *             log('   Atom     Charge     Radius')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%7i %s %s' % (i, log.charge(self._c_charges[i]), log.length(self._c_radii[i])))
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1707
 *             log('   Atom     Charge     Radius')
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i %s %s' % (i, log.charge(self._c_charges[i]), log.length(self._c_radii[i])))
 * 
 */
    __pyx_t_6 = (__pyx_v_self->_c_charges->dimensions[0]);
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_i = __pyx_t_7;

      /* "yaff/pes/ext.pyx":1708
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%7i %s %s' % (i, log.charge(self._c_charges[i]), log.length(self._c_radii[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_charges(self):
 */
      __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_charge); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_charges), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_length); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_radii), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_4, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_1 = 0;
      __pyx_t_5 = 0;
      __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_s_7i_s_s, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":1698
 *         self._c_radii = radii
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1710
 *                 log('%7i %s %s' % (i, log.charge(self._c_charges[i]), log.length(self._c_radii[i])))
 * 
 *     def _get_charges(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_charges.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_5_get_charges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotEI_4_get_charges[] = "PairPotEI._get_charges(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_5_get_charges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_charges (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI_4_get_charges(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_4_get_charges(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_charges", 0);

  /* "yaff/pes/ext.pyx":1712
 *     def _get_charges(self):
 *         '''The atomic charges'''
 *         return self._c_charges.view()             # <<<<<<<<<<<<<<
 * 
 *     charges = property(_get_charges)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_charges), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1710
 *                 log('%7i %s %s' % (i, log.charge(self._c_charges[i]), log.length(self._c_radii[i])))
 * 
 *     def _get_charges(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_charges.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI._get_charges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1716
 *     charges = property(_get_charges)
 * 
 *     def _get_radii(self):             # <<<<<<<<<<<<<<
 *         '''The atomic radii'''
 *         return self._c_radii.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_7_get_radii(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotEI_6_get_radii[] = "PairPotEI._get_radii(self)\nThe atomic radii";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_7_get_radii(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_radii (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI_6_get_radii(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_6_get_radii(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_radii", 0);

  /* "yaff/pes/ext.pyx":1718
 *     def _get_radii(self):
 *         '''The atomic radii'''
 *         return self._c_radii.view()             # <<<<<<<<<<<<<<
 * 
 *     radii = property(_get_radii)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_radii), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1716
 *     charges = property(_get_charges)
 * 
 *     def _get_radii(self):             # <<<<<<<<<<<<<<
 *         '''The atomic radii'''
 *         return self._c_radii.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI._get_radii", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1722
 *     radii = property(_get_radii)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_ei_get_alpha(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_9_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotEI_8_get_alpha[] = "PairPotEI._get_alpha(self)\nThe alpha parameter in the Ewald summation method";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_9_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_alpha (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI_8_get_alpha(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_8_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_alpha", 0);

  /* "yaff/pes/ext.pyx":1724
 *     def _get_alpha(self):
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_ei_get_alpha(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     alpha = property(_get_alpha)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_ei_get_alpha(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1722
 *     radii = property(_get_radii)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_ei_get_alpha(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI._get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1728
 *     alpha = property(_get_alpha)
 * 
 *     def _get_dielectric(self):             # <<<<<<<<<<<<<<
 *         '''The scalar relative permittivity'''
 *         return pair_pot.pair_data_ei_get_dielectric(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_11_get_dielectric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_9PairPotEI_10_get_dielectric[] = "PairPotEI._get_dielectric(self)\nThe scalar relative permittivity";
static PyObject *__pyx_pw_4yaff_3pes_3ext_9PairPotEI_11_get_dielectric(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_dielectric (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_9PairPotEI_10_get_dielectric(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_9PairPotEI_10_get_dielectric(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_dielectric", 0);

  /* "yaff/pes/ext.pyx":1730
 *     def _get_dielectric(self):
 *         '''The scalar relative permittivity'''
 *         return pair_pot.pair_data_ei_get_dielectric(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     dielectric = property(_get_dielectric)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_ei_get_dielectric(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1728
 *     alpha = property(_get_alpha)
 * 
 *     def _get_dielectric(self):             # <<<<<<<<<<<<<<
 *         '''The scalar relative permittivity'''
 *         return pair_pot.pair_data_ei_get_dielectric(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEI._get_dielectric", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1765
 *     name = 'eidip'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] dipoles, double alpha, double rcut,
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_charges = 0;
  PyArrayObject *__pyx_v_dipoles = 0;
  double __pyx_v_alpha;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  PyArrayObject *__pyx_v_radii = 0;
  PyArrayObject *__pyx_v_radii2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_charges,&__pyx_n_s_dipoles,&__pyx_n_s_alpha,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_radii,&__pyx_n_s_radii2,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1767
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges,
 *                   np.ndarray[double, ndim=2] dipoles, double alpha, double rcut,
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):             # <<<<<<<<<<<<<<
 *         assert charges.flags['C_CONTIGUOUS']
 *         assert dipoles.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((PyArrayObject *)Py_None);
    values[6] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dipoles)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radii);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radii2);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_charges = ((PyArrayObject *)values[0]);
    __pyx_v_dipoles = ((PyArrayObject *)values[1]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_radii = ((PyArrayObject *)values[5]);
    __pyx_v_radii2 = ((PyArrayObject *)values[6]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dipoles), __pyx_ptype_5numpy_ndarray, 1, "dipoles", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_radii), __pyx_ptype_5numpy_ndarray, 1, "radii", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_radii2), __pyx_ptype_5numpy_ndarray, 1, "radii2", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self), __pyx_v_charges, __pyx_v_dipoles, __pyx_v_alpha, __pyx_v_rcut, __pyx_v_tr, __pyx_v_radii, __pyx_v_radii2);

  /* "yaff/pes/ext.pyx":1765
 *     name = 'eidip'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] dipoles, double alpha, double rcut,
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, double __pyx_v_alpha, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, PyArrayObject *__pyx_v_radii, PyArrayObject *__pyx_v_radii2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dipoles;
  __Pyx_Buffer __pyx_pybuffer_dipoles;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_radii;
  __Pyx_Buffer __pyx_pybuffer_radii;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_radii2;
  __Pyx_Buffer __pyx_pybuffer_radii2;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyArrayObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_radii);
  __Pyx_INCREF((PyObject *)__pyx_v_radii2);
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_dipoles.pybuffer.buf = NULL;
  __pyx_pybuffer_dipoles.refcount = 0;
  __pyx_pybuffernd_dipoles.data = NULL;
  __pyx_pybuffernd_dipoles.rcbuffer = &__pyx_pybuffer_dipoles;
  __pyx_pybuffer_radii.pybuffer.buf = NULL;
  __pyx_pybuffer_radii.refcount = 0;
  __pyx_pybuffernd_radii.data = NULL;
  __pyx_pybuffernd_radii.rcbuffer = &__pyx_pybuffer_radii;
  __pyx_pybuffer_radii2.pybuffer.buf = NULL;
  __pyx_pybuffer_radii2.refcount = 0;
  __pyx_pybuffernd_radii2.data = NULL;
  __pyx_pybuffernd_radii2.rcbuffer = &__pyx_pybuffer_radii2;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer, (PyObject*)__pyx_v_dipoles, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_dipoles.diminfo[0].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dipoles.diminfo[0].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_dipoles.diminfo[1].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_dipoles.diminfo[1].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_radii.diminfo[0].strides = __pyx_pybuffernd_radii.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii.diminfo[0].shape = __pyx_pybuffernd_radii.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii2, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_radii2.diminfo[0].strides = __pyx_pybuffernd_radii2.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii2.diminfo[0].shape = __pyx_pybuffernd_radii2.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1768
 *                   np.ndarray[double, ndim=2] dipoles, double alpha, double rcut,
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):
 *         assert charges.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert dipoles.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_charges), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1768; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1768; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1768; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1768; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1769
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):
 *         assert charges.flags['C_CONTIGUOUS']
 *         assert dipoles.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_dipoles), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1769; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1770
 *         assert charges.flags['C_CONTIGUOUS']
 *         assert dipoles.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         #No atomic radii specified, set to point charges
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1771
 *         assert dipoles.flags['C_CONTIGUOUS']
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         #No atomic radii specified, set to point charges
 *         if radii is None: radii = np.zeros( np.shape(charges) )
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1773
 *         self.set_truncation(tr)
 *         #No atomic radii specified, set to point charges
 *         if radii is None: radii = np.zeros( np.shape(charges) )             # <<<<<<<<<<<<<<
 *         #No dipole radii specified, set to point charges
 *         if radii2 is None: radii2 = np.zeros( np.shape(charges) )
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_radii) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_shape); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_v_charges));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_charges));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_charges));
    __pyx_t_6 = PyObject_Call(__pyx_t_5, __pyx_t_1, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = ((PyArrayObject *)__pyx_t_6);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
      }
      __pyx_pybuffernd_radii.diminfo[0].strides = __pyx_pybuffernd_radii.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii.diminfo[0].shape = __pyx_pybuffernd_radii.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_7 = 0;
    __Pyx_DECREF_SET(__pyx_v_radii, ((PyArrayObject *)__pyx_t_6));
    __pyx_t_6 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1775
 *         if radii is None: radii = np.zeros( np.shape(charges) )
 *         #No dipole radii specified, set to point charges
 *         if radii2 is None: radii2 = np.zeros( np.shape(charges) )             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_eidip_init(self._c_pair_pot, <double*>charges.data, <double*>dipoles.data, alpha,
 *                       <double*>radii.data, <double*>radii2.data)
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_radii2) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)__pyx_v_charges));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_v_charges));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_charges));
    __pyx_t_5 = PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_12 = ((PyArrayObject *)__pyx_t_5);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer);
      __pyx_t_8 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_8 < 0)) {
        PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer, (PyObject*)__pyx_v_radii2, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
        }
      }
      __pyx_pybuffernd_radii2.diminfo[0].strides = __pyx_pybuffernd_radii2.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_radii2.diminfo[0].shape = __pyx_pybuffernd_radii2.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_12 = 0;
    __Pyx_DECREF_SET(__pyx_v_radii2, ((PyArrayObject *)__pyx_t_5));
    __pyx_t_5 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":1776
 *         #No dipole radii specified, set to point charges
 *         if radii2 is None: radii2 = np.zeros( np.shape(charges) )
 *         pair_pot.pair_data_eidip_init(self._c_pair_pot, <double*>charges.data, <double*>dipoles.data, alpha,             # <<<<<<<<<<<<<<
 *                       <double*>radii.data, <double*>radii2.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  pair_data_eidip_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_charges->data), ((double *)__pyx_v_dipoles->data), __pyx_v_alpha, ((double *)__pyx_v_radii->data), ((double *)__pyx_v_radii2->data));

  /* "yaff/pes/ext.pyx":1778
 *         pair_pot.pair_data_eidip_init(self._c_pair_pot, <double*>charges.data, <double*>dipoles.data, alpha,
 *                       <double*>radii.data, <double*>radii2.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_charges = charges
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1779
 *                       <double*>radii.data, <double*>radii2.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_charges = charges
 *         self._c_dipoles = dipoles
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1780
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_charges = charges             # <<<<<<<<<<<<<<
 *         self._c_dipoles = dipoles
 *         self._c_radii = radii
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_charges));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_charges));
  __Pyx_GOTREF(__pyx_v_self->_c_charges);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_charges));
  __pyx_v_self->_c_charges = ((PyArrayObject *)__pyx_v_charges);

  /* "yaff/pes/ext.pyx":1781
 *             raise MemoryError()
 *         self._c_charges = charges
 *         self._c_dipoles = dipoles             # <<<<<<<<<<<<<<
 *         self._c_radii = radii
 *         self._c_radii2 = radii2
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_dipoles));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_dipoles));
  __Pyx_GOTREF(__pyx_v_self->_c_dipoles);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_dipoles));
  __pyx_v_self->_c_dipoles = ((PyArrayObject *)__pyx_v_dipoles);

  /* "yaff/pes/ext.pyx":1782
 *         self._c_charges = charges
 *         self._c_dipoles = dipoles
 *         self._c_radii = radii             # <<<<<<<<<<<<<<
 *         self._c_radii2 = radii2
 *         #Put the polarizability tensors in a matrix with shape that is more convenient for energy calculation
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_radii));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_radii));
  __Pyx_GOTREF(__pyx_v_self->_c_radii);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_radii));
  __pyx_v_self->_c_radii = ((PyArrayObject *)__pyx_v_radii);

  /* "yaff/pes/ext.pyx":1783
 *         self._c_dipoles = dipoles
 *         self._c_radii = radii
 *         self._c_radii2 = radii2             # <<<<<<<<<<<<<<
 *         #Put the polarizability tensors in a matrix with shape that is more convenient for energy calculation
 *         #self._c_poltens_i = np.zeros( (np.shape(poltens_i)[0],np.shape(poltens_i)[0]) )
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_radii2));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_radii2));
  __Pyx_GOTREF(__pyx_v_self->_c_radii2);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_radii2));
  __pyx_v_self->_c_radii2 = ((PyArrayObject *)__pyx_v_radii2);

  /* "yaff/pes/ext.pyx":1765
 *     name = 'eidip'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=2] dipoles, double alpha, double rcut,
 *                   Truncation tr=None, np.ndarray[double, ndim=1] radii=None, np.ndarray[double, ndim=1] radii2=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_radii2.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_radii);
  __Pyx_XDECREF((PyObject *)__pyx_v_radii2);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1789
 *         #    self.poltens_i[3*i:3*(i+1) , 3*i:3*(i+1)] = poltens_i[3*i:3*(i+1),:]
 * 
 *     def compute(self, np.ndarray[nlist.neigh_row_type, ndim=1] neighs,             # <<<<<<<<<<<<<<
 *                 np.ndarray[pair_pot.scaling_row_type, ndim=1] stab,
 *                 np.ndarray[double, ndim=2] gpos,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_3compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_2compute[] = "PairPotEIDip.compute(self, ndarray neighs, ndarray stab, ndarray gpos, ndarray vtens, ndarray hess, long nneigh)";
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_3compute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_neighs = 0;
  PyArrayObject *__pyx_v_stab = 0;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  PyArrayObject *__pyx_v_hess = 0;
  long __pyx_v_nneigh;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_neighs,&__pyx_n_s_stab,&__pyx_n_s_gpos,&__pyx_n_s_vtens,&__pyx_n_s_hess,&__pyx_n_s_nneigh,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_neighs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hess)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nneigh)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_neighs = ((PyArrayObject *)values[0]);
    __pyx_v_stab = ((PyArrayObject *)values[1]);
    __pyx_v_gpos = ((PyArrayObject *)values[2]);
    __pyx_v_vtens = ((PyArrayObject *)values[3]);
    __pyx_v_hess = ((PyArrayObject *)values[4]);
    __pyx_v_nneigh = __Pyx_PyInt_As_long(values[5]); if (unlikely((__pyx_v_nneigh == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_neighs), __pyx_ptype_5numpy_ndarray, 1, "neighs", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_stab), __pyx_ptype_5numpy_ndarray, 1, "stab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hess), __pyx_ptype_5numpy_ndarray, 1, "hess", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_2compute(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self), __pyx_v_neighs, __pyx_v_stab, __pyx_v_gpos, __pyx_v_vtens, __pyx_v_hess, __pyx_v_nneigh);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_2compute(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self, PyArrayObject *__pyx_v_neighs, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess, long __pyx_v_nneigh) {
  PyObject *__pyx_v_E = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hess;
  __Pyx_Buffer __pyx_pybuffer_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_neighs;
  __Pyx_Buffer __pyx_pybuffer_neighs;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_stab;
  __Pyx_Buffer __pyx_pybuffer_stab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute", 0);
  __pyx_pybuffer_neighs.pybuffer.buf = NULL;
  __pyx_pybuffer_neighs.refcount = 0;
  __pyx_pybuffernd_neighs.data = NULL;
  __pyx_pybuffernd_neighs.rcbuffer = &__pyx_pybuffer_neighs;
  __pyx_pybuffer_stab.pybuffer.buf = NULL;
  __pyx_pybuffer_stab.refcount = 0;
  __pyx_pybuffernd_stab.data = NULL;
  __pyx_pybuffernd_stab.rcbuffer = &__pyx_pybuffer_stab;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  __pyx_pybuffer_hess.pybuffer.buf = NULL;
  __pyx_pybuffer_hess.refcount = 0;
  __pyx_pybuffernd_hess.data = NULL;
  __pyx_pybuffernd_hess.rcbuffer = &__pyx_pybuffer_hess;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer, (PyObject*)__pyx_v_neighs, &__Pyx_TypeInfo_nn_neigh_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_neighs.diminfo[0].strides = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_neighs.diminfo[0].shape = __pyx_pybuffernd_neighs.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_stab.rcbuffer->pybuffer, (PyObject*)__pyx_v_stab, &__Pyx_TypeInfo_nn_scaling_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_stab.diminfo[0].strides = __pyx_pybuffernd_stab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_stab.diminfo[0].shape = __pyx_pybuffernd_stab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hess.rcbuffer->pybuffer, (PyObject*)__pyx_v_hess, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hess.diminfo[0].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hess.diminfo[0].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hess.diminfo[1].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hess.diminfo[1].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":1797
 *         #TODO: Does this contribute to gpos or vtens?
 *         #TODO: Implement Hessian
 *         if hess is not None:             # <<<<<<<<<<<<<<
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')
 *         log("Computing PairPotEIDip energy and gradient")
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_hess) != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "yaff/pes/ext.pyx":1798
 *         #TODO: Implement Hessian
 *         if hess is not None:
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')             # <<<<<<<<<<<<<<
 *         log("Computing PairPotEIDip energy and gradient")
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)
 */
    __pyx_t_3 = PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_k_tuple__23, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1799
 *         if hess is not None:
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')
 *         log("Computing PairPotEIDip energy and gradient")             # <<<<<<<<<<<<<<
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)
 *         #E += 0.5*np.dot( np.transpose(np.reshape( self._c_dipoles, (-1,) )) , np.dot( self.poltens_i, np.reshape( self._c_dipoles, (-1,) ) ) )
 */
  __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_Call(__pyx_t_3, __pyx_k_tuple__24, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "yaff/pes/ext.pyx":1800
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')
 *         log("Computing PairPotEIDip energy and gradient")
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)             # <<<<<<<<<<<<<<
 *         #E += 0.5*np.dot( np.transpose(np.reshape( self._c_dipoles, (-1,) )) , np.dot( self.poltens_i, np.reshape( self._c_dipoles, (-1,) ) ) )
 *         return E
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)((PyObject*)__pyx_ptype_4yaff_3pes_3ext_PairPot)), __pyx_n_s_compute); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_nneigh); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_INCREF(((PyObject *)__pyx_v_neighs));
  PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_v_neighs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_neighs));
  __Pyx_INCREF(((PyObject *)__pyx_v_stab));
  PyTuple_SET_ITEM(__pyx_t_5, 2, ((PyObject *)__pyx_v_stab));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_stab));
  __Pyx_INCREF(((PyObject *)__pyx_v_gpos));
  PyTuple_SET_ITEM(__pyx_t_5, 3, ((PyObject *)__pyx_v_gpos));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_gpos));
  __Pyx_INCREF(((PyObject *)__pyx_v_vtens));
  PyTuple_SET_ITEM(__pyx_t_5, 4, ((PyObject *)__pyx_v_vtens));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_vtens));
  __Pyx_INCREF(((PyObject *)__pyx_v_hess));
  PyTuple_SET_ITEM(__pyx_t_5, 5, ((PyObject *)__pyx_v_hess));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_hess));
  PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_E = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "yaff/pes/ext.pyx":1802
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)
 *         #E += 0.5*np.dot( np.transpose(np.reshape( self._c_dipoles, (-1,) )) , np.dot( self.poltens_i, np.reshape( self._c_dipoles, (-1,) ) ) )
 *         return E             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_E);
  __pyx_r = __pyx_v_E;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1789
 *         #    self.poltens_i[3*i:3*(i+1) , 3*i:3*(i+1)] = poltens_i[3*i:3*(i+1),:]
 * 
 *     def compute(self, np.ndarray[nlist.neigh_row_type, ndim=1] neighs,             # <<<<<<<<<<<<<<
 *                 np.ndarray[pair_pot.scaling_row_type, ndim=1] stab,
 *                 np.ndarray[double, ndim=2] gpos,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip.compute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_neighs.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_E);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1804
 *         return E
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_5log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_4log[] = "PairPotEIDip.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_5log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_4log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_4log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1806
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1807
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1808
 *         if log.do_high:
 *             log.hline()
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__25, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1809
 *             log.hline()
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1810
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\
 *                 log.charge(self._c_dipoles[i,0]), log.charge(self._c_dipoles[i,1]),log.charge(self._c_dipoles[i,2]),\
 */
    __pyx_t_4 = (__pyx_v_self->_c_charges->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":1811
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\             # <<<<<<<<<<<<<<
 *                 log.charge(self._c_dipoles[i,0]), log.charge(self._c_dipoles[i,1]),log.charge(self._c_dipoles[i,2]),\
 *                 log.length(self._c_radii2[i])))
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_charges), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_radii), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "yaff/pes/ext.pyx":1812
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\
 *                 log.charge(self._c_dipoles[i,0]), log.charge(self._c_dipoles[i,1]),log.charge(self._c_dipoles[i,2]),\             # <<<<<<<<<<<<<<
 *                 log.length(self._c_radii2[i])))
 * 
 */
      __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __Pyx_INCREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_dipoles), __pyx_t_10); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_int_1);
      PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      __pyx_t_10 = 0;
      __pyx_t_10 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_dipoles), __pyx_t_11); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_t_10 = PyObject_Call(__pyx_t_7, __pyx_t_11, NULL); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_11);
      __Pyx_INCREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      __pyx_t_11 = 0;
      __pyx_t_11 = PyObject_GetItem(((PyObject *)__pyx_v_self->_c_dipoles), __pyx_t_12); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_11);
      __pyx_t_11 = 0;
      __pyx_t_11 = PyObject_Call(__pyx_t_7, __pyx_t_12, NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "yaff/pes/ext.pyx":1813
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\
 *                 log.charge(self._c_dipoles[i,0]), log.charge(self._c_dipoles[i,1]),log.charge(self._c_dipoles[i,2]),\
 *                 log.length(self._c_radii2[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_charges(self):
 */
      __pyx_t_12 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_radii2), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_12 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = PyTuple_New(1); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_12);
      __pyx_t_12 = 0;
      __pyx_t_12 = PyObject_Call(__pyx_t_7, __pyx_t_13, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

      /* "yaff/pes/ext.pyx":1811
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 *                 log('%4i %s %s %s %s %s %s' % (i, log.charge(self._c_charges[i]),log.length(self._c_radii[i]),\             # <<<<<<<<<<<<<<
 *                 log.charge(self._c_dipoles[i,0]), log.charge(self._c_dipoles[i,1]),log.charge(self._c_dipoles[i,2]),\
 *                 log.length(self._c_radii2[i])))
 */
      __pyx_t_13 = PyTuple_New(7); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_13, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_13, 3, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_13, 4, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_13, 5, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_13, 6, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_12);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      __pyx_t_12 = 0;
      __pyx_t_12 = PyNumber_Remainder(__pyx_kp_s_4i_s_s_s_s_s_s, __pyx_t_13); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyTuple_New(1); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_12);
      __pyx_t_12 = 0;
      __pyx_t_12 = PyObject_Call(__pyx_t_1, __pyx_t_13, NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1804
 *         return E
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1815
 *                 log.length(self._c_radii2[i])))
 * 
 *     def _get_charges(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_charges.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_7_get_charges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_6_get_charges[] = "PairPotEIDip._get_charges(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_7_get_charges(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_charges (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_6_get_charges(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_6_get_charges(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_charges", 0);

  /* "yaff/pes/ext.pyx":1817
 *     def _get_charges(self):
 *         '''The atomic charges'''
 *         return self._c_charges.view()             # <<<<<<<<<<<<<<
 * 
 *     charges = property(_get_charges)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_charges), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1815
 *                 log.length(self._c_radii2[i])))
 * 
 *     def _get_charges(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_charges.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip._get_charges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1821
 *     charges = property(_get_charges)
 * 
 *     def _get_dipoles(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_dipoles.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_9_get_dipoles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_8_get_dipoles[] = "PairPotEIDip._get_dipoles(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_9_get_dipoles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_dipoles (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_8_get_dipoles(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_8_get_dipoles(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_dipoles", 0);

  /* "yaff/pes/ext.pyx":1823
 *     def _get_dipoles(self):
 *         '''The atomic charges'''
 *         return self._c_dipoles.view()             # <<<<<<<<<<<<<<
 * 
 *     dipoles = property(_get_dipoles)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_dipoles), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1821
 *     charges = property(_get_charges)
 * 
 *     def _get_dipoles(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_dipoles.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip._get_dipoles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1827
 *     dipoles = property(_get_dipoles)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_11_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_10_get_alpha[] = "PairPotEIDip._get_alpha(self)\nThe alpha parameter in the Ewald summation method";
static PyObject *__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_11_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_alpha (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_10_get_alpha(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_12PairPotEIDip_10_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_alpha", 0);

  /* "yaff/pes/ext.pyx":1829
 *     def _get_alpha(self):
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     alpha = property(_get_alpha)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_eidip_get_alpha(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1827
 *     dipoles = property(_get_dipoles)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEIDip._get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1865
 *     name = 'eislater1s1scorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_slater1s_widths = 0;
  PyArrayObject *__pyx_v_slater1s_N = 0;
  PyArrayObject *__pyx_v_slater1s_Z = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_slater1s_widths,&__pyx_n_s_slater1s_N,&__pyx_n_s_slater1s_Z,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1867
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):             # <<<<<<<<<<<<<<
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_widths)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_Z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_slater1s_widths = ((PyArrayObject *)values[0]);
    __pyx_v_slater1s_N = ((PyArrayObject *)values[1]);
    __pyx_v_slater1s_Z = ((PyArrayObject *)values[2]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1867; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_widths), __pyx_ptype_5numpy_ndarray, 1, "slater1s_widths", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_N), __pyx_ptype_5numpy_ndarray, 1, "slater1s_N", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_Z), __pyx_ptype_5numpy_ndarray, 1, "slater1s_Z", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self), __pyx_v_slater1s_widths, __pyx_v_slater1s_N, __pyx_v_slater1s_Z, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw);

  /* "yaff/pes/ext.pyx":1865
 *     name = 'eislater1s1scorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, PyArrayObject *__pyx_v_slater1s_Z, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_N;
  __Pyx_Buffer __pyx_pybuffer_slater1s_N;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_Z;
  __Pyx_Buffer __pyx_pybuffer_slater1s_Z;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_widths;
  __Pyx_Buffer __pyx_pybuffer_slater1s_widths;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_slater1s_widths.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_widths.refcount = 0;
  __pyx_pybuffernd_slater1s_widths.data = NULL;
  __pyx_pybuffernd_slater1s_widths.rcbuffer = &__pyx_pybuffer_slater1s_widths;
  __pyx_pybuffer_slater1s_N.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_N.refcount = 0;
  __pyx_pybuffernd_slater1s_N.data = NULL;
  __pyx_pybuffernd_slater1s_N.rcbuffer = &__pyx_pybuffer_slater1s_N;
  __pyx_pybuffer_slater1s_Z.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_Z.refcount = 0;
  __pyx_pybuffernd_slater1s_Z.data = NULL;
  __pyx_pybuffernd_slater1s_Z.rcbuffer = &__pyx_pybuffer_slater1s_Z;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_widths, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_widths.diminfo[0].strides = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_widths.diminfo[0].shape = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_N, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_N.diminfo[0].strides = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_N.diminfo[0].shape = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_Z, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_Z.diminfo[0].strides = __pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_Z.diminfo[0].shape = __pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":1868
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_widths), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1868; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1868; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1869
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_N), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1869; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1870
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         assert slater1s_Z.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_Z), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1872
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1873
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_eislater1s1scorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data)
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1874
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_eislater1s1scorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1875
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_eislater1s1scorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_eislater1s1scorr_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_slater1s_widths->data), ((double *)__pyx_v_slater1s_N->data), ((double *)__pyx_v_slater1s_Z->data));

  /* "yaff/pes/ext.pyx":1876
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_eislater1s1scorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1877
 *         pair_pot.pair_data_eislater1s1scorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1878
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths             # <<<<<<<<<<<<<<
 *         self._c_slater1s_N = slater1s_N
 *         self._c_slater1s_Z = slater1s_Z
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_widths);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_widths));
  __pyx_v_self->_c_slater1s_widths = ((PyArrayObject *)__pyx_v_slater1s_widths);

  /* "yaff/pes/ext.pyx":1879
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N             # <<<<<<<<<<<<<<
 *         self._c_slater1s_Z = slater1s_Z
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_N);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_N));
  __pyx_v_self->_c_slater1s_N = ((PyArrayObject *)__pyx_v_slater1s_N);

  /* "yaff/pes/ext.pyx":1880
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 *         self._c_slater1s_Z = slater1s_Z             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_Z));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_Z));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_Z);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_Z));
  __pyx_v_self->_c_slater1s_Z = ((PyArrayObject *)__pyx_v_slater1s_Z);

  /* "yaff/pes/ext.pyx":1865
 *     name = 'eislater1s1scorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1882
 *         self._c_slater1s_Z = slater1s_Z
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_2log[] = "PairPotEiSlater1s1sCorr.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1884
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1885
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1885; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1885; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1885; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1886
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__26, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1887
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1888
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_c_slater1s_widths->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":1889
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_widths(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_Z), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(4); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Remainder(__pyx_kp_s_7i_s_s_s, __pyx_t_10); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_1, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1882
 *         self._c_slater1s_Z = slater1s_Z
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1891
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_4_get_slater1s_widths[] = "PairPotEiSlater1s1sCorr._get_slater1s_widths(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_widths (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_4_get_slater1s_widths(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_widths", 0);

  /* "yaff/pes/ext.pyx":1893
 *     def _get_slater1s_widths(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_widths = property(_get_slater1s_widths)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1891
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr._get_slater1s_widths", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1897
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_6_get_slater1s_N[] = "PairPotEiSlater1s1sCorr._get_slater1s_N(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_6_get_slater1s_N(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_N", 0);

  /* "yaff/pes/ext.pyx":1899
 *     def _get_slater1s_N(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_N = property(_get_slater1s_N)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1899; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1899; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1897
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr._get_slater1s_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1903
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_slater1s_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_9_get_slater1s_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_8_get_slater1s_Z[] = "PairPotEiSlater1s1sCorr._get_slater1s_Z(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_9_get_slater1s_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_Z (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_8_get_slater1s_Z(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_8_get_slater1s_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_Z", 0);

  /* "yaff/pes/ext.pyx":1905
 *     def _get_slater1s_Z(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_Z = property(_get_slater1s_Z)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_Z), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1905; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1905; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1903
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_slater1s_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1s1sCorr._get_slater1s_Z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1954
 *     name = 'eislater1sp1spcorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   np.ndarray[double, ndim=2] slater1p_widths, np.ndarray[double, ndim=2] slater1p_N,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_slater1s_widths = 0;
  PyArrayObject *__pyx_v_slater1s_N = 0;
  PyArrayObject *__pyx_v_slater1s_Z = 0;
  PyArrayObject *__pyx_v_slater1p_widths = 0;
  PyArrayObject *__pyx_v_slater1p_N = 0;
  PyArrayObject *__pyx_v_slater1p_Z = 0;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_slater1s_widths,&__pyx_n_s_slater1s_N,&__pyx_n_s_slater1s_Z,&__pyx_n_s_slater1p_widths,&__pyx_n_s_slater1p_N,&__pyx_n_s_slater1p_Z,&__pyx_n_s_rcut,&__pyx_n_s_tr,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":1957
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   np.ndarray[double, ndim=2] slater1p_widths, np.ndarray[double, ndim=2] slater1p_N,
 *                   np.ndarray[double, ndim=2] slater1p_Z, double rcut, Truncation tr=None):             # <<<<<<<<<<<<<<
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 */
    values[7] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_widths)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_Z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1p_widths)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1p_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1p_Z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_slater1s_widths = ((PyArrayObject *)values[0]);
    __pyx_v_slater1s_N = ((PyArrayObject *)values[1]);
    __pyx_v_slater1s_Z = ((PyArrayObject *)values[2]);
    __pyx_v_slater1p_widths = ((PyArrayObject *)values[3]);
    __pyx_v_slater1p_N = ((PyArrayObject *)values[4]);
    __pyx_v_slater1p_Z = ((PyArrayObject *)values[5]);
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1957; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[7]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 7, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_widths), __pyx_ptype_5numpy_ndarray, 1, "slater1s_widths", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_N), __pyx_ptype_5numpy_ndarray, 1, "slater1s_N", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_Z), __pyx_ptype_5numpy_ndarray, 1, "slater1s_Z", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1p_widths), __pyx_ptype_5numpy_ndarray, 1, "slater1p_widths", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1p_N), __pyx_ptype_5numpy_ndarray, 1, "slater1p_N", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1p_Z), __pyx_ptype_5numpy_ndarray, 1, "slater1p_Z", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self), __pyx_v_slater1s_widths, __pyx_v_slater1s_N, __pyx_v_slater1s_Z, __pyx_v_slater1p_widths, __pyx_v_slater1p_N, __pyx_v_slater1p_Z, __pyx_v_rcut, __pyx_v_tr);

  /* "yaff/pes/ext.pyx":1954
 *     name = 'eislater1sp1spcorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   np.ndarray[double, ndim=2] slater1p_widths, np.ndarray[double, ndim=2] slater1p_N,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, PyArrayObject *__pyx_v_slater1s_Z, PyArrayObject *__pyx_v_slater1p_widths, PyArrayObject *__pyx_v_slater1p_N, PyArrayObject *__pyx_v_slater1p_Z, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1p_N;
  __Pyx_Buffer __pyx_pybuffer_slater1p_N;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1p_Z;
  __Pyx_Buffer __pyx_pybuffer_slater1p_Z;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1p_widths;
  __Pyx_Buffer __pyx_pybuffer_slater1p_widths;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_N;
  __Pyx_Buffer __pyx_pybuffer_slater1s_N;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_Z;
  __Pyx_Buffer __pyx_pybuffer_slater1s_Z;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_widths;
  __Pyx_Buffer __pyx_pybuffer_slater1s_widths;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_slater1s_widths.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_widths.refcount = 0;
  __pyx_pybuffernd_slater1s_widths.data = NULL;
  __pyx_pybuffernd_slater1s_widths.rcbuffer = &__pyx_pybuffer_slater1s_widths;
  __pyx_pybuffer_slater1s_N.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_N.refcount = 0;
  __pyx_pybuffernd_slater1s_N.data = NULL;
  __pyx_pybuffernd_slater1s_N.rcbuffer = &__pyx_pybuffer_slater1s_N;
  __pyx_pybuffer_slater1s_Z.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_Z.refcount = 0;
  __pyx_pybuffernd_slater1s_Z.data = NULL;
  __pyx_pybuffernd_slater1s_Z.rcbuffer = &__pyx_pybuffer_slater1s_Z;
  __pyx_pybuffer_slater1p_widths.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1p_widths.refcount = 0;
  __pyx_pybuffernd_slater1p_widths.data = NULL;
  __pyx_pybuffernd_slater1p_widths.rcbuffer = &__pyx_pybuffer_slater1p_widths;
  __pyx_pybuffer_slater1p_N.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1p_N.refcount = 0;
  __pyx_pybuffernd_slater1p_N.data = NULL;
  __pyx_pybuffernd_slater1p_N.rcbuffer = &__pyx_pybuffer_slater1p_N;
  __pyx_pybuffer_slater1p_Z.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1p_Z.refcount = 0;
  __pyx_pybuffernd_slater1p_Z.data = NULL;
  __pyx_pybuffernd_slater1p_Z.rcbuffer = &__pyx_pybuffer_slater1p_Z;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_widths, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_widths.diminfo[0].strides = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_widths.diminfo[0].shape = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_N, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_N.diminfo[0].strides = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_N.diminfo[0].shape = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_Z, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_Z.diminfo[0].strides = __pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_Z.diminfo[0].shape = __pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1p_widths, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1p_widths.diminfo[0].strides = __pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1p_widths.diminfo[0].shape = __pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_slater1p_widths.diminfo[1].strides = __pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_slater1p_widths.diminfo[1].shape = __pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1p_N, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1p_N.diminfo[0].strides = __pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1p_N.diminfo[0].shape = __pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_slater1p_N.diminfo[1].strides = __pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_slater1p_N.diminfo[1].shape = __pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1p_Z, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1p_Z.diminfo[0].strides = __pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1p_Z.diminfo[0].shape = __pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_slater1p_Z.diminfo[1].strides = __pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_slater1p_Z.diminfo[1].shape = __pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":1958
 *                   np.ndarray[double, ndim=2] slater1p_widths, np.ndarray[double, ndim=2] slater1p_N,
 *                   np.ndarray[double, ndim=2] slater1p_Z, double rcut, Truncation tr=None):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_widths), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1958; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1958; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1959
 *                   np.ndarray[double, ndim=2] slater1p_Z, double rcut, Truncation tr=None):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 *         assert slater1p_widths.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_N), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1959; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1959; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1960
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         assert slater1s_Z.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1p_widths.flags['C_CONTIGUOUS']
 *         assert slater1p_N.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_Z), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1960; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1961
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 *         assert slater1p_widths.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1p_N.flags['C_CONTIGUOUS']
 *         assert slater1p_Z.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1p_widths), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1962
 *         assert slater1s_Z.flags['C_CONTIGUOUS']
 *         assert slater1p_widths.flags['C_CONTIGUOUS']
 *         assert slater1p_N.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1p_Z.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1p_N), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1962; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1963
 *         assert slater1p_widths.flags['C_CONTIGUOUS']
 *         assert slater1p_N.flags['C_CONTIGUOUS']
 *         assert slater1p_Z.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1p_Z), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":1965
 *         assert slater1p_Z.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         pair_pot.pair_data_eislater1sp1spcorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data,
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":1966
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_eislater1sp1spcorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data,
 *                                                    <double*>slater1p_widths.data, <double*>slater1p_N.data, <double*>slater1p_Z.data)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":1967
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         pair_pot.pair_data_eislater1sp1spcorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data,             # <<<<<<<<<<<<<<
 *                                                    <double*>slater1p_widths.data, <double*>slater1p_N.data, <double*>slater1p_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  pair_data_eislater1sp1spcorr_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_slater1s_widths->data), ((double *)__pyx_v_slater1s_N->data), ((double *)__pyx_v_slater1s_Z->data), ((double *)__pyx_v_slater1p_widths->data), ((double *)__pyx_v_slater1p_N->data), ((double *)__pyx_v_slater1p_Z->data));

  /* "yaff/pes/ext.pyx":1969
 *         pair_pot.pair_data_eislater1sp1spcorr_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  <double*>slater1s_Z.data,
 *                                                    <double*>slater1p_widths.data, <double*>slater1p_N.data, <double*>slater1p_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1970
 *                                                    <double*>slater1p_widths.data, <double*>slater1p_N.data, <double*>slater1p_Z.data)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":1971
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths             # <<<<<<<<<<<<<<
 *         self._c_slater1s_N = slater1s_N
 *         self._c_slater1s_Z = slater1s_Z
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_widths);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_widths));
  __pyx_v_self->_c_slater1s_widths = ((PyArrayObject *)__pyx_v_slater1s_widths);

  /* "yaff/pes/ext.pyx":1972
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N             # <<<<<<<<<<<<<<
 *         self._c_slater1s_Z = slater1s_Z
 *         self._c_slater1p_widths = slater1p_widths
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_N);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_N));
  __pyx_v_self->_c_slater1s_N = ((PyArrayObject *)__pyx_v_slater1s_N);

  /* "yaff/pes/ext.pyx":1973
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 *         self._c_slater1s_Z = slater1s_Z             # <<<<<<<<<<<<<<
 *         self._c_slater1p_widths = slater1p_widths
 *         self._c_slater1p_N = slater1p_N
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_Z));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_Z));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_Z);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_Z));
  __pyx_v_self->_c_slater1s_Z = ((PyArrayObject *)__pyx_v_slater1s_Z);

  /* "yaff/pes/ext.pyx":1974
 *         self._c_slater1s_N = slater1s_N
 *         self._c_slater1s_Z = slater1s_Z
 *         self._c_slater1p_widths = slater1p_widths             # <<<<<<<<<<<<<<
 *         self._c_slater1p_N = slater1p_N
 *         self._c_slater1p_Z = slater1p_Z
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1p_widths));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1p_widths));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1p_widths);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1p_widths));
  __pyx_v_self->_c_slater1p_widths = ((PyArrayObject *)__pyx_v_slater1p_widths);

  /* "yaff/pes/ext.pyx":1975
 *         self._c_slater1s_Z = slater1s_Z
 *         self._c_slater1p_widths = slater1p_widths
 *         self._c_slater1p_N = slater1p_N             # <<<<<<<<<<<<<<
 *         self._c_slater1p_Z = slater1p_Z
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1p_N));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1p_N));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1p_N);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1p_N));
  __pyx_v_self->_c_slater1p_N = ((PyArrayObject *)__pyx_v_slater1p_N);

  /* "yaff/pes/ext.pyx":1976
 *         self._c_slater1p_widths = slater1p_widths
 *         self._c_slater1p_N = slater1p_N
 *         self._c_slater1p_Z = slater1p_Z             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1p_Z));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1p_Z));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1p_Z);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1p_Z));
  __pyx_v_self->_c_slater1p_Z = ((PyArrayObject *)__pyx_v_slater1p_Z);

  /* "yaff/pes/ext.pyx":1954
 *     name = 'eislater1sp1spcorr'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, np.ndarray[double, ndim=1] slater1s_Z,
 *                   np.ndarray[double, ndim=2] slater1p_widths, np.ndarray[double, ndim=2] slater1p_N,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_N.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_Z.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1p_widths.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_Z.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1979
 * 
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_2log[] = "PairPotEiSlater1sp1spCorr.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  npy_intp __pyx_t_4;
  npy_intp __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":1981
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":1982
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":1983
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__27, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1984
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1984; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":1985
 *             log('   Atom  Slater charge  Core charge   Slater width')
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_c_slater1s_widths->dimensions[0]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "yaff/pes/ext.pyx":1986
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_widths(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_Z), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_7, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(4); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_10, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_10, 3, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_8 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Remainder(__pyx_kp_s_7i_s_s_s, __pyx_t_10); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_t_1, __pyx_t_10, NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":1979
 * 
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_high:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1988
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_4_get_slater1s_widths[] = "PairPotEiSlater1sp1spCorr._get_slater1s_widths(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_widths (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_4_get_slater1s_widths(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_widths", 0);

  /* "yaff/pes/ext.pyx":1990
 *     def _get_slater1s_widths(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_widths = property(_get_slater1s_widths)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1988
 *                 log('%7i     %s   %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.charge(self._c_slater1s_Z[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1s_widths", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":1994
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_6_get_slater1s_N[] = "PairPotEiSlater1sp1spCorr._get_slater1s_N(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_6_get_slater1s_N(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_N", 0);

  /* "yaff/pes/ext.pyx":1996
 *     def _get_slater1s_N(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_N = property(_get_slater1s_N)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":1994
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1s_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2000
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_slater1s_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_9_get_slater1s_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_8_get_slater1s_Z[] = "PairPotEiSlater1sp1spCorr._get_slater1s_Z(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_9_get_slater1s_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_Z (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_8_get_slater1s_Z(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_8_get_slater1s_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_Z", 0);

  /* "yaff/pes/ext.pyx":2002
 *     def _get_slater1s_Z(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_Z = property(_get_slater1s_Z)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_Z), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2000
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_slater1s_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_Z.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1s_Z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2006
 *     slater1s_Z = property(_get_slater1s_Z)
 * 
 *     def _get_slater1p_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_widths.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_11_get_slater1p_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_10_get_slater1p_widths[] = "PairPotEiSlater1sp1spCorr._get_slater1p_widths(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_11_get_slater1p_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1p_widths (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_10_get_slater1p_widths(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_10_get_slater1p_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1p_widths", 0);

  /* "yaff/pes/ext.pyx":2008
 *     def _get_slater1p_widths(self):
 *         '''The atomic charges'''
 *         return self._c_slater1p_widths.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1p_widths = property(_get_slater1p_widths)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1p_widths), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2006
 *     slater1s_Z = property(_get_slater1s_Z)
 * 
 *     def _get_slater1p_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_widths.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1p_widths", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2012
 *     slater1p_widths = property(_get_slater1p_widths)
 * 
 *     def _get_slater1p_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_N.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_13_get_slater1p_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_12_get_slater1p_N[] = "PairPotEiSlater1sp1spCorr._get_slater1p_N(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_13_get_slater1p_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1p_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_12_get_slater1p_N(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_12_get_slater1p_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1p_N", 0);

  /* "yaff/pes/ext.pyx":2014
 *     def _get_slater1p_N(self):
 *         '''The atomic charges'''
 *         return self._c_slater1p_N.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1p_N = property(_get_slater1p_N)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1p_N), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2012
 *     slater1p_widths = property(_get_slater1p_widths)
 * 
 *     def _get_slater1p_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_N.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1p_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2018
 *     slater1p_N = property(_get_slater1p_N)
 * 
 *     def _get_slater1p_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_Z.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_15_get_slater1p_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_14_get_slater1p_Z[] = "PairPotEiSlater1sp1spCorr._get_slater1p_Z(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_15_get_slater1p_Z(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1p_Z (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_14_get_slater1p_Z(((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_14_get_slater1p_Z(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1p_Z", 0);

  /* "yaff/pes/ext.pyx":2020
 *     def _get_slater1p_Z(self):
 *         '''The atomic charges'''
 *         return self._c_slater1p_Z.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1p_Z = property(_get_slater1p_Z)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1p_Z), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2020; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2018
 *     slater1p_N = property(_get_slater1p_N)
 * 
 *     def _get_slater1p_Z(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1p_Z.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotEiSlater1sp1spCorr._get_slater1p_Z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2066
 *     name = 'olpslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ex_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_slater1s_widths = 0;
  PyArrayObject *__pyx_v_slater1s_N = 0;
  double __pyx_v_ex_scale;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  double __pyx_v_corr_a;
  double __pyx_v_corr_b;
  double __pyx_v_corr_c;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_slater1s_widths,&__pyx_n_s_slater1s_N,&__pyx_n_s_ex_scale,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,&__pyx_n_s_corr_a,&__pyx_n_s_corr_b,&__pyx_n_s_corr_c,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":2068
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 *                   np.ndarray[double, ndim=1] slater1s_N, double ex_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,             # <<<<<<<<<<<<<<
 *                   double corr_a=0.0, double corr_b=0.0, double corr_c=0.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_widths)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ex_scale)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_corr_a);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_corr_b);
          if (value) { values[7] = value; kw_args--; }
        }
        case  8:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_corr_c);
          if (value) { values[8] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_slater1s_widths = ((PyArrayObject *)values[0]);
    __pyx_v_slater1s_N = ((PyArrayObject *)values[1]);
    __pyx_v_ex_scale = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_ex_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2067; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2068; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
    if (values[6]) {
      __pyx_v_corr_a = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_corr_a == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_corr_a = ((double)0.0);
    }
    if (values[7]) {
      __pyx_v_corr_b = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_corr_b == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_corr_b = ((double)0.0);
    }
    if (values[8]) {
      __pyx_v_corr_c = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_corr_c == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_corr_c = ((double)0.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 9, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_widths), __pyx_ptype_5numpy_ndarray, 1, "slater1s_widths", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_N), __pyx_ptype_5numpy_ndarray, 1, "slater1s_N", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self), __pyx_v_slater1s_widths, __pyx_v_slater1s_N, __pyx_v_ex_scale, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw, __pyx_v_corr_a, __pyx_v_corr_b, __pyx_v_corr_c);

  /* "yaff/pes/ext.pyx":2066
 *     name = 'olpslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ex_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, double __pyx_v_ex_scale, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, double __pyx_v_corr_a, double __pyx_v_corr_b, double __pyx_v_corr_c) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_N;
  __Pyx_Buffer __pyx_pybuffer_slater1s_N;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_widths;
  __Pyx_Buffer __pyx_pybuffer_slater1s_widths;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_slater1s_widths.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_widths.refcount = 0;
  __pyx_pybuffernd_slater1s_widths.data = NULL;
  __pyx_pybuffernd_slater1s_widths.rcbuffer = &__pyx_pybuffer_slater1s_widths;
  __pyx_pybuffer_slater1s_N.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_N.refcount = 0;
  __pyx_pybuffernd_slater1s_N.data = NULL;
  __pyx_pybuffernd_slater1s_N.rcbuffer = &__pyx_pybuffer_slater1s_N;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_widths, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_widths.diminfo[0].strides = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_widths.diminfo[0].shape = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_N, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_N.diminfo[0].strides = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_N.diminfo[0].shape = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2070
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   double corr_a=0.0, double corr_b=0.0, double corr_c=0.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_widths), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2070; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2071
 *                   double corr_a=0.0, double corr_b=0.0, double corr_c=0.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_N), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2073
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":2074
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_olpslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  ex_scale, corr_a, corr_b, corr_c)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2074; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":2075
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_olpslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  ex_scale, corr_a, corr_b, corr_c)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2075; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":2076
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_olpslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  ex_scale, corr_a, corr_b, corr_c)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_olpslater1s1s_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_slater1s_widths->data), ((double *)__pyx_v_slater1s_N->data), __pyx_v_ex_scale, __pyx_v_corr_a, __pyx_v_corr_b, __pyx_v_corr_c);

  /* "yaff/pes/ext.pyx":2077
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_olpslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  ex_scale, corr_a, corr_b, corr_c)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2078
 *         pair_pot.pair_data_olpslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data,  ex_scale, corr_a, corr_b, corr_c)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":2079
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths             # <<<<<<<<<<<<<<
 *         self._c_slater1s_N = slater1s_N
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_widths);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_widths));
  __pyx_v_self->_c_slater1s_widths = ((PyArrayObject *)__pyx_v_slater1s_widths);

  /* "yaff/pes/ext.pyx":2080
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_N);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_N));
  __pyx_v_self->_c_slater1s_N = ((PyArrayObject *)__pyx_v_slater1s_N);

  /* "yaff/pes/ext.pyx":2066
 *     name = 'olpslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ex_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2082
 *         self._c_slater1s_N = slater1s_N
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_2log[] = "PairPotOlpSlater1s1s.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  npy_intp __pyx_t_5;
  npy_intp __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":2084
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:             # <<<<<<<<<<<<<<
 *             log('  ex_scale:             %s' % ("%10.5f"%self.ex_scale))
 *             log('  corr_a:             %s' % ("%10.5f"%self.corr_a))
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_medium); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2085
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 *             log('  ex_scale:             %s' % ("%10.5f"%self.ex_scale))             # <<<<<<<<<<<<<<
 *             log('  corr_a:             %s' % ("%10.5f"%self.corr_a))
 *             log('  corr_b:             %s' % ("%10.5f"%self.corr_b))
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_ex_scale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_ex_scale_s, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2085; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":2086
 *         if log.do_medium:
 *             log('  ex_scale:             %s' % ("%10.5f"%self.ex_scale))
 *             log('  corr_a:             %s' % ("%10.5f"%self.corr_a))             # <<<<<<<<<<<<<<
 *             log('  corr_b:             %s' % ("%10.5f"%self.corr_b))
 *             log('  corr_c:             %s' % ("%10.5f"%self.corr_c))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_corr_a); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_corr_a_s, __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":2087
 *             log('  ex_scale:             %s' % ("%10.5f"%self.ex_scale))
 *             log('  corr_a:             %s' % ("%10.5f"%self.corr_a))
 *             log('  corr_b:             %s' % ("%10.5f"%self.corr_b))             # <<<<<<<<<<<<<<
 *             log('  corr_c:             %s' % ("%10.5f"%self.corr_c))
 *         if log.do_high:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_corr_b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_corr_b_s, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":2088
 *             log('  corr_a:             %s' % ("%10.5f"%self.corr_a))
 *             log('  corr_b:             %s' % ("%10.5f"%self.corr_b))
 *             log('  corr_c:             %s' % ("%10.5f"%self.corr_c))             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_corr_c); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_corr_c_s, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2089
 *             log('  corr_b:             %s' % ("%10.5f"%self.corr_b))
 *             log('  corr_c:             %s' % ("%10.5f"%self.corr_c))
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_high); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2090
 *             log('  corr_c:             %s' % ("%10.5f"%self.corr_c))
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":2091
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_k_tuple__28, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":2092
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_hline); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_4, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":2093
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 */
    __pyx_t_5 = (__pyx_v_self->_c_slater1s_widths->dimensions[0]);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "yaff/pes/ext.pyx":2094
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_widths(self):
 */
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_4 = 0;
      __pyx_t_2 = 0;
      __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_s_7i_s_s_2, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_1, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2094; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2082
 *         self._c_slater1s_N = slater1s_N
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2096
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_4_get_slater1s_widths[] = "PairPotOlpSlater1s1s._get_slater1s_widths(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_widths (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_4_get_slater1s_widths(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_widths", 0);

  /* "yaff/pes/ext.pyx":2098
 *     def _get_slater1s_widths(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_widths = property(_get_slater1s_widths)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2096
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_slater1s_widths", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2102
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_6_get_slater1s_N[] = "PairPotOlpSlater1s1s._get_slater1s_N(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_6_get_slater1s_N(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_N", 0);

  /* "yaff/pes/ext.pyx":2104
 *     def _get_slater1s_N(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_N = property(_get_slater1s_N)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2102
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_slater1s_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2108
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_ex_scale(self):             # <<<<<<<<<<<<<<
 *         '''The ex_scale parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_ex_scale(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_9_get_ex_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_8_get_ex_scale[] = "PairPotOlpSlater1s1s._get_ex_scale(self)\nThe ex_scale parameter in the exchange energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_9_get_ex_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_ex_scale (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_8_get_ex_scale(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_8_get_ex_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_ex_scale", 0);

  /* "yaff/pes/ext.pyx":2110
 *     def _get_ex_scale(self):
 *         '''The ex_scale parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_ex_scale(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     ex_scale = property(_get_ex_scale)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_olpslater1s1s_get_ex_scale(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2108
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_ex_scale(self):             # <<<<<<<<<<<<<<
 *         '''The ex_scale parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_ex_scale(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_ex_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2114
 *     ex_scale = property(_get_ex_scale)
 * 
 *     def _get_corr_a(self):             # <<<<<<<<<<<<<<
 *         '''The corr_a parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_a(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_11_get_corr_a(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_10_get_corr_a[] = "PairPotOlpSlater1s1s._get_corr_a(self)\nThe corr_a parameter in the exchange energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_11_get_corr_a(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_corr_a (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_10_get_corr_a(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_10_get_corr_a(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_corr_a", 0);

  /* "yaff/pes/ext.pyx":2116
 *     def _get_corr_a(self):
 *         '''The corr_a parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_a(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     corr_a = property(_get_corr_a)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_olpslater1s1s_get_corr_a(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2114
 *     ex_scale = property(_get_ex_scale)
 * 
 *     def _get_corr_a(self):             # <<<<<<<<<<<<<<
 *         '''The corr_a parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_a(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_corr_a", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2120
 *     corr_a = property(_get_corr_a)
 * 
 *     def _get_corr_b(self):             # <<<<<<<<<<<<<<
 *         '''The corr_b parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_b(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_13_get_corr_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_12_get_corr_b[] = "PairPotOlpSlater1s1s._get_corr_b(self)\nThe corr_b parameter in the exchange energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_13_get_corr_b(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_corr_b (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_12_get_corr_b(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_12_get_corr_b(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_corr_b", 0);

  /* "yaff/pes/ext.pyx":2122
 *     def _get_corr_b(self):
 *         '''The corr_b parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_b(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     corr_b = property(_get_corr_b)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_olpslater1s1s_get_corr_b(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2120
 *     corr_a = property(_get_corr_a)
 * 
 *     def _get_corr_b(self):             # <<<<<<<<<<<<<<
 *         '''The corr_b parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_b(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_corr_b", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2126
 *     corr_b = property(_get_corr_b)
 * 
 *     def _get_corr_c(self):             # <<<<<<<<<<<<<<
 *         '''The corr_c parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_c(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_15_get_corr_c(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_14_get_corr_c[] = "PairPotOlpSlater1s1s._get_corr_c(self)\nThe corr_c parameter in the exchange energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_15_get_corr_c(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_corr_c (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_14_get_corr_c(((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_14_get_corr_c(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_corr_c", 0);

  /* "yaff/pes/ext.pyx":2128
 *     def _get_corr_c(self):
 *         '''The corr_c parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_c(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     corr_c = property(_get_corr_c)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_olpslater1s1s_get_corr_c(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2126
 *     corr_b = property(_get_corr_b)
 * 
 *     def _get_corr_c(self):             # <<<<<<<<<<<<<<
 *         '''The corr_c parameter in the exchange energy expression'''
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_c(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotOlpSlater1s1s._get_corr_c", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2167
 *     name = 'chargetransferslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ct_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

/* Python wrapper */
static int __pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_slater1s_widths = 0;
  PyArrayObject *__pyx_v_slater1s_N = 0;
  double __pyx_v_ct_scale;
  double __pyx_v_rcut;
  struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr = 0;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw = 0;
  double __pyx_v_width_power;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_slater1s_widths,&__pyx_n_s_slater1s_N,&__pyx_n_s_ct_scale,&__pyx_n_s_rcut,&__pyx_n_s_tr,&__pyx_n_s_sw,&__pyx_n_s_width_power,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};

    /* "yaff/pes/ext.pyx":2169
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 *                   np.ndarray[double, ndim=1] slater1s_N, double ct_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,             # <<<<<<<<<<<<<<
 *                   double width_power=3.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 */
    values[4] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None);
    values[5] = (PyObject *)((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_widths)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_slater1s_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ct_scale)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tr);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sw);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_width_power);
          if (value) { values[6] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_slater1s_widths = ((PyArrayObject *)values[0]);
    __pyx_v_slater1s_N = ((PyArrayObject *)values[1]);
    __pyx_v_ct_scale = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_ct_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_rcut = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_rcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)values[4]);
    __pyx_v_sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)values[5]);
    if (values[6]) {
      __pyx_v_width_power = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_width_power == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2170; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_width_power = ((double)3.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 4, 7, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_widths), __pyx_ptype_5numpy_ndarray, 1, "slater1s_widths", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_slater1s_N), __pyx_ptype_5numpy_ndarray, 1, "slater1s_N", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_tr), __pyx_ptype_4yaff_3pes_3ext_Truncation, 1, "tr", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sw), __pyx_ptype_4yaff_3pes_3ext_SwitchOn, 1, "sw", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s___cinit__(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self), __pyx_v_slater1s_widths, __pyx_v_slater1s_N, __pyx_v_ct_scale, __pyx_v_rcut, __pyx_v_tr, __pyx_v_sw, __pyx_v_width_power);

  /* "yaff/pes/ext.pyx":2167
 *     name = 'chargetransferslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ct_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s___cinit__(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self, PyArrayObject *__pyx_v_slater1s_widths, PyArrayObject *__pyx_v_slater1s_N, double __pyx_v_ct_scale, double __pyx_v_rcut, struct __pyx_obj_4yaff_3pes_3ext_Truncation *__pyx_v_tr, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *__pyx_v_sw, double __pyx_v_width_power) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_N;
  __Pyx_Buffer __pyx_pybuffer_slater1s_N;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_slater1s_widths;
  __Pyx_Buffer __pyx_pybuffer_slater1s_widths;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_slater1s_widths.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_widths.refcount = 0;
  __pyx_pybuffernd_slater1s_widths.data = NULL;
  __pyx_pybuffernd_slater1s_widths.rcbuffer = &__pyx_pybuffer_slater1s_widths;
  __pyx_pybuffer_slater1s_N.pybuffer.buf = NULL;
  __pyx_pybuffer_slater1s_N.refcount = 0;
  __pyx_pybuffernd_slater1s_N.data = NULL;
  __pyx_pybuffernd_slater1s_N.rcbuffer = &__pyx_pybuffer_slater1s_N;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_widths, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_widths.diminfo[0].strides = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_widths.diminfo[0].shape = __pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer, (PyObject*)__pyx_v_slater1s_N, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_slater1s_N.diminfo[0].strides = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_slater1s_N.diminfo[0].shape = __pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2171
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 *                   double width_power=3.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_widths), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2172
 *                   double width_power=3.0):
 *         assert slater1s_widths.flags['C_CONTIGUOUS']
 *         assert slater1s_N.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_slater1s_N), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2172; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2174
 *         assert slater1s_N.flags['C_CONTIGUOUS']
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)             # <<<<<<<<<<<<<<
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 */
  pair_pot_set_rcut(__pyx_v_self->__pyx_base._c_pair_pot, __pyx_v_rcut);

  /* "yaff/pes/ext.pyx":2175
 *         # Precompute some factors here???
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)             # <<<<<<<<<<<<<<
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_chargetransferslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data, ct_scale, width_power)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_truncation(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_tr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":2176
 *         pair_pot.pair_pot_set_rcut(self._c_pair_pot, rcut)
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)             # <<<<<<<<<<<<<<
 *         pair_pot.pair_data_chargetransferslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data, ct_scale, width_power)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_switchon(((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)__pyx_v_self), __pyx_v_sw); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":2177
 *         self.set_truncation(tr)
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_chargetransferslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data, ct_scale, width_power)             # <<<<<<<<<<<<<<
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 */
  pair_data_chargetransferslater1s1s_init(__pyx_v_self->__pyx_base._c_pair_pot, ((double *)__pyx_v_slater1s_widths->data), ((double *)__pyx_v_slater1s_N->data), __pyx_v_ct_scale, __pyx_v_width_power);

  /* "yaff/pes/ext.pyx":2178
 *         self.set_switchon(sw)
 *         pair_pot.pair_data_chargetransferslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data, ct_scale, width_power)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):             # <<<<<<<<<<<<<<
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 */
  __pyx_t_3 = ((!(pair_pot_ready(__pyx_v_self->__pyx_base._c_pair_pot) != 0)) != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2179
 *         pair_pot.pair_data_chargetransferslater1s1s_init(self._c_pair_pot, <double*>slater1s_widths.data,  <double*>slater1s_N.data, ct_scale, width_power)
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()             # <<<<<<<<<<<<<<
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N
 */
    PyErr_NoMemory(); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":2180
 *         if not pair_pot.pair_pot_ready(self._c_pair_pot):
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths             # <<<<<<<<<<<<<<
 *         self._c_slater1s_N = slater1s_N
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_widths));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_widths);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_widths));
  __pyx_v_self->_c_slater1s_widths = ((PyArrayObject *)__pyx_v_slater1s_widths);

  /* "yaff/pes/ext.pyx":2181
 *             raise MemoryError()
 *         self._c_slater1s_widths = slater1s_widths
 *         self._c_slater1s_N = slater1s_N             # <<<<<<<<<<<<<<
 * 
 *     def log(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_slater1s_N));
  __Pyx_GOTREF(__pyx_v_self->_c_slater1s_N);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_c_slater1s_N));
  __pyx_v_self->_c_slater1s_N = ((PyArrayObject *)__pyx_v_slater1s_N);

  /* "yaff/pes/ext.pyx":2167
 *     name = 'chargetransferslater1s1s'
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,             # <<<<<<<<<<<<<<
 *                   np.ndarray[double, ndim=1] slater1s_N, double ct_scale,
 *                   double rcut, Truncation tr=None, SwitchOn sw=None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_N.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_slater1s_widths.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2183
 *         self._c_slater1s_N = slater1s_N
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_2log[] = "PairPotChargeTransferSlater1s1s.log(self)\nPrint suitable initialization info on screen.";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_3log(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_2log(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_2log(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  npy_intp __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  npy_intp __pyx_t_5;
  npy_intp __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);

  /* "yaff/pes/ext.pyx":2185
 *     def log(self):
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:             # <<<<<<<<<<<<<<
 *             log('  ct_scale:             %s' % ("%10.5f"%self.ct_scale))
 *             log('  width_power:             %s' % ("%10.5f"%self.width_power))
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_do_medium); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2186
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 *             log('  ct_scale:             %s' % ("%10.5f"%self.ct_scale))             # <<<<<<<<<<<<<<
 *             log('  width_power:             %s' % ("%10.5f"%self.width_power))
 *         if log.do_high:
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_ct_scale); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Remainder(__pyx_kp_s_ct_scale_s, __pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "yaff/pes/ext.pyx":2187
 *         if log.do_medium:
 *             log('  ct_scale:             %s' % ("%10.5f"%self.ct_scale))
 *             log('  width_power:             %s' % ("%10.5f"%self.width_power))             # <<<<<<<<<<<<<<
 *         if log.do_high:
 *             log.hline()
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_width_power); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyNumber_Remainder(__pyx_kp_s_10_5f, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Remainder(__pyx_kp_s_width_power_s, __pyx_t_2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2188
 *             log('  ct_scale:             %s' % ("%10.5f"%self.ct_scale))
 *             log('  width_power:             %s' % ("%10.5f"%self.width_power))
 *         if log.do_high:             # <<<<<<<<<<<<<<
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_do_high); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2189
 *             log('  width_power:             %s' % ("%10.5f"%self.width_power))
 *         if log.do_high:
 *             log.hline()             # <<<<<<<<<<<<<<
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_hline); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_t_4, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "yaff/pes/ext.pyx":2190
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_k_tuple__29, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":2191
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()             # <<<<<<<<<<<<<<
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hline); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_2, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "yaff/pes/ext.pyx":2192
 *             log('   Atom  Slater charge   Slater width')
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):             # <<<<<<<<<<<<<<
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 */
    __pyx_t_5 = (__pyx_v_self->_c_slater1s_widths->dimensions[0]);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "yaff/pes/ext.pyx":2193
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_widths(self):
 */
      __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyInt_From_Py_intptr_t(__pyx_v_i); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_charge); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PyTuple_New(1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_t_7, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_log); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_length); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_GetItemInt(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_v_i, npy_intp, 1, __Pyx_PyInt_From_Py_intptr_t, 0, 1, 1); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_s_7i_s_s_2, __pyx_t_9); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_t_4, __pyx_t_9, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2183
 *         self._c_slater1s_N = slater1s_N
 * 
 *     def log(self):             # <<<<<<<<<<<<<<
 *         '''Print suitable initialization info on screen.'''
 *         if log.do_medium:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2195
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_4_get_slater1s_widths[] = "PairPotChargeTransferSlater1s1s._get_slater1s_widths(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_5_get_slater1s_widths(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_widths (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_4_get_slater1s_widths(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_4_get_slater1s_widths(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_widths", 0);

  /* "yaff/pes/ext.pyx":2197
 *     def _get_slater1s_widths(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_widths = property(_get_slater1s_widths)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_widths), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2195
 *                 log('%7i     %s     %s' % (i, log.charge(self._c_slater1s_N[i]),log.length(self._c_slater1s_widths[i])))
 * 
 *     def _get_slater1s_widths(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_widths.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s._get_slater1s_widths", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2201
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_6_get_slater1s_N[] = "PairPotChargeTransferSlater1s1s._get_slater1s_N(self)\nThe atomic charges";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_7_get_slater1s_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_slater1s_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_6_get_slater1s_N(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_6_get_slater1s_N(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_slater1s_N", 0);

  /* "yaff/pes/ext.pyx":2203
 *     def _get_slater1s_N(self):
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()             # <<<<<<<<<<<<<<
 * 
 *     slater1s_N = property(_get_slater1s_N)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_c_slater1s_N), __pyx_n_s_view); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2201
 *     slater1s_widths = property(_get_slater1s_widths)
 * 
 *     def _get_slater1s_N(self):             # <<<<<<<<<<<<<<
 *         '''The atomic charges'''
 *         return self._c_slater1s_N.view()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s._get_slater1s_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2207
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_ct_scale(self):             # <<<<<<<<<<<<<<
 *         '''The ct_scale parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_ct_scale(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_9_get_ct_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_8_get_ct_scale[] = "PairPotChargeTransferSlater1s1s._get_ct_scale(self)\nThe ct_scale parameter in the charge transfer energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_9_get_ct_scale(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_ct_scale (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_8_get_ct_scale(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_8_get_ct_scale(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_ct_scale", 0);

  /* "yaff/pes/ext.pyx":2209
 *     def _get_ct_scale(self):
 *         '''The ct_scale parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_ct_scale(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     ct_scale = property(_get_ct_scale)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_chargetransferslater1s1s_get_ct_scale(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2207
 *     slater1s_N = property(_get_slater1s_N)
 * 
 *     def _get_ct_scale(self):             # <<<<<<<<<<<<<<
 *         '''The ct_scale parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_ct_scale(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s._get_ct_scale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2213
 *     ct_scale = property(_get_ct_scale)
 * 
 *     def _get_width_power(self):             # <<<<<<<<<<<<<<
 *         '''The corr_a parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_width_power(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_11_get_width_power(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_10_get_width_power[] = "PairPotChargeTransferSlater1s1s._get_width_power(self)\nThe corr_a parameter in the charge transfer energy expression";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_11_get_width_power(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_width_power (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_10_get_width_power(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_10_get_width_power(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_width_power", 0);

  /* "yaff/pes/ext.pyx":2215
 *     def _get_width_power(self):
 *         '''The corr_a parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_width_power(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     width_power = property(_get_width_power)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_chargetransferslater1s1s_get_width_power(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2213
 *     ct_scale = property(_get_ct_scale)
 * 
 *     def _get_width_power(self):             # <<<<<<<<<<<<<<
 *         '''The corr_a parameter in the charge transfer energy expression'''
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_width_power(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s._get_width_power", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2219
 *     width_power = property(_get_width_power)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_13_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_12_get_alpha[] = "PairPotChargeTransferSlater1s1s._get_alpha(self)\nThe alpha parameter in the Ewald summation method";
static PyObject *__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_13_get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_alpha (wrapper)", 0);
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_12_get_alpha(((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_12_get_alpha(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_alpha", 0);

  /* "yaff/pes/ext.pyx":2221
 *     def _get_alpha(self):
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)             # <<<<<<<<<<<<<<
 * 
 *     alpha = property(_get_alpha)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(pair_data_eidip_get_alpha(__pyx_v_self->__pyx_base._c_pair_pot)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2219
 *     width_power = property(_get_width_power)
 * 
 *     def _get_alpha(self):             # <<<<<<<<<<<<<<
 *         '''The alpha parameter in the Ewald summation method'''
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yaff.pes.ext.PairPotChargeTransferSlater1s1s._get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2233
 * 
 * 
 * def compute_ewald_reci(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_17compute_ewald_reci(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_16compute_ewald_reci[] = "compute_ewald_reci(ndarray pos, ndarray charges, Cell unitcell, double alpha, ndarray gmax, double gcut, double dielectric, ndarray gpos, ndarray work, ndarray vtens, ndarray hess)\nCompute the reciprocal interaction term in the Ewald summation scheme\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       charges\n            The atomic charges. numpy array with shape (natom,).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       alpha\n            The :math:`\\alpha` parameter from the Ewald summation scheme.\n\n       gmax\n            The maximum range of periodic images in reciprocal space to be\n            considered for the Ewald sum. integer numpy array with shape (3,).\n            Each element gives the range along the corresponding reciprocal\n            cell vector. The range along each axis goes from -gmax[0] to\n            gmax[0] (inclusive).\n\n       gcut\n            The cutoff in reciprocal space. The caller is responsible for the\n            compatibility of ``gcut`` with ``gmax``.\n\n       dielectric\n            The scalar relative permittivity of the system.\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       work\n            If gpos is given, this work array must also be present. Its\n            contents will be overwritten. numpy array with shape (2*natom,).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n\n       hess\n            If not set to None, the hessian is computed and stored in\n            this array. numpy array with shape (3*natom, 3*natom).\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_17compute_ewald_reci = {__Pyx_NAMESTR("compute_ewald_reci"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_17compute_ewald_reci, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_16compute_ewald_reci)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_17compute_ewald_reci(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_charges = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  double __pyx_v_alpha;
  PyArrayObject *__pyx_v_gmax = 0;
  double __pyx_v_gcut;
  double __pyx_v_dielectric;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_work = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  PyArrayObject *__pyx_v_hess = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_ewald_reci (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_charges,&__pyx_n_s_unitcell,&__pyx_n_s_alpha,&__pyx_n_s_gmax,&__pyx_n_s_gcut,&__pyx_n_s_dielectric,&__pyx_n_s_gpos,&__pyx_n_s_work,&__pyx_n_s_vtens,&__pyx_n_s_hess,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dielectric)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_work)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case 10:
        if (likely((values[10] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hess)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, 10); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_ewald_reci") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_charges = ((PyArrayObject *)values[1]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[2]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2235; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_gmax = ((PyArrayObject *)values[4]);
    __pyx_v_gcut = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_gcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_dielectric = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_dielectric == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_gpos = ((PyArrayObject *)values[7]);
    __pyx_v_work = ((PyArrayObject *)values[8]);
    __pyx_v_vtens = ((PyArrayObject *)values[9]);
    __pyx_v_hess = ((PyArrayObject *)values[10]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_ewald_reci", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_reci", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gmax), __pyx_ptype_5numpy_ndarray, 1, "gmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_work), __pyx_ptype_5numpy_ndarray, 1, "work", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hess), __pyx_ptype_5numpy_ndarray, 1, "hess", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_16compute_ewald_reci(__pyx_self, __pyx_v_pos, __pyx_v_charges, __pyx_v_unitcell, __pyx_v_alpha, __pyx_v_gmax, __pyx_v_gcut, __pyx_v_dielectric, __pyx_v_gpos, __pyx_v_work, __pyx_v_vtens, __pyx_v_hess);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_16compute_ewald_reci(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_gmax, double __pyx_v_gcut, double __pyx_v_dielectric, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_work, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_work;
  double *__pyx_v_my_vtens;
  double *__pyx_v_my_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gmax;
  __Pyx_Buffer __pyx_pybuffer_gmax;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hess;
  __Pyx_Buffer __pyx_pybuffer_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_work;
  __Pyx_Buffer __pyx_pybuffer_work;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_ewald_reci", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_gmax.pybuffer.buf = NULL;
  __pyx_pybuffer_gmax.refcount = 0;
  __pyx_pybuffernd_gmax.data = NULL;
  __pyx_pybuffernd_gmax.rcbuffer = &__pyx_pybuffer_gmax;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_work.pybuffer.buf = NULL;
  __pyx_pybuffer_work.refcount = 0;
  __pyx_pybuffernd_work.data = NULL;
  __pyx_pybuffernd_work.rcbuffer = &__pyx_pybuffer_work;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  __pyx_pybuffer_hess.pybuffer.buf = NULL;
  __pyx_pybuffer_hess.refcount = 0;
  __pyx_pybuffernd_hess.data = NULL;
  __pyx_pybuffernd_hess.rcbuffer = &__pyx_pybuffer_hess;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_gmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gmax.diminfo[0].strides = __pyx_pybuffernd_gmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gmax.diminfo[0].shape = __pyx_pybuffernd_gmax.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_work.rcbuffer->pybuffer, (PyObject*)__pyx_v_work, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_work.diminfo[0].strides = __pyx_pybuffernd_work.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_work.diminfo[0].shape = __pyx_pybuffernd_work.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hess.rcbuffer->pybuffer, (PyObject*)__pyx_v_hess, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hess.diminfo[0].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hess.diminfo[0].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hess.diminfo[1].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hess.diminfo[1].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2294
 *     cdef double *my_hess
 * 
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2295
 * 
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2296
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert charges.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_charges), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2296; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2297
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert unitcell.nvec == 3
 *     assert alpha > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_charges->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2298
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3             # <<<<<<<<<<<<<<
 *     assert alpha > 0
 *     assert dielectric >= 1.0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2299
 *     assert charges.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3
 *     assert alpha > 0             # <<<<<<<<<<<<<<
 *     assert dielectric >= 1.0
 *     assert gmax.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_alpha > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2300
 *     assert unitcell.nvec == 3
 *     assert alpha > 0
 *     assert dielectric >= 1.0             # <<<<<<<<<<<<<<
 *     assert gmax.flags['C_CONTIGUOUS']
 *     assert gmax.shape[0] == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_dielectric >= 1.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2301
 *     assert alpha > 0
 *     assert dielectric >= 1.0
 *     assert gmax.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert gmax.shape[0] == 3
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gmax), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2301; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2302
 *     assert dielectric >= 1.0
 *     assert gmax.flags['C_CONTIGUOUS']
 *     assert gmax.shape[0] == 3             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_gmax->dimensions[0]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2304
 *     assert gmax.shape[0] == 3
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *         my_work = NULL
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2305
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *         my_work = NULL
 *     else:
 */
    __pyx_v_my_gpos = NULL;

    /* "yaff/pes/ext.pyx":2306
 *     if gpos is None:
 *         my_gpos = NULL
 *         my_work = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_work = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2308
 *         my_work = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2308; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2309
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2310
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2311
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_work), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2311; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2312
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 *         my_work = <double*>work.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!((((__pyx_v_gpos->dimensions[0]) * 2) == (__pyx_v_work->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2313
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 *         my_work = <double*>work.data
 * 
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);

    /* "yaff/pes/ext.pyx":2314
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data
 *         my_work = <double*>work.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_work = ((double *)__pyx_v_work->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2316
 *         my_work = <double*>work.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2317
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2319
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2319; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2320
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2321
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2322
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     if hess is None:
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2324
 *         my_vtens = <double*>vtens.data
 * 
 *     if hess is None:             # <<<<<<<<<<<<<<
 *         my_hess = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_hess) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2325
 * 
 *     if hess is None:
 *         my_hess = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_hess = NULL;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2327
 *         my_hess = NULL
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         my_hess = <double*>hess.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_hess), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2327; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2328
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']
 *         my_hess = <double*>hess.data             # <<<<<<<<<<<<<<
 * 
 *     return ewald.compute_ewald_reci(<double*>pos.data, len(pos),
 */
    __pyx_v_my_hess = ((double *)__pyx_v_hess->data);
  }
  __pyx_L5:;

  /* "yaff/pes/ext.pyx":2330
 *         my_hess = <double*>hess.data
 * 
 *     return ewald.compute_ewald_reci(<double*>pos.data, len(pos),             # <<<<<<<<<<<<<<
 *                                     <double*>charges.data,
 *                                     unitcell._c_cell, alpha, <long*>gmax.data,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2334
 *                                     unitcell._c_cell, alpha, <long*>gmax.data,
 *                                     gcut, dielectric, my_gpos, my_work,
 *                                     my_vtens, my_hess)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(compute_ewald_reci(((double *)__pyx_v_pos->data), __pyx_t_5, ((double *)__pyx_v_charges->data), __pyx_v_unitcell->_c_cell, __pyx_v_alpha, ((long *)__pyx_v_gmax->data), __pyx_v_gcut, __pyx_v_dielectric, __pyx_v_my_gpos, __pyx_v_my_work, __pyx_v_my_vtens, __pyx_v_my_hess)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2233
 * 
 * 
 * def compute_ewald_reci(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_work.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_reci", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_work.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2337
 * 
 * 
 * def compute_ewald_reci_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_19compute_ewald_reci_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_18compute_ewald_reci_dd[] = "compute_ewald_reci_dd(ndarray pos, ndarray charges, ndarray dipoles, Cell unitcell, double alpha, ndarray gmax, double gcut, ndarray gpos, ndarray work, ndarray vtens)\nCompute the reciprocal interaction term in the Ewald summation scheme\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       charges\n            The atomic charges. numpy array with shape (natom,).\n\n       dipoles\n            The atomic dipoles. numpy array with shape (natom,3).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       alpha\n            The :math:`\\alpha` parameter from the Ewald summation scheme.\n\n       gmax\n            The maximum range of periodic images in reciprocal space to be\n            considered for the Ewald sum. integer numpy array with shape (3,).\n            Each element gives the range along the corresponding reciprocal\n            cell vector. The range along each axis goes from -gmax[0] to\n            gmax[0] (inclusive).\n\n       gcut\n            The cutoff in reciprocal space. The caller is responsible for the\n            compatibility of ``gcut`` with ``gmax``.\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       work\n            If gpos is given, this work array must also be present. Its\n            contents will be overwritten. numpy array with shape (2*natom,).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_19compute_ewald_reci_dd = {__Pyx_NAMESTR("compute_ewald_reci_dd"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19compute_ewald_reci_dd, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_18compute_ewald_reci_dd)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_19compute_ewald_reci_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_charges = 0;
  PyArrayObject *__pyx_v_dipoles = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  double __pyx_v_alpha;
  PyArrayObject *__pyx_v_gmax = 0;
  double __pyx_v_gcut;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_work = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_ewald_reci_dd (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_charges,&__pyx_n_s_dipoles,&__pyx_n_s_unitcell,&__pyx_n_s_alpha,&__pyx_n_s_gmax,&__pyx_n_s_gcut,&__pyx_n_s_gpos,&__pyx_n_s_work,&__pyx_n_s_vtens,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dipoles)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gmax)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gcut)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_work)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_ewald_reci_dd") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_charges = ((PyArrayObject *)values[1]);
    __pyx_v_dipoles = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2340; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_gmax = ((PyArrayObject *)values[5]);
    __pyx_v_gcut = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_gcut == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2341; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_gpos = ((PyArrayObject *)values[7]);
    __pyx_v_work = ((PyArrayObject *)values[8]);
    __pyx_v_vtens = ((PyArrayObject *)values[9]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_ewald_reci_dd", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_reci_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dipoles), __pyx_ptype_5numpy_ndarray, 1, "dipoles", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gmax), __pyx_ptype_5numpy_ndarray, 1, "gmax", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_work), __pyx_ptype_5numpy_ndarray, 1, "work", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_18compute_ewald_reci_dd(__pyx_self, __pyx_v_pos, __pyx_v_charges, __pyx_v_dipoles, __pyx_v_unitcell, __pyx_v_alpha, __pyx_v_gmax, __pyx_v_gcut, __pyx_v_gpos, __pyx_v_work, __pyx_v_vtens);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_18compute_ewald_reci_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_gmax, double __pyx_v_gcut, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_work, PyArrayObject *__pyx_v_vtens) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_work;
  double *__pyx_v_my_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dipoles;
  __Pyx_Buffer __pyx_pybuffer_dipoles;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gmax;
  __Pyx_Buffer __pyx_pybuffer_gmax;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_work;
  __Pyx_Buffer __pyx_pybuffer_work;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_ewald_reci_dd", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_dipoles.pybuffer.buf = NULL;
  __pyx_pybuffer_dipoles.refcount = 0;
  __pyx_pybuffernd_dipoles.data = NULL;
  __pyx_pybuffernd_dipoles.rcbuffer = &__pyx_pybuffer_dipoles;
  __pyx_pybuffer_gmax.pybuffer.buf = NULL;
  __pyx_pybuffer_gmax.refcount = 0;
  __pyx_pybuffernd_gmax.data = NULL;
  __pyx_pybuffernd_gmax.rcbuffer = &__pyx_pybuffer_gmax;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_work.pybuffer.buf = NULL;
  __pyx_pybuffer_work.refcount = 0;
  __pyx_pybuffernd_work.data = NULL;
  __pyx_pybuffernd_work.rcbuffer = &__pyx_pybuffer_work;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer, (PyObject*)__pyx_v_dipoles, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_dipoles.diminfo[0].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dipoles.diminfo[0].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_dipoles.diminfo[1].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_dipoles.diminfo[1].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer, (PyObject*)__pyx_v_gmax, &__Pyx_TypeInfo_long, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gmax.diminfo[0].strides = __pyx_pybuffernd_gmax.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gmax.diminfo[0].shape = __pyx_pybuffernd_gmax.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_work.rcbuffer->pybuffer, (PyObject*)__pyx_v_work, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_work.diminfo[0].strides = __pyx_pybuffernd_work.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_work.diminfo[0].shape = __pyx_pybuffernd_work.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2392
 *     cdef double *my_vtens
 * 
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2392; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2393
 * 
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2394
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert charges.shape[0] == pos.shape[0]
 *     assert dipoles.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_charges), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2394; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2395
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_charges->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2396
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 *     assert dipoles.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_dipoles), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2397
 *     assert charges.shape[0] == pos.shape[0]
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert unitcell.nvec == 3
 *     assert alpha > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_dipoles->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2398
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3             # <<<<<<<<<<<<<<
 *     assert alpha > 0
 *     assert gmax.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_unitcell), __pyx_n_s_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_int_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2398; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2399
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert unitcell.nvec == 3
 *     assert alpha > 0             # <<<<<<<<<<<<<<
 *     assert gmax.flags['C_CONTIGUOUS']
 *     assert gmax.shape[0] == 3
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_alpha > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2400
 *     assert unitcell.nvec == 3
 *     assert alpha > 0
 *     assert gmax.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert gmax.shape[0] == 3
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gmax), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2400; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2401
 *     assert alpha > 0
 *     assert gmax.flags['C_CONTIGUOUS']
 *     assert gmax.shape[0] == 3             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_gmax->dimensions[0]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2403
 *     assert gmax.shape[0] == 3
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *         my_work = NULL
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2404
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *         my_work = NULL
 *     else:
 */
    __pyx_v_my_gpos = NULL;

    /* "yaff/pes/ext.pyx":2405
 *     if gpos is None:
 *         my_gpos = NULL
 *         my_work = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_work = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2407
 *         my_work = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2408
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2409
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2410
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_work), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2410; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2411
 *         assert gpos.shape[0] == pos.shape[0]
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 *         my_work = <double*>work.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!((((__pyx_v_gpos->dimensions[0]) * 2) == (__pyx_v_work->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2412
 *         assert work.flags['C_CONTIGUOUS']
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 *         my_work = <double*>work.data
 * 
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);

    /* "yaff/pes/ext.pyx":2413
 *         assert gpos.shape[0]*2 == work.shape[0]
 *         my_gpos = <double*>gpos.data
 *         my_work = <double*>work.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_work = ((double *)__pyx_v_work->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2415
 *         my_work = <double*>work.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2416
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2418
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2418; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2418; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2419
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2420
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2421
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     return ewald.compute_ewald_reci_dd(<double*>pos.data, len(pos),
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2423
 *         my_vtens = <double*>vtens.data
 * 
 *     return ewald.compute_ewald_reci_dd(<double*>pos.data, len(pos),             # <<<<<<<<<<<<<<
 *                                     <double*>charges.data,
 *                                     <double*>dipoles.data,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2428
 *                                     unitcell._c_cell, alpha,
 *                                     <long*>gmax.data, gcut, my_gpos, my_work,
 *                                     my_vtens)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(compute_ewald_reci_dd(((double *)__pyx_v_pos->data), __pyx_t_5, ((double *)__pyx_v_charges->data), ((double *)__pyx_v_dipoles->data), __pyx_v_unitcell->_c_cell, __pyx_v_alpha, ((long *)__pyx_v_gmax->data), __pyx_v_gcut, __pyx_v_my_gpos, __pyx_v_my_work, __pyx_v_my_vtens)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2337
 * 
 * 
 * def compute_ewald_reci_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_work.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_reci_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gmax.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_work.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2431
 * 
 * 
 * def compute_ewald_corr(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_21compute_ewald_corr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_20compute_ewald_corr[] = "compute_ewald_corr(ndarray pos, ndarray charges, Cell unitcell, double alpha, ndarray stab, double dielectric, ndarray gpos, ndarray vtens, ndarray hess)\nCompute the corrections to the reciprocal Ewald term due to scaled\n       short-range non-bonding interactions.\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       charges\n            The atomic charges. numpy array with shape (natom,).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       alpha\n            The :math:`\\alpha` parameter from the Ewald summation scheme.\n\n       stab\n            The table with (sorted) pairs of atoms whose electrostatic\n            interactions are scaled. Each record corresponds to one pair\n            and contains the corresponding amount of scaling. See\n            ``pair_pot.scaling_row_type``\n\n       dielectric\n            The scalar relative permittivity of the system.\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n\n       hess\n            If not set to None, the hessian is computed and stored in this\n            array. NumPu array with shape (3*natom,3*natom).\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_21compute_ewald_corr = {__Pyx_NAMESTR("compute_ewald_corr"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_21compute_ewald_corr, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20compute_ewald_corr)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_21compute_ewald_corr(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_charges = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  double __pyx_v_alpha;
  PyArrayObject *__pyx_v_stab = 0;
  double __pyx_v_dielectric;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  PyArrayObject *__pyx_v_hess = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_ewald_corr (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_charges,&__pyx_n_s_unitcell,&__pyx_n_s_alpha,&__pyx_n_s_stab,&__pyx_n_s_dielectric,&__pyx_n_s_gpos,&__pyx_n_s_vtens,&__pyx_n_s_hess,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dielectric)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hess)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_ewald_corr") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_charges = ((PyArrayObject *)values[1]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[2]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2433; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_stab = ((PyArrayObject *)values[4]);
    __pyx_v_dielectric = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_dielectric == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2435; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_gpos = ((PyArrayObject *)values[6]);
    __pyx_v_vtens = ((PyArrayObject *)values[7]);
    __pyx_v_hess = ((PyArrayObject *)values[8]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_ewald_corr", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_stab), __pyx_ptype_5numpy_ndarray, 1, "stab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hess), __pyx_ptype_5numpy_ndarray, 1, "hess", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_20compute_ewald_corr(__pyx_self, __pyx_v_pos, __pyx_v_charges, __pyx_v_unitcell, __pyx_v_alpha, __pyx_v_stab, __pyx_v_dielectric, __pyx_v_gpos, __pyx_v_vtens, __pyx_v_hess);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_20compute_ewald_corr(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, double __pyx_v_dielectric, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_hess) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_vtens;
  double *__pyx_v_my_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hess;
  __Pyx_Buffer __pyx_pybuffer_hess;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_stab;
  __Pyx_Buffer __pyx_pybuffer_stab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_ewald_corr", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_stab.pybuffer.buf = NULL;
  __pyx_pybuffer_stab.refcount = 0;
  __pyx_pybuffernd_stab.data = NULL;
  __pyx_pybuffernd_stab.rcbuffer = &__pyx_pybuffer_stab;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  __pyx_pybuffer_hess.pybuffer.buf = NULL;
  __pyx_pybuffer_hess.refcount = 0;
  __pyx_pybuffernd_hess.data = NULL;
  __pyx_pybuffernd_hess.rcbuffer = &__pyx_pybuffer_hess;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_stab.rcbuffer->pybuffer, (PyObject*)__pyx_v_stab, &__Pyx_TypeInfo_nn_scaling_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_stab.diminfo[0].strides = __pyx_pybuffernd_stab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_stab.diminfo[0].shape = __pyx_pybuffernd_stab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hess.rcbuffer->pybuffer, (PyObject*)__pyx_v_hess, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hess.diminfo[0].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hess.diminfo[0].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hess.diminfo[1].strides = __pyx_pybuffernd_hess.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hess.diminfo[1].shape = __pyx_pybuffernd_hess.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2483
 *     cdef double *my_hess
 * 
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2484
 * 
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2485
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert charges.shape[0] == pos.shape[0]
 *     assert alpha > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_charges), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2485; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2486
 *     assert pos.shape[1] == 3
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_charges->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2487
 *     assert charges.flags['C_CONTIGUOUS']
 *     assert charges.shape[0] == pos.shape[0]
 *     assert alpha > 0             # <<<<<<<<<<<<<<
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_alpha > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2488
 *     assert charges.shape[0] == pos.shape[0]
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_stab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2488; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2490
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2491
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_gpos = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2493
 *         my_gpos = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2493; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2494
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2495
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2496
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2498
 *         my_gpos = <double*>gpos.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2499
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2501
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2502
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2503
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2504
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     if hess is None:
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2506
 *         my_vtens = <double*>vtens.data
 * 
 *     if hess is None:             # <<<<<<<<<<<<<<
 *         my_hess = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_hess) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2507
 * 
 *     if hess is None:
 *         my_hess = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_hess = NULL;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2509
 *         my_hess = NULL
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         my_hess = <double*>hess.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_hess), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2510
 *     else:
 *         assert hess.flags['C_CONTIGUOUS']
 *         my_hess = <double*>hess.data             # <<<<<<<<<<<<<<
 * 
 *     return ewald.compute_ewald_corr(
 */
    __pyx_v_my_hess = ((double *)__pyx_v_hess->data);
  }
  __pyx_L5:;

  /* "yaff/pes/ext.pyx":2512
 *         my_hess = <double*>hess.data
 * 
 *     return ewald.compute_ewald_corr(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), dielectric,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":2514
 *     return ewald.compute_ewald_corr(
 *         <double*>pos.data, <double*>charges.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), dielectric,             # <<<<<<<<<<<<<<
 *         my_gpos, my_vtens, my_hess, len(pos)
 *     )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_stab)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2515
 *         <double*>pos.data, <double*>charges.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), dielectric,
 *         my_gpos, my_vtens, my_hess, len(pos)             # <<<<<<<<<<<<<<
 *     )
 * 
 */
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2515; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2512
 *         my_hess = <double*>hess.data
 * 
 *     return ewald.compute_ewald_corr(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), dielectric,
 */
  __pyx_t_1 = PyFloat_FromDouble(compute_ewald_corr(((double *)__pyx_v_pos->data), ((double *)__pyx_v_charges->data), __pyx_v_unitcell->_c_cell, __pyx_v_alpha, ((scaling_row_type *)__pyx_v_stab->data), __pyx_t_5, __pyx_v_dielectric, __pyx_v_my_gpos, __pyx_v_my_vtens, __pyx_v_my_hess, __pyx_t_6)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2431
 * 
 * 
 * def compute_ewald_corr(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hess.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2518
 *     )
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_23compute_ewald_corr_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_22compute_ewald_corr_dd[] = "compute_ewald_corr_dd(ndarray pos, ndarray charges, ndarray dipoles, Cell unitcell, double alpha, ndarray stab, ndarray gpos, ndarray vtens)\nCompute the corrections to the reciprocal Ewald term due to scaled\n       short-range non-bonding interactions.\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       charges\n            The atomic charges. numpy array with shape (natom,).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       alpha\n            The :math:`\\alpha` parameter from the Ewald summation scheme.\n\n       stab\n            The table with (sorted) pairs of atoms whose electrostatic\n            interactions are scaled. Each record corresponds to one pair\n            and contains the corresponding amount of scaling. See\n            ``pair_pot.scaling_row_type``\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_23compute_ewald_corr_dd = {__Pyx_NAMESTR("compute_ewald_corr_dd"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_23compute_ewald_corr_dd, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_22compute_ewald_corr_dd)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_23compute_ewald_corr_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_charges = 0;
  PyArrayObject *__pyx_v_dipoles = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  double __pyx_v_alpha;
  PyArrayObject *__pyx_v_stab = 0;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_ewald_corr_dd (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_charges,&__pyx_n_s_dipoles,&__pyx_n_s_unitcell,&__pyx_n_s_alpha,&__pyx_n_s_stab,&__pyx_n_s_gpos,&__pyx_n_s_vtens,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dipoles)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_ewald_corr_dd") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_charges = ((PyArrayObject *)values[1]);
    __pyx_v_dipoles = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2521; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_stab = ((PyArrayObject *)values[5]);
    __pyx_v_gpos = ((PyArrayObject *)values[6]);
    __pyx_v_vtens = ((PyArrayObject *)values[7]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dipoles), __pyx_ptype_5numpy_ndarray, 1, "dipoles", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_stab), __pyx_ptype_5numpy_ndarray, 1, "stab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_22compute_ewald_corr_dd(__pyx_self, __pyx_v_pos, __pyx_v_charges, __pyx_v_dipoles, __pyx_v_unitcell, __pyx_v_alpha, __pyx_v_stab, __pyx_v_gpos, __pyx_v_vtens);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_22compute_ewald_corr_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dipoles;
  __Pyx_Buffer __pyx_pybuffer_dipoles;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_stab;
  __Pyx_Buffer __pyx_pybuffer_stab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_ewald_corr_dd", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_dipoles.pybuffer.buf = NULL;
  __pyx_pybuffer_dipoles.refcount = 0;
  __pyx_pybuffernd_dipoles.data = NULL;
  __pyx_pybuffernd_dipoles.rcbuffer = &__pyx_pybuffer_dipoles;
  __pyx_pybuffer_stab.pybuffer.buf = NULL;
  __pyx_pybuffer_stab.refcount = 0;
  __pyx_pybuffernd_stab.data = NULL;
  __pyx_pybuffernd_stab.rcbuffer = &__pyx_pybuffer_stab;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer, (PyObject*)__pyx_v_dipoles, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_dipoles.diminfo[0].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dipoles.diminfo[0].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_dipoles.diminfo[1].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_dipoles.diminfo[1].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_stab.rcbuffer->pybuffer, (PyObject*)__pyx_v_stab, &__Pyx_TypeInfo_nn_scaling_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_stab.diminfo[0].strides = __pyx_pybuffernd_stab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_stab.diminfo[0].shape = __pyx_pybuffernd_stab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2561
 *     cdef double *my_vtens
 * 
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2561; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2562
 * 
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2563
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_dipoles), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2563; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2564
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_dipoles->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2565
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]             # <<<<<<<<<<<<<<
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_dipoles->dimensions[1]) == (__pyx_v_pos->dimensions[1])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2566
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0             # <<<<<<<<<<<<<<
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_alpha > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2567
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_stab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2569
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2570
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_gpos = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2572
 *         my_gpos = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2573
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2574
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2575
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2577
 *         my_gpos = <double*>gpos.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2578
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2580
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2581
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2582
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2583
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     return ewald.compute_ewald_corr_dd(
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2585
 *         my_vtens = <double*>vtens.data
 * 
 *     return ewald.compute_ewald_corr_dd(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":2587
 *     return ewald.compute_ewald_corr_dd(
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,             # <<<<<<<<<<<<<<
 *         my_vtens, len(pos)
 *     )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_stab)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2588
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 *         my_vtens, len(pos)             # <<<<<<<<<<<<<<
 *     )
 * 
 */
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2585
 *         my_vtens = <double*>vtens.data
 * 
 *     return ewald.compute_ewald_corr_dd(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 */
  __pyx_t_2 = PyFloat_FromDouble(compute_ewald_corr_dd(((double *)__pyx_v_pos->data), ((double *)__pyx_v_charges->data), ((double *)__pyx_v_dipoles->data), __pyx_v_unitcell->_c_cell, __pyx_v_alpha, ((scaling_row_type *)__pyx_v_stab->data), __pyx_t_5, __pyx_v_my_gpos, __pyx_v_my_vtens, __pyx_t_6)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2518
 *     )
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2592
 * 
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_25compute_ewald_corr_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_24compute_ewald_corr_dd[] = "compute_ewald_corr_dd(ndarray pos, ndarray charges, ndarray dipoles, Cell unitcell, double alpha, ndarray stab, ndarray gpos, ndarray vtens)\nCompute the corrections to the reciprocal Ewald term due to scaled\n       short-range non-bonding interactions.\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       charges\n            The atomic charges. numpy array with shape (natom,).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       alpha\n            The :math:`\\alpha` parameter from the Ewald summation scheme.\n\n       stab\n            The table with (sorted) pairs of atoms whose electrostatic\n            interactions are scaled. Each record corresponds to one pair\n            and contains the corresponding amount of scaling. See\n            ``pair_pot.scaling_row_type``\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_25compute_ewald_corr_dd = {__Pyx_NAMESTR("compute_ewald_corr_dd"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25compute_ewald_corr_dd, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_24compute_ewald_corr_dd)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_25compute_ewald_corr_dd(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  PyArrayObject *__pyx_v_charges = 0;
  PyArrayObject *__pyx_v_dipoles = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  double __pyx_v_alpha;
  PyArrayObject *__pyx_v_stab = 0;
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_ewald_corr_dd (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_charges,&__pyx_n_s_dipoles,&__pyx_n_s_unitcell,&__pyx_n_s_alpha,&__pyx_n_s_stab,&__pyx_n_s_gpos,&__pyx_n_s_vtens,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_charges)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dipoles)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_ewald_corr_dd") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 8) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_charges = ((PyArrayObject *)values[1]);
    __pyx_v_dipoles = ((PyArrayObject *)values[2]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[3]);
    __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2595; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_stab = ((PyArrayObject *)values[5]);
    __pyx_v_gpos = ((PyArrayObject *)values[6]);
    __pyx_v_vtens = ((PyArrayObject *)values[7]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_ewald_corr_dd", 1, 8, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_charges), __pyx_ptype_5numpy_ndarray, 1, "charges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dipoles), __pyx_ptype_5numpy_ndarray, 1, "dipoles", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_stab), __pyx_ptype_5numpy_ndarray, 1, "stab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_24compute_ewald_corr_dd(__pyx_self, __pyx_v_pos, __pyx_v_charges, __pyx_v_dipoles, __pyx_v_unitcell, __pyx_v_alpha, __pyx_v_stab, __pyx_v_gpos, __pyx_v_vtens);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_24compute_ewald_corr_dd(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, PyArrayObject *__pyx_v_charges, PyArrayObject *__pyx_v_dipoles, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, double __pyx_v_alpha, PyArrayObject *__pyx_v_stab, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_charges;
  __Pyx_Buffer __pyx_pybuffer_charges;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dipoles;
  __Pyx_Buffer __pyx_pybuffer_dipoles;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_stab;
  __Pyx_Buffer __pyx_pybuffer_stab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_ewald_corr_dd", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_charges.pybuffer.buf = NULL;
  __pyx_pybuffer_charges.refcount = 0;
  __pyx_pybuffernd_charges.data = NULL;
  __pyx_pybuffernd_charges.rcbuffer = &__pyx_pybuffer_charges;
  __pyx_pybuffer_dipoles.pybuffer.buf = NULL;
  __pyx_pybuffer_dipoles.refcount = 0;
  __pyx_pybuffernd_dipoles.data = NULL;
  __pyx_pybuffernd_dipoles.rcbuffer = &__pyx_pybuffer_dipoles;
  __pyx_pybuffer_stab.pybuffer.buf = NULL;
  __pyx_pybuffer_stab.refcount = 0;
  __pyx_pybuffernd_stab.data = NULL;
  __pyx_pybuffernd_stab.rcbuffer = &__pyx_pybuffer_stab;
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_charges.rcbuffer->pybuffer, (PyObject*)__pyx_v_charges, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_charges.diminfo[0].strides = __pyx_pybuffernd_charges.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_charges.diminfo[0].shape = __pyx_pybuffernd_charges.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer, (PyObject*)__pyx_v_dipoles, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_dipoles.diminfo[0].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dipoles.diminfo[0].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_dipoles.diminfo[1].strides = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_dipoles.diminfo[1].shape = __pyx_pybuffernd_dipoles.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_stab.rcbuffer->pybuffer, (PyObject*)__pyx_v_stab, &__Pyx_TypeInfo_nn_scaling_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_stab.diminfo[0].strides = __pyx_pybuffernd_stab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_stab.diminfo[0].shape = __pyx_pybuffernd_stab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2635
 *     cdef double *my_vtens
 * 
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2635; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2636
 * 
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2637
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_dipoles), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2637; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2638
 *     assert pos.shape[1] == 3
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_dipoles->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2639
 *     assert dipoles.flags['C_CONTIGUOUS']
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]             # <<<<<<<<<<<<<<
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_dipoles->dimensions[1]) == (__pyx_v_pos->dimensions[1])) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2640
 *     assert dipoles.shape[0] == pos.shape[0]
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0             # <<<<<<<<<<<<<<
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_alpha > 0.0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2641
 *     assert dipoles.shape[1] == pos.shape[1]
 *     assert alpha > 0
 *     assert stab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_stab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2641; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2643
 *     assert stab.flags['C_CONTIGUOUS']
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "yaff/pes/ext.pyx":2644
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_gpos = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2646
 *         my_gpos = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2646; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2647
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2648
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[0]) == (__pyx_v_pos->dimensions[0])) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2649
 *         assert gpos.shape[1] == 3
 *         assert gpos.shape[0] == pos.shape[0]
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);
  }
  __pyx_L3:;

  /* "yaff/pes/ext.pyx":2651
 *         my_gpos = <double*>gpos.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2652
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2654
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2655
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2656
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2657
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     return ewald.compute_ewald_corr_dd(
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2659
 *         my_vtens = <double*>vtens.data
 * 
 *     return ewald.compute_ewald_corr_dd(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":2661
 *     return ewald.compute_ewald_corr_dd(
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,             # <<<<<<<<<<<<<<
 *         my_vtens, len(pos)
 *     )
 */
  __pyx_t_5 = PyObject_Length(((PyObject *)__pyx_v_stab)); if (unlikely(__pyx_t_5 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2662
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 *         my_vtens, len(pos)             # <<<<<<<<<<<<<<
 *     )
 * 
 */
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_pos)); if (unlikely(__pyx_t_6 == -1 && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2659
 *         my_vtens = <double*>vtens.data
 * 
 *     return ewald.compute_ewald_corr_dd(             # <<<<<<<<<<<<<<
 *         <double*>pos.data, <double*>charges.data, <double*>dipoles.data, unitcell._c_cell, alpha,
 *         <pair_pot.scaling_row_type*>stab.data, len(stab), my_gpos,
 */
  __pyx_t_2 = PyFloat_FromDouble(compute_ewald_corr_dd(((double *)__pyx_v_pos->data), ((double *)__pyx_v_charges->data), ((double *)__pyx_v_dipoles->data), __pyx_v_unitcell->_c_cell, __pyx_v_alpha, ((scaling_row_type *)__pyx_v_stab->data), __pyx_t_5, __pyx_v_my_gpos, __pyx_v_my_vtens, __pyx_t_6)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2592
 * 
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_ewald_corr_dd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_charges.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dipoles.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_stab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2671
 * 
 * 
 * def dlist_forward(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                   Cell unitcell,
 *                   np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_27dlist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_26dlist_forward[] = "dlist_forward(ndarray pos, Cell unitcell, ndarray deltas, long ndelta)\nCompute the relative vectors in the delta list\n\n       **Arguments:**\n\n       pos\n            The atomic positions. numpy array with shape (natom,3).\n\n       unitcell\n            An instance of the ``Cell`` class that describes the periodic\n            boundary conditions.\n\n       deltas\n            The delta list array\n\n       ndelta\n            The number of records in the delta list that need to be computed.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_27dlist_forward = {__Pyx_NAMESTR("dlist_forward"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_27dlist_forward, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_26dlist_forward)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_27dlist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_pos = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_deltas = 0;
  long __pyx_v_ndelta;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dlist_forward (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_unitcell,&__pyx_n_s_deltas,&__pyx_n_s_ndelta,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_forward", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_forward", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndelta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_forward", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dlist_forward") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_pos = ((PyArrayObject *)values[0]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[1]);
    __pyx_v_deltas = ((PyArrayObject *)values[2]);
    __pyx_v_ndelta = __Pyx_PyInt_As_long(values[3]); if (unlikely((__pyx_v_ndelta == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2673; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dlist_forward", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.dlist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pos), __pyx_ptype_5numpy_ndarray, 1, "pos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_26dlist_forward(__pyx_self, __pyx_v_pos, __pyx_v_unitcell, __pyx_v_deltas, __pyx_v_ndelta);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_26dlist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_pos, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_deltas, long __pyx_v_ndelta) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pos;
  __Pyx_Buffer __pyx_pybuffer_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dlist_forward", 0);
  __pyx_pybuffer_pos.pybuffer.buf = NULL;
  __pyx_pybuffer_pos.refcount = 0;
  __pyx_pybuffernd_pos.data = NULL;
  __pyx_pybuffernd_pos.rcbuffer = &__pyx_pybuffer_pos;
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pos.rcbuffer->pybuffer, (PyObject*)__pyx_v_pos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_pos.diminfo[0].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pos.diminfo[0].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_pos.diminfo[1].strides = __pyx_pybuffernd_pos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_pos.diminfo[1].shape = __pyx_pybuffernd_pos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2691
 *             The number of records in the delta list that need to be computed.
 *     '''
 *     assert pos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert pos.shape[1] == 3
 *     assert deltas.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_pos), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2691; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2692
 *     '''
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3             # <<<<<<<<<<<<<<
 *     assert deltas.flags['C_CONTIGUOUS']
 *     dlist.dlist_forward(<double*>pos.data, unitcell._c_cell,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_pos->dimensions[1]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2693
 *     assert pos.flags['C_CONTIGUOUS']
 *     assert pos.shape[1] == 3
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     dlist.dlist_forward(<double*>pos.data, unitcell._c_cell,
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2694
 *     assert pos.shape[1] == 3
 *     assert deltas.flags['C_CONTIGUOUS']
 *     dlist.dlist_forward(<double*>pos.data, unitcell._c_cell,             # <<<<<<<<<<<<<<
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 */
  dlist_forward(((double *)__pyx_v_pos->data), __pyx_v_unitcell->_c_cell, ((dlist_row_type *)__pyx_v_deltas->data), __pyx_v_ndelta);

  /* "yaff/pes/ext.pyx":2671
 * 
 * 
 * def dlist_forward(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                   Cell unitcell,
 *                   np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.dlist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pos.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2697
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 * def dlist_back(np.ndarray[double, ndim=2] gpos,             # <<<<<<<<<<<<<<
 *                np.ndarray[double, ndim=2] vtens,
 *                np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_29dlist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_28dlist_back[] = "dlist_back(ndarray gpos, ndarray vtens, ndarray deltas, long ndelta)\nThe back-propagation step of the delta list\n\n       **Arguments:**\n\n       gpos\n            If not set to None, the Cartesian gradient of the energy is\n            stored in this array. numpy array with shape (natom, 3).\n\n       vtens\n            If not set to None, the virial tensor is computed and stored in\n            this array. numpy array with shape (3, 3).\n\n       deltas\n            The delta list array\n\n       ndelta\n            The number of records in the delta list that need to be computed.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_29dlist_back = {__Pyx_NAMESTR("dlist_back"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_29dlist_back, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_28dlist_back)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_29dlist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_gpos = 0;
  PyArrayObject *__pyx_v_vtens = 0;
  PyArrayObject *__pyx_v_deltas = 0;
  long __pyx_v_ndelta;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dlist_back (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_gpos,&__pyx_n_s_vtens,&__pyx_n_s_deltas,&__pyx_n_s_ndelta,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gpos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtens)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_back", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_back", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndelta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dlist_back", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dlist_back") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_gpos = ((PyArrayObject *)values[0]);
    __pyx_v_vtens = ((PyArrayObject *)values[1]);
    __pyx_v_deltas = ((PyArrayObject *)values[2]);
    __pyx_v_ndelta = __Pyx_PyInt_As_long(values[3]); if (unlikely((__pyx_v_ndelta == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dlist_back", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.dlist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gpos), __pyx_ptype_5numpy_ndarray, 1, "gpos", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtens), __pyx_ptype_5numpy_ndarray, 1, "vtens", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_28dlist_back(__pyx_self, __pyx_v_gpos, __pyx_v_vtens, __pyx_v_deltas, __pyx_v_ndelta);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_28dlist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_gpos, PyArrayObject *__pyx_v_vtens, PyArrayObject *__pyx_v_deltas, long __pyx_v_ndelta) {
  double *__pyx_v_my_gpos;
  double *__pyx_v_my_vtens;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gpos;
  __Pyx_Buffer __pyx_pybuffer_gpos;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtens;
  __Pyx_Buffer __pyx_pybuffer_vtens;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dlist_back", 0);
  __pyx_pybuffer_gpos.pybuffer.buf = NULL;
  __pyx_pybuffer_gpos.refcount = 0;
  __pyx_pybuffernd_gpos.data = NULL;
  __pyx_pybuffernd_gpos.rcbuffer = &__pyx_pybuffer_gpos;
  __pyx_pybuffer_vtens.pybuffer.buf = NULL;
  __pyx_pybuffer_vtens.refcount = 0;
  __pyx_pybuffernd_vtens.data = NULL;
  __pyx_pybuffernd_vtens.rcbuffer = &__pyx_pybuffer_vtens;
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer, (PyObject*)__pyx_v_gpos, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_gpos.diminfo[0].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gpos.diminfo[0].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_gpos.diminfo[1].strides = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_gpos.diminfo[1].shape = __pyx_pybuffernd_gpos.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtens, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtens.diminfo[0].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtens.diminfo[0].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_vtens.diminfo[1].strides = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_vtens.diminfo[1].shape = __pyx_pybuffernd_vtens.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2721
 *     cdef double *my_vtens
 * 
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     if gpos is None and vtens is None:
 *         raise TypeError('Either gpos or vtens must be given.')
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2721; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2722
 * 
 *     assert deltas.flags['C_CONTIGUOUS']
 *     if gpos is None and vtens is None:             # <<<<<<<<<<<<<<
 *         raise TypeError('Either gpos or vtens must be given.')
 * 
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_gpos) == Py_None);
  if ((__pyx_t_3 != 0)) {
    __pyx_t_4 = (((PyObject *)__pyx_v_vtens) == Py_None);
    __pyx_t_5 = (__pyx_t_4 != 0);
  } else {
    __pyx_t_5 = (__pyx_t_3 != 0);
  }
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":2723
 *     assert deltas.flags['C_CONTIGUOUS']
 *     if gpos is None and vtens is None:
 *         raise TypeError('Either gpos or vtens must be given.')             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_TypeError, __pyx_k_tuple__30, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "yaff/pes/ext.pyx":2725
 *         raise TypeError('Either gpos or vtens must be given.')
 * 
 *     if gpos is None:             # <<<<<<<<<<<<<<
 *         my_gpos = NULL
 *     else:
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_gpos) == Py_None);
  __pyx_t_3 = (__pyx_t_5 != 0);
  if (__pyx_t_3) {

    /* "yaff/pes/ext.pyx":2726
 * 
 *     if gpos is None:
 *         my_gpos = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_gpos = NULL;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2728
 *         my_gpos = NULL
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert gpos.shape[1] == 3
 *         my_gpos = <double*>gpos.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gpos), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2728; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2729
 *     else:
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_gpos = <double*>gpos.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_gpos->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2730
 *         assert gpos.flags['C_CONTIGUOUS']
 *         assert gpos.shape[1] == 3
 *         my_gpos = <double*>gpos.data             # <<<<<<<<<<<<<<
 * 
 *     if vtens is None:
 */
    __pyx_v_my_gpos = ((double *)__pyx_v_gpos->data);
  }
  __pyx_L4:;

  /* "yaff/pes/ext.pyx":2732
 *         my_gpos = <double*>gpos.data
 * 
 *     if vtens is None:             # <<<<<<<<<<<<<<
 *         my_vtens = NULL
 *     else:
 */
  __pyx_t_3 = (((PyObject *)__pyx_v_vtens) == Py_None);
  __pyx_t_5 = (__pyx_t_3 != 0);
  if (__pyx_t_5) {

    /* "yaff/pes/ext.pyx":2733
 * 
 *     if vtens is None:
 *         my_vtens = NULL             # <<<<<<<<<<<<<<
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 */
    __pyx_v_my_vtens = NULL;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "yaff/pes/ext.pyx":2735
 *         my_vtens = NULL
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtens), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_5)) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2736
 *     else:
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3             # <<<<<<<<<<<<<<
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[0]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2737
 *         assert vtens.flags['C_CONTIGUOUS']
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3             # <<<<<<<<<<<<<<
 *         my_vtens = <double*>vtens.data
 * 
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(!Py_OptimizeFlag)) {
      if (unlikely(!(((__pyx_v_vtens->dimensions[1]) == 3) != 0))) {
        PyErr_SetNone(PyExc_AssertionError);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    #endif

    /* "yaff/pes/ext.pyx":2738
 *         assert vtens.shape[0] == 3
 *         assert vtens.shape[1] == 3
 *         my_vtens = <double*>vtens.data             # <<<<<<<<<<<<<<
 * 
 *     dlist.dlist_back(my_gpos, my_vtens,
 */
    __pyx_v_my_vtens = ((double *)__pyx_v_vtens->data);
  }
  __pyx_L5:;

  /* "yaff/pes/ext.pyx":2740
 *         my_vtens = <double*>vtens.data
 * 
 *     dlist.dlist_back(my_gpos, my_vtens,             # <<<<<<<<<<<<<<
 *                      <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 */
  dlist_back(__pyx_v_my_gpos, __pyx_v_my_vtens, ((dlist_row_type *)__pyx_v_deltas->data), __pyx_v_ndelta);

  /* "yaff/pes/ext.pyx":2697
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 * def dlist_back(np.ndarray[double, ndim=2] gpos,             # <<<<<<<<<<<<<<
 *                np.ndarray[double, ndim=2] vtens,
 *                np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.dlist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gpos.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtens.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2749
 * 
 * 
 * def iclist_forward(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                    np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''Compute internal coordinates based on relative vectors
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_31iclist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_30iclist_forward[] = "iclist_forward(ndarray deltas, ndarray ictab, long nic)\nCompute internal coordinates based on relative vectors\n\n       **Arguments:**\n\n       deltas\n            The delta list array (input)\n\n       ictab\n            The table with internal coordinates that must be computed (input and\n            output).\n\n       nic\n            The number of records in the ``ictab`` array to compute.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_31iclist_forward = {__Pyx_NAMESTR("iclist_forward"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31iclist_forward, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_30iclist_forward)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_31iclist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_deltas = 0;
  PyArrayObject *__pyx_v_ictab = 0;
  long __pyx_v_nic;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iclist_forward (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_deltas,&__pyx_n_s_ictab,&__pyx_n_s_nic,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_forward", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_forward", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iclist_forward") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deltas = ((PyArrayObject *)values[0]);
    __pyx_v_ictab = ((PyArrayObject *)values[1]);
    __pyx_v_nic = __Pyx_PyInt_As_long(values[2]); if (unlikely((__pyx_v_nic == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2750; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iclist_forward", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.iclist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2750; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_30iclist_forward(__pyx_self, __pyx_v_deltas, __pyx_v_ictab, __pyx_v_nic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_30iclist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, long __pyx_v_nic) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iclist_forward", 0);
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2765
 *             The number of records in the ``ictab`` array to compute.
 *     '''
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert ictab.flags['C_CONTIGUOUS']
 *     iclist.iclist_forward(<dlist.dlist_row_type*>deltas.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2766
 *     '''
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     iclist.iclist_forward(<dlist.dlist_row_type*>deltas.data,
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2766; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2767
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 *     iclist.iclist_forward(<dlist.dlist_row_type*>deltas.data,             # <<<<<<<<<<<<<<
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 * 
 */
  iclist_forward(((dlist_row_type *)__pyx_v_deltas->data), ((iclist_row_type *)__pyx_v_ictab->data), __pyx_v_nic);

  /* "yaff/pes/ext.pyx":2749
 * 
 * 
 * def iclist_forward(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                    np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''Compute internal coordinates based on relative vectors
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.iclist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2770
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 * 
 * def iclist_back(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''The back-propagation step in the internal coordinate list
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_33iclist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_32iclist_back[] = "iclist_back(ndarray deltas, ndarray ictab, long nic)\nThe back-propagation step in the internal coordinate list\n\n       deltas\n            The delta list array (output)\n\n       ictab\n            The table with internal coordinates that must be computed (input).\n\n       nic\n            The number of records in the ``ictab`` array to compute.\n\n       This routine transforms the partial derivatives of the energy towards the\n       internal coordinates, stored in ``ictab``, into partial derivatives of\n       the energy towards relative vectors, added to ``deltas``.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_33iclist_back = {__Pyx_NAMESTR("iclist_back"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_33iclist_back, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_32iclist_back)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_33iclist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_deltas = 0;
  PyArrayObject *__pyx_v_ictab = 0;
  long __pyx_v_nic;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iclist_back (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_deltas,&__pyx_n_s_ictab,&__pyx_n_s_nic,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_back", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_back", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iclist_back") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_deltas = ((PyArrayObject *)values[0]);
    __pyx_v_ictab = ((PyArrayObject *)values[1]);
    __pyx_v_nic = __Pyx_PyInt_As_long(values[2]); if (unlikely((__pyx_v_nic == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iclist_back", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.iclist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_32iclist_back(__pyx_self, __pyx_v_deltas, __pyx_v_ictab, __pyx_v_nic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_32iclist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, long __pyx_v_nic) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iclist_back", 0);
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2787
 *        the energy towards relative vectors, added to ``deltas``.
 *     '''
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert ictab.flags['C_CONTIGUOUS']
 *     iclist.iclist_back(<dlist.dlist_row_type*>deltas.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2787; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2788
 *     '''
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     iclist.iclist_back(<dlist.dlist_row_type*>deltas.data,
 *                        <iclist.iclist_row_type*>ictab.data, nic)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2788; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2788; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2789
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 *     iclist.iclist_back(<dlist.dlist_row_type*>deltas.data,             # <<<<<<<<<<<<<<
 *                        <iclist.iclist_row_type*>ictab.data, nic)
 * 
 */
  iclist_back(((dlist_row_type *)__pyx_v_deltas->data), ((iclist_row_type *)__pyx_v_ictab->data), __pyx_v_nic);

  /* "yaff/pes/ext.pyx":2770
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 * 
 * def iclist_back(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''The back-propagation step in the internal coordinate list
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.iclist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2793
 * 
 * 
 * def iclist_jacobian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] jacobian, long nic):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_35iclist_jacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_34iclist_jacobian[] = "iclist_jacobian(ndarray deltas, ndarray ictab, ndarray jacobian, long nic)\nThe back-propagation step in the internal coordinate list\n\n       deltas\n            The delta list array (output)\n\n       ictab\n            The table with internal coordinates that must be computed (input).\n\n       nic\n            The number of records in the ``ictab`` array to compute.\n\n       This routine transforms the partial derivatives of the energy towards the\n       internal coordinates, stored in ``ictab``, into partial derivatives of\n       the energy towards relative vectors, added to ``deltas``.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_35iclist_jacobian = {__Pyx_NAMESTR("iclist_jacobian"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_35iclist_jacobian, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_34iclist_jacobian)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_35iclist_jacobian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_deltas = 0;
  PyArrayObject *__pyx_v_ictab = 0;
  PyArrayObject *__pyx_v_jacobian = 0;
  long __pyx_v_nic;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iclist_jacobian (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_deltas,&__pyx_n_s_ictab,&__pyx_n_s_jacobian,&__pyx_n_s_nic,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_jacobian", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_jacobian)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_jacobian", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_jacobian", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iclist_jacobian") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deltas = ((PyArrayObject *)values[0]);
    __pyx_v_ictab = ((PyArrayObject *)values[1]);
    __pyx_v_jacobian = ((PyArrayObject *)values[2]);
    __pyx_v_nic = __Pyx_PyInt_As_long(values[3]); if (unlikely((__pyx_v_nic == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iclist_jacobian", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.iclist_jacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_jacobian), __pyx_ptype_5numpy_ndarray, 1, "jacobian", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_34iclist_jacobian(__pyx_self, __pyx_v_deltas, __pyx_v_ictab, __pyx_v_jacobian, __pyx_v_nic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_34iclist_jacobian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_jacobian, long __pyx_v_nic) {
  long __pyx_v__c_ndelta;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_jacobian;
  __Pyx_Buffer __pyx_pybuffer_jacobian;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iclist_jacobian", 0);
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  __pyx_pybuffer_jacobian.pybuffer.buf = NULL;
  __pyx_pybuffer_jacobian.refcount = 0;
  __pyx_pybuffernd_jacobian.data = NULL;
  __pyx_pybuffernd_jacobian.rcbuffer = &__pyx_pybuffer_jacobian;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_jacobian.rcbuffer->pybuffer, (PyObject*)__pyx_v_jacobian, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_jacobian.diminfo[0].strides = __pyx_pybuffernd_jacobian.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_jacobian.diminfo[0].shape = __pyx_pybuffernd_jacobian.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_jacobian.diminfo[1].strides = __pyx_pybuffernd_jacobian.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_jacobian.diminfo[1].shape = __pyx_pybuffernd_jacobian.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2812
 *     '''
 *     cdef long _c_ndelta
 *     _c_ndelta = jacobian.shape[1]             # <<<<<<<<<<<<<<
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 */
  __pyx_v__c_ndelta = (__pyx_v_jacobian->dimensions[1]);

  /* "yaff/pes/ext.pyx":2813
 *     cdef long _c_ndelta
 *     _c_ndelta = jacobian.shape[1]
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert jacobian.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2813; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2814
 *     _c_ndelta = jacobian.shape[1]
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert jacobian.flags['C_CONTIGUOUS']
 *     assert jacobian.shape[0] == nic
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2815
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert jacobian.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert jacobian.shape[0] == nic
 *     iclist.iclist_jacobian(<dlist.dlist_row_type*>deltas.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_jacobian), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2816
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert jacobian.flags['C_CONTIGUOUS']
 *     assert jacobian.shape[0] == nic             # <<<<<<<<<<<<<<
 *     iclist.iclist_jacobian(<dlist.dlist_row_type*>deltas.data,
 *                        <iclist.iclist_row_type*>ictab.data, nic, _c_ndelta, <double*>jacobian.data)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_jacobian->dimensions[0]) == __pyx_v_nic) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2817
 *     assert jacobian.flags['C_CONTIGUOUS']
 *     assert jacobian.shape[0] == nic
 *     iclist.iclist_jacobian(<dlist.dlist_row_type*>deltas.data,             # <<<<<<<<<<<<<<
 *                        <iclist.iclist_row_type*>ictab.data, nic, _c_ndelta, <double*>jacobian.data)
 * 
 */
  iclist_jacobian(((dlist_row_type *)__pyx_v_deltas->data), ((iclist_row_type *)__pyx_v_ictab->data), __pyx_v_nic, __pyx_v__c_ndelta, ((double *)__pyx_v_jacobian->data));

  /* "yaff/pes/ext.pyx":2793
 * 
 * 
 * def iclist_jacobian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] jacobian, long nic):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_jacobian.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.iclist_jacobian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_jacobian.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2821
 * 
 * 
 * def iclist_hessian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] hessian, long nic):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_37iclist_hessian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_36iclist_hessian[] = "iclist_hessian(ndarray deltas, ndarray ictab, ndarray hessian, long nic)\nThe back-propagation step in the internal coordinate list\n\n       deltas\n            The delta list array (output)\n\n       ictab\n            The table with internal coordinates that must be computed (input).\n\n       nic\n            The number of records in the ``ictab`` array to compute.\n\n       This routine transforms the partial derivatives of the energy towards the\n       internal coordinates, stored in ``ictab``, into partial derivatives of\n       the energy towards relative vectors, added to ``deltas``.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_37iclist_hessian = {__Pyx_NAMESTR("iclist_hessian"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_37iclist_hessian, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_36iclist_hessian)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_37iclist_hessian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_deltas = 0;
  PyArrayObject *__pyx_v_ictab = 0;
  PyArrayObject *__pyx_v_hessian = 0;
  long __pyx_v_nic;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("iclist_hessian (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_deltas,&__pyx_n_s_ictab,&__pyx_n_s_hessian,&__pyx_n_s_nic,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_deltas)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_hessian", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hessian)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_hessian", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nic)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("iclist_hessian", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "iclist_hessian") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_deltas = ((PyArrayObject *)values[0]);
    __pyx_v_ictab = ((PyArrayObject *)values[1]);
    __pyx_v_hessian = ((PyArrayObject *)values[2]);
    __pyx_v_nic = __Pyx_PyInt_As_long(values[3]); if (unlikely((__pyx_v_nic == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2823; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("iclist_hessian", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.iclist_hessian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_deltas), __pyx_ptype_5numpy_ndarray, 1, "deltas", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hessian), __pyx_ptype_5numpy_ndarray, 1, "hessian", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_36iclist_hessian(__pyx_self, __pyx_v_deltas, __pyx_v_ictab, __pyx_v_hessian, __pyx_v_nic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_36iclist_hessian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_deltas, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_hessian, long __pyx_v_nic) {
  long __pyx_v__c_ndelta;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltas;
  __Pyx_Buffer __pyx_pybuffer_deltas;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hessian;
  __Pyx_Buffer __pyx_pybuffer_hessian;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("iclist_hessian", 0);
  __pyx_pybuffer_deltas.pybuffer.buf = NULL;
  __pyx_pybuffer_deltas.refcount = 0;
  __pyx_pybuffernd_deltas.data = NULL;
  __pyx_pybuffernd_deltas.rcbuffer = &__pyx_pybuffer_deltas;
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  __pyx_pybuffer_hessian.pybuffer.buf = NULL;
  __pyx_pybuffer_hessian.refcount = 0;
  __pyx_pybuffernd_hessian.data = NULL;
  __pyx_pybuffernd_hessian.rcbuffer = &__pyx_pybuffer_hessian;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltas, &__Pyx_TypeInfo_nn_dlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_deltas.diminfo[0].strides = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltas.diminfo[0].shape = __pyx_pybuffernd_deltas.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer, (PyObject*)__pyx_v_hessian, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hessian.diminfo[0].strides = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hessian.diminfo[0].shape = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hessian.diminfo[1].strides = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hessian.diminfo[1].shape = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2840
 *     '''
 *     cdef long _c_ndelta
 *     _c_ndelta = hessian.shape[1]             # <<<<<<<<<<<<<<
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 */
  __pyx_v__c_ndelta = (__pyx_v_hessian->dimensions[1]);

  /* "yaff/pes/ext.pyx":2841
 *     cdef long _c_ndelta
 *     _c_ndelta = hessian.shape[1]
 *     assert deltas.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert hessian.flags['C_CONTIGUOUS']
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_deltas), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2841; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2842
 *     _c_ndelta = hessian.shape[1]
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert hessian.flags['C_CONTIGUOUS']
 *     assert hessian.shape[0] == _c_ndelta
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2842; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2843
 *     assert deltas.flags['C_CONTIGUOUS']
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert hessian.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert hessian.shape[0] == _c_ndelta
 *     iclist.iclist_hessian(<dlist.dlist_row_type*>deltas.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_hessian), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2844
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert hessian.flags['C_CONTIGUOUS']
 *     assert hessian.shape[0] == _c_ndelta             # <<<<<<<<<<<<<<
 *     iclist.iclist_hessian(<dlist.dlist_row_type*>deltas.data,
 *                        <iclist.iclist_row_type*>ictab.data, nic, _c_ndelta, <double*>hessian.data)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_hessian->dimensions[0]) == __pyx_v__c_ndelta) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2845
 *     assert hessian.flags['C_CONTIGUOUS']
 *     assert hessian.shape[0] == _c_ndelta
 *     iclist.iclist_hessian(<dlist.dlist_row_type*>deltas.data,             # <<<<<<<<<<<<<<
 *                        <iclist.iclist_row_type*>ictab.data, nic, _c_ndelta, <double*>hessian.data)
 * 
 */
  iclist_hessian(((dlist_row_type *)__pyx_v_deltas->data), ((iclist_row_type *)__pyx_v_ictab->data), __pyx_v_nic, __pyx_v__c_ndelta, ((double *)__pyx_v_hessian->data));

  /* "yaff/pes/ext.pyx":2821
 * 
 * 
 * def iclist_hessian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] hessian, long nic):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.iclist_hessian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltas.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2854
 * 
 * 
 * def vlist_forward(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                   np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''Computes valence energy terms based on a list of internal coordinates
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_39vlist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_38vlist_forward[] = "vlist_forward(ndarray ictab, ndarray vtab, long nv)\nComputes valence energy terms based on a list of internal coordinates\n\n       **Arguments:**\n\n       ictab\n            The table with internal coordinates (input).\n\n       vtab\n            The table with covalent energy terms (input and output).\n\n       nv\n            The number of records to consider in ``vtab``.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_39vlist_forward = {__Pyx_NAMESTR("vlist_forward"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_39vlist_forward, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_38vlist_forward)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_39vlist_forward(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ictab = 0;
  PyArrayObject *__pyx_v_vtab = 0;
  long __pyx_v_nv;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vlist_forward (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ictab,&__pyx_n_s_vtab,&__pyx_n_s_nv,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_forward", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_forward", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "vlist_forward") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_ictab = ((PyArrayObject *)values[0]);
    __pyx_v_vtab = ((PyArrayObject *)values[1]);
    __pyx_v_nv = __Pyx_PyInt_As_long(values[2]); if (unlikely((__pyx_v_nv == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vlist_forward", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.vlist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtab), __pyx_ptype_5numpy_ndarray, 1, "vtab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_38vlist_forward(__pyx_self, __pyx_v_ictab, __pyx_v_vtab, __pyx_v_nv);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_38vlist_forward(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtab;
  __Pyx_Buffer __pyx_pybuffer_vtab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("vlist_forward", 0);
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  __pyx_pybuffer_vtab.pybuffer.buf = NULL;
  __pyx_pybuffer_vtab.refcount = 0;
  __pyx_pybuffernd_vtab.data = NULL;
  __pyx_pybuffernd_vtab.rcbuffer = &__pyx_pybuffer_vtab;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtab, &__Pyx_TypeInfo_nn_vlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtab.diminfo[0].strides = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtab.diminfo[0].shape = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2869
 *             The number of records to consider in ``vtab``.
 *     '''
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert vtab.flags['C_CONTIGUOUS']
 *     return vlist.vlist_forward(<iclist.iclist_row_type*>ictab.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2869; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2870
 *     '''
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     return vlist.vlist_forward(<iclist.iclist_row_type*>ictab.data,
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2871
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']
 *     return vlist.vlist_forward(<iclist.iclist_row_type*>ictab.data,             # <<<<<<<<<<<<<<
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "yaff/pes/ext.pyx":2872
 *     assert vtab.flags['C_CONTIGUOUS']
 *     return vlist.vlist_forward(<iclist.iclist_row_type*>ictab.data,
 *                                <vlist.vlist_row_type*>vtab.data, nv)             # <<<<<<<<<<<<<<
 * 
 * def vlist_back(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 */
  __pyx_t_1 = PyFloat_FromDouble(vlist_forward(((iclist_row_type *)__pyx_v_ictab->data), ((vlist_row_type *)__pyx_v_vtab->data), __pyx_v_nv)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2854
 * 
 * 
 * def vlist_forward(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                   np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''Computes valence energy terms based on a list of internal coordinates
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.vlist_forward", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2874
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_back(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''The back-propagation step in the valence list.
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_41vlist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_40vlist_back[] = "vlist_back(ndarray ictab, ndarray vtab, long nv)\nThe back-propagation step in the valence list.\n\n       **Arguments:**\n\n       ictab\n            The table with internal coordinates (output).\n\n       vtab\n            The table with covalent energy terms (input).\n\n       nv\n            The number of records to consider in ``vtab``.\n\n       This routine computes the derivatives of the energy of each term towards\n       the internal coordinates and adds the results to the ``ictab`` array.\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_41vlist_back = {__Pyx_NAMESTR("vlist_back"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_41vlist_back, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_40vlist_back)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_41vlist_back(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ictab = 0;
  PyArrayObject *__pyx_v_vtab = 0;
  long __pyx_v_nv;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vlist_back (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ictab,&__pyx_n_s_vtab,&__pyx_n_s_nv,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_back", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_back", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "vlist_back") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_ictab = ((PyArrayObject *)values[0]);
    __pyx_v_vtab = ((PyArrayObject *)values[1]);
    __pyx_v_nv = __Pyx_PyInt_As_long(values[2]); if (unlikely((__pyx_v_nv == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2875; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vlist_back", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.vlist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtab), __pyx_ptype_5numpy_ndarray, 1, "vtab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_40vlist_back(__pyx_self, __pyx_v_ictab, __pyx_v_vtab, __pyx_v_nv);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_40vlist_back(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtab;
  __Pyx_Buffer __pyx_pybuffer_vtab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("vlist_back", 0);
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  __pyx_pybuffer_vtab.pybuffer.buf = NULL;
  __pyx_pybuffer_vtab.refcount = 0;
  __pyx_pybuffernd_vtab.data = NULL;
  __pyx_pybuffernd_vtab.rcbuffer = &__pyx_pybuffer_vtab;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtab, &__Pyx_TypeInfo_nn_vlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtab.diminfo[0].strides = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtab.diminfo[0].shape = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.shape[0];

  /* "yaff/pes/ext.pyx":2892
 *        the internal coordinates and adds the results to the ``ictab`` array.
 *     '''
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert vtab.flags['C_CONTIGUOUS']
 *     vlist.vlist_back(<iclist.iclist_row_type*>ictab.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2892; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2893
 *     '''
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     vlist.vlist_back(<iclist.iclist_row_type*>ictab.data,
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2893; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2894
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']
 *     vlist.vlist_back(<iclist.iclist_row_type*>ictab.data,             # <<<<<<<<<<<<<<
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 * 
 */
  vlist_back(((iclist_row_type *)__pyx_v_ictab->data), ((vlist_row_type *)__pyx_v_vtab->data), __pyx_v_nv);

  /* "yaff/pes/ext.pyx":2874
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_back(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''The back-propagation step in the valence list.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.vlist_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2897
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_hessian(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv,
 *                np.ndarray[double, ndim=2] hessian):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_43vlist_hessian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_42vlist_hessian[] = "vlist_hessian(ndarray ictab, ndarray vtab, long nv, ndarray hessian)\nCompute second derivative of valence terms wrt internal coordinates\n\n       **Arguments:**\n\n       ictab\n            The table with internal coordinates (output).\n\n       vtab\n            The table with covalent energy terms (input).\n\n       nv\n            The number of records to consider in ``vtab``.\n\n       hessian\n            NumPy array (nic,nic) to store the second derivatives\n    ";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_43vlist_hessian = {__Pyx_NAMESTR("vlist_hessian"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_43vlist_hessian, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_42vlist_hessian)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_43vlist_hessian(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_ictab = 0;
  PyArrayObject *__pyx_v_vtab = 0;
  long __pyx_v_nv;
  PyArrayObject *__pyx_v_hessian = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("vlist_hessian (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ictab,&__pyx_n_s_vtab,&__pyx_n_s_nv,&__pyx_n_s_hessian,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ictab)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vtab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_hessian", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_nv)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_hessian", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_hessian)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("vlist_hessian", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "vlist_hessian") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_ictab = ((PyArrayObject *)values[0]);
    __pyx_v_vtab = ((PyArrayObject *)values[1]);
    __pyx_v_nv = __Pyx_PyInt_As_long(values[2]); if (unlikely((__pyx_v_nv == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_hessian = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("vlist_hessian", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.vlist_hessian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ictab), __pyx_ptype_5numpy_ndarray, 1, "ictab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vtab), __pyx_ptype_5numpy_ndarray, 1, "vtab", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hessian), __pyx_ptype_5numpy_ndarray, 1, "hessian", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2899; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_42vlist_hessian(__pyx_self, __pyx_v_ictab, __pyx_v_vtab, __pyx_v_nv, __pyx_v_hessian);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_42vlist_hessian(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_ictab, PyArrayObject *__pyx_v_vtab, long __pyx_v_nv, PyArrayObject *__pyx_v_hessian) {
  long __pyx_v__c_nic;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_hessian;
  __Pyx_Buffer __pyx_pybuffer_hessian;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ictab;
  __Pyx_Buffer __pyx_pybuffer_ictab;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_vtab;
  __Pyx_Buffer __pyx_pybuffer_vtab;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("vlist_hessian", 0);
  __pyx_pybuffer_ictab.pybuffer.buf = NULL;
  __pyx_pybuffer_ictab.refcount = 0;
  __pyx_pybuffernd_ictab.data = NULL;
  __pyx_pybuffernd_ictab.rcbuffer = &__pyx_pybuffer_ictab;
  __pyx_pybuffer_vtab.pybuffer.buf = NULL;
  __pyx_pybuffer_vtab.refcount = 0;
  __pyx_pybuffernd_vtab.data = NULL;
  __pyx_pybuffernd_vtab.rcbuffer = &__pyx_pybuffer_vtab;
  __pyx_pybuffer_hessian.pybuffer.buf = NULL;
  __pyx_pybuffer_hessian.refcount = 0;
  __pyx_pybuffernd_hessian.data = NULL;
  __pyx_pybuffernd_hessian.rcbuffer = &__pyx_pybuffer_hessian;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer, (PyObject*)__pyx_v_ictab, &__Pyx_TypeInfo_nn_iclist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_ictab.diminfo[0].strides = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ictab.diminfo[0].shape = __pyx_pybuffernd_ictab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[2];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer, (PyObject*)__pyx_v_vtab, &__Pyx_TypeInfo_nn_vlist_row_type, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_vtab.diminfo[0].strides = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_vtab.diminfo[0].shape = __pyx_pybuffernd_vtab.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer, (PyObject*)__pyx_v_hessian, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_hessian.diminfo[0].strides = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_hessian.diminfo[0].shape = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_hessian.diminfo[1].strides = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_hessian.diminfo[1].shape = __pyx_pybuffernd_hessian.rcbuffer->pybuffer.shape[1];

  /* "yaff/pes/ext.pyx":2917
 *     '''
 *     cdef long _c_nic
 *     _c_nic = hessian.shape[0]             # <<<<<<<<<<<<<<
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']
 */
  __pyx_v__c_nic = (__pyx_v_hessian->dimensions[0]);

  /* "yaff/pes/ext.pyx":2918
 *     cdef long _c_nic
 *     _c_nic = hessian.shape[0]
 *     assert ictab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert vtab.flags['C_CONTIGUOUS']
 *     vlist.vlist_hessian(<iclist.iclist_row_type*>ictab.data,
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ictab), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2919
 *     _c_nic = hessian.shape[0]
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     vlist.vlist_hessian(<iclist.iclist_row_type*>ictab.data,
 *                      <vlist.vlist_row_type*>vtab.data, nv, _c_nic, <double*>hessian.data)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_vtab), __pyx_n_s_flags); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_GetItem(__pyx_t_2, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2920
 *     assert ictab.flags['C_CONTIGUOUS']
 *     assert vtab.flags['C_CONTIGUOUS']
 *     vlist.vlist_hessian(<iclist.iclist_row_type*>ictab.data,             # <<<<<<<<<<<<<<
 *                      <vlist.vlist_row_type*>vtab.data, nv, _c_nic, <double*>hessian.data)
 * 
 */
  vlist_hessian(((iclist_row_type *)__pyx_v_ictab->data), ((vlist_row_type *)__pyx_v_vtab->data), __pyx_v_nv, __pyx_v__c_nic, ((double *)__pyx_v_hessian->data));

  /* "yaff/pes/ext.pyx":2897
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_hessian(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv,
 *                np.ndarray[double, ndim=2] hessian):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.vlist_hessian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_hessian.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ictab.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_vtab.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "yaff/pes/ext.pyx":2927
 * #
 * 
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):             # <<<<<<<<<<<<<<
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3
 */

/* Python wrapper */
static PyObject *__pyx_pw_4yaff_3pes_3ext_45compute_grid3d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_4yaff_3pes_3ext_44compute_grid3d[] = "compute_grid3d(ndarray center, Cell unitcell, ndarray egrid)";
static PyMethodDef __pyx_mdef_4yaff_3pes_3ext_45compute_grid3d = {__Pyx_NAMESTR("compute_grid3d"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_45compute_grid3d, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_44compute_grid3d)};
static PyObject *__pyx_pw_4yaff_3pes_3ext_45compute_grid3d(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_center = 0;
  struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell = 0;
  PyArrayObject *__pyx_v_egrid = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_grid3d (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_center,&__pyx_n_s_unitcell,&__pyx_n_s_egrid,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_center)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_unitcell)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_grid3d", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_egrid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_grid3d", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_grid3d") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_center = ((PyArrayObject *)values[0]);
    __pyx_v_unitcell = ((struct __pyx_obj_4yaff_3pes_3ext_Cell *)values[1]);
    __pyx_v_egrid = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_grid3d", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yaff.pes.ext.compute_grid3d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_center), __pyx_ptype_5numpy_ndarray, 1, "center", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_unitcell), __pyx_ptype_4yaff_3pes_3ext_Cell, 1, "unitcell", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_egrid), __pyx_ptype_5numpy_ndarray, 1, "egrid", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4yaff_3pes_3ext_44compute_grid3d(__pyx_self, __pyx_v_center, __pyx_v_unitcell, __pyx_v_egrid);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4yaff_3pes_3ext_44compute_grid3d(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_center, struct __pyx_obj_4yaff_3pes_3ext_Cell *__pyx_v_unitcell, PyArrayObject *__pyx_v_egrid) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_center;
  __Pyx_Buffer __pyx_pybuffer_center;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_egrid;
  __Pyx_Buffer __pyx_pybuffer_egrid;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_grid3d", 0);
  __pyx_pybuffer_center.pybuffer.buf = NULL;
  __pyx_pybuffer_center.refcount = 0;
  __pyx_pybuffernd_center.data = NULL;
  __pyx_pybuffernd_center.rcbuffer = &__pyx_pybuffer_center;
  __pyx_pybuffer_egrid.pybuffer.buf = NULL;
  __pyx_pybuffer_egrid.refcount = 0;
  __pyx_pybuffernd_egrid.data = NULL;
  __pyx_pybuffernd_egrid.rcbuffer = &__pyx_pybuffer_egrid;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_center.rcbuffer->pybuffer, (PyObject*)__pyx_v_center, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_center.diminfo[0].strides = __pyx_pybuffernd_center.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_center.diminfo[0].shape = __pyx_pybuffernd_center.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_egrid.rcbuffer->pybuffer, (PyObject*)__pyx_v_egrid, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_egrid.diminfo[0].strides = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_egrid.diminfo[0].shape = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_egrid.diminfo[1].strides = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_egrid.diminfo[1].shape = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_egrid.diminfo[2].strides = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_egrid.diminfo[2].shape = __pyx_pybuffernd_egrid.rcbuffer->pybuffer.shape[2];

  /* "yaff/pes/ext.pyx":2928
 * 
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):
 *     assert center.flags['C_CONTIGUOUS']             # <<<<<<<<<<<<<<
 *     assert center.shape[0] == 3
 *     return grid.compute_grid3d(<double*>center.data, unitcell._c_cell, <double*>egrid.data, <long*>egrid.shape)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_center), __pyx_n_s_flags); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_GetItem(__pyx_t_1, __pyx_n_s_C_CONTIGUOUS); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2928; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2929
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3             # <<<<<<<<<<<<<<
 *     return grid.compute_grid3d(<double*>center.data, unitcell._c_cell, <double*>egrid.data, <long*>egrid.shape)
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!(((__pyx_v_center->dimensions[0]) == 3) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2929; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif

  /* "yaff/pes/ext.pyx":2930
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3
 *     return grid.compute_grid3d(<double*>center.data, unitcell._c_cell, <double*>egrid.data, <long*>egrid.shape)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(compute_grid3d(((double *)__pyx_v_center->data), __pyx_v_unitcell->_c_cell, ((double *)__pyx_v_egrid->data), ((long *)__pyx_v_egrid->dimensions))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "yaff/pes/ext.pyx":2927
 * #
 * 
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):             # <<<<<<<<<<<<<<
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_center.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_egrid.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yaff.pes.ext.compute_grid3d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_center.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_egrid.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":194
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":200
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":203
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":204
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":206
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":208
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":209
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":211
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":213
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_1 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":214
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
    __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":215
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__31, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":217
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_3 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_3) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":218
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":219
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__32, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":221
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":222
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":223
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_2 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_2) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":226
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":227
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":228
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_5 = __pyx_v_ndim;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":229
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":230
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }
    goto __pyx_L7;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":232
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":233
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L7:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":234
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":235
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":236
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":239
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":240
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __pyx_t_4 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":244
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":246
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
    __pyx_t_3 = ((!(__pyx_v_copy_shape != 0)) != 0);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":248
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L10;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":251
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L10:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":253
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":254
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_5 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_5;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":255
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_1 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (__pyx_t_1) {
      __pyx_t_2 = (__pyx_v_little_endian != 0);
    } else {
      __pyx_t_2 = __pyx_t_1;
    }
    if (!__pyx_t_2) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":256
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      __pyx_t_1 = ((__pyx_v_descr->byteorder == '<') != 0);
      if (__pyx_t_1) {
        __pyx_t_3 = ((!(__pyx_v_little_endian != 0)) != 0);
        __pyx_t_7 = __pyx_t_3;
      } else {
        __pyx_t_7 = __pyx_t_1;
      }
      __pyx_t_1 = __pyx_t_7;
    } else {
      __pyx_t_1 = __pyx_t_2;
    }
    if (__pyx_t_1) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":257
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__33, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    switch (__pyx_v_t) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":258
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":259
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":260
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":261
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":262
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyNumber_Remainder(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
      __Pyx_GIVEREF(__pyx_t_8);
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":277
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":278
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":280
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":281
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":282
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":283
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_9;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":286
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":194
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":288
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":289
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":290
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":291
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":292
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":288
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":769
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":771
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":772
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":771
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":774
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":775
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":774
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":777
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":777
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":780
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":780
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":783
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  long __pyx_t_12;
  char *__pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":790
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":791
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(PyTuple_CheckExact(__pyx_v_fields))) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else if (1) {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    } else
    {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(__pyx_v_fields); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_4 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_6 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_7)) < 15) != 0);
    if (__pyx_t_8) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = PyObject_Call(__pyx_builtin_RuntimeError, __pyx_k_tuple__34, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_8 = ((__pyx_v_child->byteorder == '>') != 0);
    if (__pyx_t_8) {
      __pyx_t_9 = (__pyx_v_little_endian != 0);
    } else {
      __pyx_t_9 = __pyx_t_8;
    }
    if (!__pyx_t_9) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      __pyx_t_8 = ((__pyx_v_child->byteorder == '<') != 0);
      if (__pyx_t_8) {
        __pyx_t_10 = ((!(__pyx_v_little_endian != 0)) != 0);
        __pyx_t_11 = __pyx_t_10;
      } else {
        __pyx_t_11 = __pyx_t_8;
      }
      __pyx_t_8 = __pyx_t_11;
    } else {
      __pyx_t_8 = __pyx_t_9;
    }
    if (__pyx_t_8) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_k_tuple__35, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_8) break;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_12 = 0;
      (__pyx_v_offset[__pyx_t_12]) = ((__pyx_v_offset[__pyx_t_12]) + 1);
    }

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_12 = 0;
    (__pyx_v_offset[__pyx_t_12]) = ((__pyx_v_offset[__pyx_t_12]) + __pyx_v_child->elsize);

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_8 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_8) {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_8 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_8) {

        /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = PyObject_Call(__pyx_builtin_RuntimeError, __pyx_k_tuple__36, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_8) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L13;
      }
      /*else*/ {

        /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_3 = PyNumber_Remainder(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L13:;

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L11;
    }
    /*else*/ {

      /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_13 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_13 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_13;
    }
    __pyx_L11:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":783
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":965
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":967
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":968
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":970
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":971
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":972
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":973
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":965
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":975
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":976
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":979
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":975
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot __pyx_vtable_4yaff_3pes_3ext_PairPot;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPot(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPot *)o);
  p->__pyx_vtab = __pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  p->tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None); Py_INCREF(Py_None);
  p->sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_7PairPot_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPot *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPot *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yaff_3pes_3ext_7PairPot_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->tr);
  Py_CLEAR(p->sw);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPot *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPot *)o;
  if (p->tr) {
    e = (*v)(((PyObject*)p->tr), a); if (e) return e;
  }
  if (p->sw) {
    e = (*v)(((PyObject*)p->sw), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPot(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPot *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPot *)o;
  tmp = ((PyObject*)p->tr);
  p->tr = ((struct __pyx_obj_4yaff_3pes_3ext_Truncation *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->sw);
  p->sw = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPot[] = {
  {__Pyx_NAMESTR("_get_rcut"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7PairPot_5_get_rcut, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7PairPot_4_get_rcut)},
  {__Pyx_NAMESTR("get_truncation"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7PairPot_7get_truncation, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7PairPot_6get_truncation)},
  {__Pyx_NAMESTR("get_switchon"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7PairPot_9get_switchon, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7PairPot_8get_switchon)},
  {__Pyx_NAMESTR("compute"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7PairPot_11compute, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7PairPot_10compute)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPot = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPot"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPot), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Base class for the pair potentials"), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPot, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPot, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPot, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJ __pyx_vtable_4yaff_3pes_3ext_PairPotLJ;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotLJ(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotLJ;
  p->_c_sigmas = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_epsilons = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotLJ(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_sigmas);
  Py_CLEAR(p->_c_epsilons);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotLJ(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_sigmas) {
    e = (*v)(((PyObject*)p->_c_sigmas), a); if (e) return e;
  }
  if (p->_c_epsilons) {
    e = (*v)(((PyObject*)p->_c_epsilons), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotLJ(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_sigmas);
  p->_c_sigmas = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_epsilons);
  p->_c_epsilons = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotLJ[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotLJ_2log)},
  {__Pyx_NAMESTR("_get_sigmas"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_5_get_sigmas, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotLJ_4_get_sigmas)},
  {__Pyx_NAMESTR("_get_epsilons"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotLJ_7_get_epsilons, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotLJ_6_get_epsilons)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotLJ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotLJ"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJ), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotLJ, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Lennard-Jones pair potential:\n\n       **Energy:**\n\n       .. math:: E_\\text{LJ} = \\sum_{i=1}^{N} \\sum_{j=i+1}^{N} 4 s_{ij} \\epsilon_{ij} \\left[\n                 \\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right)^6\n                 \\right]\n\n       with\n\n       .. math:: \\epsilon_{ij} = \\sqrt{\\epsilon_i \\epsilon_j}\n\n       .. math:: \\sigma_{ij} = \\frac{\\sigma_i + \\sigma_j}{2}\n\n       .. math:: s_{ij} = \\text{the short-range scaling factor}\n\n\n       **Arguments:**\n\n       sigmas\n            An array with sigma parameters, one for each atom, shape (natom,)\n\n       epsilons\n            An array with epsilon parameters, one for each atom, shape (natom,)\n\n       rcut\n            The cutoff radius\n\n       **Optional arguments:**\n\n       tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotLJ, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotLJ, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotLJ, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotLJ, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Truncation(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_Truncation(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yaff_3pes_3ext_10Truncation_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_Truncation[] = {
  {__Pyx_NAMESTR("trunc_fn"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_10Truncation_3trunc_fn, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10Truncation_2trunc_fn)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_Truncation = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.Truncation"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_Truncation), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_Truncation, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Base class for truncation schemes of pairwise interactions"), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_Truncation, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_Truncation, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Hammer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_Truncation(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_6Hammer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_Hammer[] = {
  {__Pyx_NAMESTR("_get_tau"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_6Hammer_3_get_tau, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_6Hammer_2_get_tau)},
  {__Pyx_NAMESTR("get_log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_6Hammer_5get_log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_6Hammer_4get_log)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_Hammer = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.Hammer"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_Hammer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_Truncation, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("An old-fashioned and poor truncation scheme.\n\n       **Arguments:**\n\n       tau\n            The tau parameter in the mathematical expression below.\n\n       Don't use this truncation scheme. Only present for historical reasons.\n       The mathematical form is as follows:\n\n       .. math:: t_\\text{hammer}(d) = \\left\\lbrace \\begin{array}{ll}\n                     \\exp\\left(\\frac{\\tau}{d-r_\\text{rcut}}\\right) & \\text{if } d < r_\\text{cut} \\\\\n                     0 & \\text{if } d >= r_\\text{cut}\n                 \\end{array} \\right.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_Hammer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_Hammer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotMM3 __pyx_vtable_4yaff_3pes_3ext_PairPotMM3;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotMM3(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotMM3;
  p->_c_sigmas = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_epsilons = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_onlypaulis = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotMM3(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_sigmas);
  Py_CLEAR(p->_c_epsilons);
  Py_CLEAR(p->_c_onlypaulis);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotMM3(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_sigmas) {
    e = (*v)(((PyObject*)p->_c_sigmas), a); if (e) return e;
  }
  if (p->_c_epsilons) {
    e = (*v)(((PyObject*)p->_c_epsilons), a); if (e) return e;
  }
  if (p->_c_onlypaulis) {
    e = (*v)(((PyObject*)p->_c_onlypaulis), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotMM3(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3 *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_sigmas);
  p->_c_sigmas = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_epsilons);
  p->_c_epsilons = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_onlypaulis);
  p->_c_onlypaulis = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotMM3[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10PairPotMM3_2log)},
  {__Pyx_NAMESTR("_get_sigmas"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_5_get_sigmas, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10PairPotMM3_4_get_sigmas)},
  {__Pyx_NAMESTR("_get_epsilons"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_7_get_epsilons, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10PairPotMM3_6_get_epsilons)},
  {__Pyx_NAMESTR("_get_onlypaulis"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_10PairPotMM3_9_get_onlypaulis, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_10PairPotMM3_8_get_onlypaulis)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotMM3 = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotMM3"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotMM3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotMM3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("The MM3 version of the Lennard-Jones pair potential\n\n       **Energy:**\n\n       .. math:: E_\\text{MM3} = \\sum_{i=1}^{N} \\sum_{j=i+1}^{N} s_{ij} \\epsilon_{ij} \\left[\n                 1.84\\times10^{5} \\exp\\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right) - 2.25\\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right)^6\n                 \\right]\n\n       with\n\n       .. math:: \\epsilon_{ij} = \\sqrt{\\epsilon_i \\epsilon_j}\n\n       .. math:: \\sigma_{ij} = \\frac{\\sigma_i + \\sigma_j}{2}\n\n       .. math:: s_{ij} = \\text{the short-range scaling factor}\n\n       **Arguments:**\n\n       sigmas\n            An array with sigma parameters, one for each atom, shape (natom,)\n\n       epsilons\n            An array with epsilon parameters, one for each atom, shape (natom,)\n\n       onlypaulis\n            An array integers. When non-zero for both atoms in a pair, only the\n            repulsive wall is computed.\n\n       rcut\n            The cutoff radius\n\n       **Optional arguments:**\n\n       tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotMM3, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotMM3, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotMM3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotMM3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr __pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_slater1s_widths);
  Py_CLEAR(p->_c_slater1s_N);
  Py_CLEAR(p->_c_slater1s_Z);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_slater1s_widths) {
    e = (*v)(((PyObject*)p->_c_slater1s_widths), a); if (e) return e;
  }
  if (p->_c_slater1s_N) {
    e = (*v)(((PyObject*)p->_c_slater1s_N), a); if (e) return e;
  }
  if (p->_c_slater1s_Z) {
    e = (*v)(((PyObject*)p->_c_slater1s_Z), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_slater1s_widths);
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_N);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_Z);
  p->_c_slater1s_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_2log)},
  {__Pyx_NAMESTR("_get_slater1s_widths"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_5_get_slater1s_widths, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_4_get_slater1s_widths)},
  {__Pyx_NAMESTR("_get_slater1s_N"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_7_get_slater1s_N, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_6_get_slater1s_N)},
  {__Pyx_NAMESTR("_get_slater1s_Z"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_9_get_slater1s_Z, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_23PairPotEiSlater1s1sCorr_8_get_slater1s_Z)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotEiSlater1s1sCorr"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Electrostatic interaction between sites with a point core charge and a\n        1s Slater charge density MINUS the electrostatic interaction between\n        the resulting net point charges.\n        TODO: explain this properly\n\n        **Arguments:**\n\n        slater1s_widths\n            An array of Slater widths, shape = (natom,)\n\n        slater1s_N\n            An array of Slater populations, shape = (natom,)\n\n        slater1s_Z\n            An array of effective core charges, shape = (natom,)\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEIDip __pyx_vtable_4yaff_3pes_3ext_PairPotEIDip;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEIDip(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotEIDip;
  p->_c_charges = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_dipoles = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_radii2 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEIDip(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_charges);
  Py_CLEAR(p->_c_dipoles);
  Py_CLEAR(p->_c_radii);
  Py_CLEAR(p->_c_radii2);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEIDip(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_charges) {
    e = (*v)(((PyObject*)p->_c_charges), a); if (e) return e;
  }
  if (p->_c_dipoles) {
    e = (*v)(((PyObject*)p->_c_dipoles), a); if (e) return e;
  }
  if (p->_c_radii) {
    e = (*v)(((PyObject*)p->_c_radii), a); if (e) return e;
  }
  if (p->_c_radii2) {
    e = (*v)(((PyObject*)p->_c_radii2), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotEIDip(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_charges);
  p->_c_charges = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_dipoles);
  p->_c_dipoles = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_radii);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_radii2);
  p->_c_radii2 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotEIDip[] = {
  {__Pyx_NAMESTR("compute"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_3compute, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_2compute)},
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_5log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_4log)},
  {__Pyx_NAMESTR("_get_charges"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_7_get_charges, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_6_get_charges)},
  {__Pyx_NAMESTR("_get_dipoles"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_9_get_dipoles, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_8_get_dipoles)},
  {__Pyx_NAMESTR("_get_alpha"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_12PairPotEIDip_11_get_alpha, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_12PairPotEIDip_10_get_alpha)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotEIDip = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotEIDip"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotEIDip), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEIDip, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Short-range contribution to the electrostatic interaction between point charges\n        and point dipoles.\n\n        **Arguments:**\n\n        charges\n            An array of atomic charges, shape = (natom,)\n\n        dipoles\n            An array of atomic point dipoles, shape = (natom,3)\n\n        poltens_i\n            An array that gives the inverse atomic polarizabilities, shape = (3natom, 3)\n        TODO: What about other parameters, for example from EEM? More general way\n        to include necessary parameters.\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEIDip, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotEIDip, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotEIDip, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotEIDip, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_SwitchOn(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_8SwitchOn_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_SwitchOn(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yaff_3pes_3ext_8SwitchOn_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_SwitchOn[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_SwitchOn = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.SwitchOn"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_SwitchOn), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_SwitchOn, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Base class for smoothly switching on of pairwise interactions"), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_SwitchOn, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_SwitchOn, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_SwitchErrorFunction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_SwitchOn(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *)o);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_19SwitchErrorFunction_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_SwitchErrorFunction(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *p = (struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_radii);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_SwitchOn(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_SwitchErrorFunction(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *p = (struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *)o;
  e = ((likely(__pyx_ptype_4yaff_3pes_3ext_SwitchOn)) ? ((__pyx_ptype_4yaff_3pes_3ext_SwitchOn->tp_traverse) ? __pyx_ptype_4yaff_3pes_3ext_SwitchOn->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4yaff_3pes_3ext_SwitchErrorFunction)); if (e) return e;
  if (p->_c_radii) {
    e = (*v)(((PyObject*)p->_c_radii), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_SwitchErrorFunction(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *p = (struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction *)o;
  if (likely(__pyx_ptype_4yaff_3pes_3ext_SwitchOn)) { if (__pyx_ptype_4yaff_3pes_3ext_SwitchOn->tp_clear) __pyx_ptype_4yaff_3pes_3ext_SwitchOn->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4yaff_3pes_3ext_SwitchErrorFunction);
  tmp = ((PyObject*)p->_c_radii);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_SwitchErrorFunction[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_SwitchErrorFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.SwitchErrorFunction"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_SwitchErrorFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_SwitchErrorFunction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("This switching scheme can be used to smoothly switch on a\n        pairwise-potential by multiplying it with an error function. Similar\n        to the electrostatic interaction of two Gaussian charges, the width of\n        the error function is determined by the radii stored in the system object.\n\n        This switching scheme is intented to damp non-bonded potentials at\n        short range instead of just switching them on or off with scaling rules.\n        The width of the error function is determined as follows:\n\n       .. math:: \\sigma_{ij} = \\sqrt{\\sigma_i^2 + \\sigma_j^2}.\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_SwitchErrorFunction, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_SwitchErrorFunction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_SwitchErrorFunction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_SwitchErrorFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotLJCross __pyx_vtable_4yaff_3pes_3ext_PairPotLJCross;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotLJCross(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotLJCross;
  p->_c_eps_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_sig_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotLJCross(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_eps_cross);
  Py_CLEAR(p->_c_sig_cross);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotLJCross(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_eps_cross) {
    e = (*v)(((PyObject*)p->_c_eps_cross), a); if (e) return e;
  }
  if (p->_c_sig_cross) {
    e = (*v)(((PyObject*)p->_c_sig_cross), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotLJCross(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_eps_cross);
  p->_c_eps_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_sig_cross);
  p->_c_sig_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotLJCross[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_2log)},
  {__Pyx_NAMESTR("_get_eps_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_5_get_eps_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_4_get_eps_cross)},
  {__Pyx_NAMESTR("_get_sig_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_14PairPotLJCross_7_get_sig_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_14PairPotLJCross_6_get_sig_cross)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotLJCross = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotLJCross"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotLJCross), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotLJCross, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Lennard Jones with explicit cross parameters.\n\n       **Energy:**\n\n       .. math:: E_\\text{LJ} = \\sum_{i=1}^{N} \\sum_{j=i+1}^{N} 4 s_{ij} \\epsilon_{ij} \\left[\n                 \\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right)^{12} - \\left(\\frac{\\sigma_{ij}}{d_{ij}}\\right)^6\n                 \\right]\n\n       with\n\n       .. math:: s_{ij} = \\text{the short-range scaling factor}\n\n\n       **Arguments:**\n\n        ffatype_ids\n            An array with atom type IDs for each atom. The IDs are integer\n            indexes for the atom types that start counting from zero. shape =\n            (natom,).\n\n       eps_cross\n            An array with epsilon parameters, one for each combination of atom types, shape (nffatype,nffatype)\n\n       sig_cross\n            An array with epsilon parameters, one for each combination of atom types, shape (nffatype,nffatype)\n\n       rcut\n            The cutoff radius\n\n       **Optional arguments:**\n\n       tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotLJCross, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotLJCross, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotLJCross, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotLJCross, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Cell(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_4Cell_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_Cell(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4yaff_3pes_3ext_4Cell_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_Cell[] = {
  {__Pyx_NAMESTR("update_rvecs"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_7update_rvecs, METH_O, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_6update_rvecs)},
  {__Pyx_NAMESTR("_get_nvec"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_9_get_nvec, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_8_get_nvec)},
  {__Pyx_NAMESTR("_get_volume"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_11_get_volume, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_10_get_volume)},
  {__Pyx_NAMESTR("_get_rvecs"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_13_get_rvecs, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_12_get_rvecs)},
  {__Pyx_NAMESTR("_get_gvecs"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_15_get_gvecs, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_14_get_gvecs)},
  {__Pyx_NAMESTR("_get_rspacings"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_17_get_rspacings, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_16_get_rspacings)},
  {__Pyx_NAMESTR("_get_gspacings"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_19_get_gspacings, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_18_get_gspacings)},
  {__Pyx_NAMESTR("_get_parameters"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_21_get_parameters, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_20_get_parameters)},
  {__Pyx_NAMESTR("mic"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_23mic, METH_O, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_22mic)},
  {__Pyx_NAMESTR("to_center"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_25to_center, METH_O, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_24to_center)},
  {__Pyx_NAMESTR("add_vec"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_27add_vec, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_26add_vec)},
  {__Pyx_NAMESTR("compute_distances"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_4Cell_29compute_distances, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_4Cell_28compute_distances)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_Cell = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.Cell"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_Cell), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_Cell, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("Cell(ndarray rvecs)\nRepresentation of periodic boundary conditions.\n\n       0, 1, 2 and 3 dimensional systems are supported. The cell vectors need\n       not to be orthogonal.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_Cell, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_4yaff_3pes_3ext_4Cell_5__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_Cell, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEI __pyx_vtable_4yaff_3pes_3ext_PairPotEI;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEI(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotEI;
  p->_c_charges = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_9PairPotEI_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEI(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_charges);
  Py_CLEAR(p->_c_radii);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEI(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_charges) {
    e = (*v)(((PyObject*)p->_c_charges), a); if (e) return e;
  }
  if (p->_c_radii) {
    e = (*v)(((PyObject*)p->_c_radii), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotEI(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEI *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_charges);
  p->_c_charges = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_radii);
  p->_c_radii = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotEI[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotEI_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotEI_2log)},
  {__Pyx_NAMESTR("_get_charges"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotEI_5_get_charges, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotEI_4_get_charges)},
  {__Pyx_NAMESTR("_get_radii"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotEI_7_get_radii, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotEI_6_get_radii)},
  {__Pyx_NAMESTR("_get_alpha"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotEI_9_get_alpha, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotEI_8_get_alpha)},
  {__Pyx_NAMESTR("_get_dielectric"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_9PairPotEI_11_get_dielectric, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_9PairPotEI_10_get_dielectric)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotEI = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotEI"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotEI), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEI, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Short-range contribution to the electrostatic interaction between point charges\n\n        **Arguments:**\n\n        charges\n            An array of atomic charges, shape = (natom,)\n\n        alpha\n            The :math:`\\alpha` parameter in the Ewald summation scheme. When\n            set to zero, the interaction between point charges is computed\n            without any long-range screening.\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        dielectric\n            A relative dielectric permitivity that just scales the Coulomb\n            interaction.\n\n        radii\n            An array of atomic radii, shape = (natom,). The charge distribution\n            of atom :math:`i` with radius :math:`r_i` centered at :math:`\\mathbf{R}_i`\n            is of a Gaussian shape:\n            :math:`\\rho_i (\\mathbf{r}) = q_i\\left(\\frac{1}{\\pi r_i^2}\\right)^{3/2} \\exp{-\\frac{|\\mathbf{r} -\\mathbf{R}_i |^2}{r_i^2}}`\n            When the atomic radius equals zero, the charge distribution becomes a\n            point monopole.\n            Only implemented for non-periodic systems\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEI, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotEI, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotEI, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotEI, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotOlpSlater1s1s __pyx_vtable_4yaff_3pes_3ext_PairPotOlpSlater1s1s;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotOlpSlater1s1s(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotOlpSlater1s1s;
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotOlpSlater1s1s(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_slater1s_widths);
  Py_CLEAR(p->_c_slater1s_N);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotOlpSlater1s1s(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_slater1s_widths) {
    e = (*v)(((PyObject*)p->_c_slater1s_widths), a); if (e) return e;
  }
  if (p->_c_slater1s_N) {
    e = (*v)(((PyObject*)p->_c_slater1s_N), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotOlpSlater1s1s(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_slater1s_widths);
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_N);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotOlpSlater1s1s[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_2log)},
  {__Pyx_NAMESTR("_get_slater1s_widths"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_5_get_slater1s_widths, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_4_get_slater1s_widths)},
  {__Pyx_NAMESTR("_get_slater1s_N"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_7_get_slater1s_N, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_6_get_slater1s_N)},
  {__Pyx_NAMESTR("_get_ex_scale"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_9_get_ex_scale, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_8_get_ex_scale)},
  {__Pyx_NAMESTR("_get_corr_a"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_11_get_corr_a, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_10_get_corr_a)},
  {__Pyx_NAMESTR("_get_corr_b"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_13_get_corr_b, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_12_get_corr_b)},
  {__Pyx_NAMESTR("_get_corr_c"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_15_get_corr_c, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_20PairPotOlpSlater1s1s_14_get_corr_c)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotOlpSlater1s1s"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotOlpSlater1s1s), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotOlpSlater1s1s, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Overlap between two Slater 1s densities. This can for instance be used\n        to represent an exchange energy by defining a suitable scaling factor\n        to convert overlap to energy. Furthermore it is possible to add some\n        correction factors defined in following expression:\n\n            E = ex_scale * slater_overlap * (1+corr_c*(N1+N2))*(1-exp(corr_a-corr_b*r/sqrt(sigma1*sigma2)))\n\n        **Arguments:**\n\n        slater1s_widths\n            An array of Slater widths, shape = (natom,)\n\n        slater1s_N\n            An array of Slater populations, shape = (natom,)\n\n        ex_scale\n            A scaling factor to relate overlap and exchange energy\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        corr_a\n            Correction factor to modify overlap expression (default=0.0)\n\n        corr_b\n            Correction factor to modify overlap expression (default=0.0)\n\n        corr_c\n            Correction factor to modify overlap expression (default=0.0)\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotOlpSlater1s1s, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotOlpSlater1s1s, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotOlpSlater1s1s, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotOlpSlater1s1s, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_Switch3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_Truncation(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_7Switch3_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_Switch3[] = {
  {__Pyx_NAMESTR("_get_width"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7Switch3_3_get_width, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7Switch3_2_get_width)},
  {__Pyx_NAMESTR("get_log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_7Switch3_5get_log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_7Switch3_4get_log)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_Switch3 = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.Switch3"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_Switch3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_Truncation, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("A simple and good truncation scheme.\n\n       **Arguments:**\n\n       width\n            The width parameter, :math:`w`, in the mathematical expression below.\n\n       This is the recommended truncation scheme in Yaff. It has the following\n       mathematical form:\n\n       .. math:: t_\\text{swithc3}(d) = \\left\\lbrace \\begin{array}{ll}\n                     1 & \\text{if } d < r_\\text{cut} - w \\\\\n                     3x^2 - 2x^3 & \\text{if } d < r_\\text{cut} \\text{ with } x=\\frac{r_\\text{cut} - d}{w} \\\\\n                     0 & \\text{if } d >= r_\\text{cut}\n                 \\end{array} \\right.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_Switch3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_Switch3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDisp68BJDamp __pyx_vtable_4yaff_3pes_3ext_PairPotDisp68BJDamp;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotDisp68BJDamp(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotDisp68BJDamp;
  p->_c_c6_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_c8_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_R_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotDisp68BJDamp(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_c6_cross);
  Py_CLEAR(p->_c_c8_cross);
  Py_CLEAR(p->_c_R_cross);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotDisp68BJDamp(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_c6_cross) {
    e = (*v)(((PyObject*)p->_c_c6_cross), a); if (e) return e;
  }
  if (p->_c_c8_cross) {
    e = (*v)(((PyObject*)p->_c_c8_cross), a); if (e) return e;
  }
  if (p->_c_R_cross) {
    e = (*v)(((PyObject*)p->_c_R_cross), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotDisp68BJDamp(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_c6_cross);
  p->_c_c6_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_c8_cross);
  p->_c_c8_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_R_cross);
  p->_c_R_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotDisp68BJDamp[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_2log)},
  {__Pyx_NAMESTR("_get_c6_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_5_get_c6_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_4_get_c6_cross)},
  {__Pyx_NAMESTR("_get_c8_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_7_get_c8_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_6_get_c8_cross)},
  {__Pyx_NAMESTR("_get_R_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_9_get_R_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_8_get_R_cross)},
  {__Pyx_NAMESTR("_get_c6_scale"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_11_get_c6_scale, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_10_get_c6_scale)},
  {__Pyx_NAMESTR("_get_c8_scale"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_13_get_c8_scale, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_12_get_c8_scale)},
  {__Pyx_NAMESTR("_get_bj_a"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_15_get_bj_a, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_14_get_bj_a)},
  {__Pyx_NAMESTR("_get_bj_b"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_19PairPotDisp68BJDamp_17_get_bj_b, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_19PairPotDisp68BJDamp_16_get_bj_b)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotDisp68BJDamp"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotDisp68BJDamp), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotDisp68BJDamp, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Dispersion term with r^-6 and r^-8 term and Becke-Johnson damping\n\n        **Arguments:**\n\n        ffatype_ids\n            An array with atom type IDs for each atom. The IDs are integer\n            indexes for the atom types that start counting from zero. shape =\n            (natom,).\n\n        c6_cross\n            The :math:`C_{6,ij}` cross parameters.\n\n        c8_cross\n            The :math:`C_{8,ij}` cross parameters.\n\n        R_cross\n            The R cross parameters. If not supplied, these are computed as\n            sqrt(C8/C6).\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        c6s\n            The diagonal :math:`C_{6,i}` parameters\n\n        c8s\n            The diagonal :math:`C_{8,i}` parameters\n\n        Rs\n            The diagonal parameters\n\n        c6_scale\n            Overall scaling of c6 energy. (Default=1.0)\n\n        c8_scale\n            Overall scaling of c8 energy. (Default=1.0)\n\n        bj_a\n            Parameter to control Becke-Johnson damping.\n\n        bj_b\n            Another parameter to control Becke Johnson damping\n\n        The three last optional arguments are used to determine pair parameters\n        from the mixing rules. These mixing rules are only applied if the\n        corresponding cross parameters are initially set to zero in the arrays\n        ``c6_cross``, ``c8_cross`` and ``R_cross``.\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotDisp68BJDamp, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotDisp68BJDamp, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotDisp68BJDamp, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotDisp68BJDamp, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s __pyx_vtable_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_slater1s_widths);
  Py_CLEAR(p->_c_slater1s_N);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_slater1s_widths) {
    e = (*v)(((PyObject*)p->_c_slater1s_widths), a); if (e) return e;
  }
  if (p->_c_slater1s_N) {
    e = (*v)(((PyObject*)p->_c_slater1s_N), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_slater1s_widths);
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_N);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_2log)},
  {__Pyx_NAMESTR("_get_slater1s_widths"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_5_get_slater1s_widths, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_4_get_slater1s_widths)},
  {__Pyx_NAMESTR("_get_slater1s_N"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_7_get_slater1s_N, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_6_get_slater1s_N)},
  {__Pyx_NAMESTR("_get_ct_scale"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_9_get_ct_scale, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_8_get_ct_scale)},
  {__Pyx_NAMESTR("_get_width_power"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_11_get_width_power, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_10_get_width_power)},
  {__Pyx_NAMESTR("_get_alpha"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_13_get_alpha, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_31PairPotChargeTransferSlater1s1s_12_get_alpha)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotChargeTransferSlater1s1s"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Model for charge transfer energy proportional to the overlap of two 1s\n        Slater densities and a certain power of the product of Slater widths:\n\n            E = ct_scale * slater_overlap / (sigma1*sigma2)**width_power\n\n        **Arguments:**\n\n        slater1s_widths\n            An array of Slater widths, shape = (natom,)\n\n        slater1s_N\n            An array of Slater populations, shape = (natom,)\n\n        ct_scale\n            A scaling factor to relate overlap and exchange energy\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        width_power\n            Correction factor to modify overlap expression (default=3.0)\n\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotExpRep __pyx_vtable_4yaff_3pes_3ext_PairPotExpRep;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotExpRep(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotExpRep;
  p->_c_ffatype_ids = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_amp_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_b_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotExpRep(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_ffatype_ids);
  Py_CLEAR(p->_c_amp_cross);
  Py_CLEAR(p->_c_b_cross);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotExpRep(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_ffatype_ids) {
    e = (*v)(((PyObject*)p->_c_ffatype_ids), a); if (e) return e;
  }
  if (p->_c_amp_cross) {
    e = (*v)(((PyObject*)p->_c_amp_cross), a); if (e) return e;
  }
  if (p->_c_b_cross) {
    e = (*v)(((PyObject*)p->_c_b_cross), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotExpRep(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_ffatype_ids);
  p->_c_ffatype_ids = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_amp_cross);
  p->_c_amp_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_b_cross);
  p->_c_b_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotExpRep[] = {
  {__Pyx_NAMESTR("_init_amp_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_3_init_amp_cross, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_2_init_amp_cross)},
  {__Pyx_NAMESTR("_init_b_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_5_init_b_cross, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_4_init_b_cross)},
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_7log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_6log)},
  {__Pyx_NAMESTR("_get_amp_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_9_get_amp_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_8_get_amp_cross)},
  {__Pyx_NAMESTR("_get_b_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotExpRep_11_get_b_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotExpRep_10_get_b_cross)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotExpRep = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotExpRep"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotExpRep), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotExpRep, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Exponential repulsion\n\n        .. math:: E_\\text{EXPREP} = \\sum_{i=1}^{N} \\sum_{j=i+1}^{N} s_{ij} A_{ij} \\exp(-B_{ij} d_{ij})\n\n        The pair parameters can be provided explicitly, or can be derived from atomic\n        parameters using two possible mixing rules for each parameter:\n\n        * ``GEOMETRIC`` mixing for :math:`A_{ij}`: :math:`A_{ij} = \\sqrt{A_i A_j}`\n\n        * ``GEOMETRIC_COR`` mixing for :math:`A_{ij}`: :math:`\\ln A_{ij} = (\\ln A_i + \\ln A_j)\\frac{1-x\\vert\\ln(A_i/A_j)\\vert}{2}` where :math:`x` is a configurable parameter\n\n        * ``ARITHMETIC`` mixing for :math:`B_{ij}`: :math:`B_{ij} = \\frac{B_i + B_j}{2}`\n\n        * ``ARITHMETIC_COR`` mixing for :math:`B_{ij}`: :math:`B_{ij} = (B_i + B_j)\\frac{1-x\\vert\\ln(A_i/A_j)\\vert}{2}` where :math:`x` is a configurable parameter\n\n        **Arguments:**\n\n        ffatype_ids\n            An array with atom type IDs for each atom. The IDs are integer\n            indexes for the atom types that start counting from zero. shape =\n            (natom,).\n\n        amp_cross\n            A 2D array of amplitude cross parameters (:math:`A_{ij}`)\n\n        b_cross\n            A 2D array of decay cross parameters (:math:`B_{ij}`)\n\n        rcut\n             The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        amps\n            A 1D array of amplitude diagonal parameters (:math:`A_{i}`)\n\n        amp_mix\n            An integer ID that determines the mixing rule for the a parameter.\n            0=GEOMETRIC, 1=GEOMETRIC_COR.\n\n        amp_mix_coeff\n            The parameter :math:`x` for the corrected geometric mixing rule.\n\n        bs\n            A 1D array of decay diagonal parameters (:math:`B_{i}`)\n\n        b_mix\n            An integer ID that determines the mixing rule for the B parameter.\n            0=ARITHMETIC, 1=ARITHMETIC_COR.\n\n        b_mix_coeff\n            The parameter :math:`x` for the corrected arithmetic mixing rule.\n\n        The mixing rules are only in effect when the optional diagonal\n        parameters are given. Only when the cross parameters are zero (in the\n        arguments ``amp_cross`` and ``b_cross``), these numbers would be\n        overwritten by the mixing rules.\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotExpRep, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotExpRep, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotExpRep, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotExpRep, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotGrimme __pyx_vtable_4yaff_3pes_3ext_PairPotGrimme;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotGrimme(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotGrimme;
  p->_c_r0 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_c6 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotGrimme(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_r0);
  Py_CLEAR(p->_c_c6);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotGrimme(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_r0) {
    e = (*v)(((PyObject*)p->_c_r0), a); if (e) return e;
  }
  if (p->_c_c6) {
    e = (*v)(((PyObject*)p->_c_c6), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotGrimme(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_r0);
  p->_c_r0 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_c6);
  p->_c_c6 = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotGrimme[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_2log)},
  {__Pyx_NAMESTR("_get_r0"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_5_get_r0, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_4_get_r0)},
  {__Pyx_NAMESTR("_get_c6"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_13PairPotGrimme_7_get_c6, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_13PairPotGrimme_6_get_c6)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotGrimme = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotGrimme"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotGrimme), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotGrimme, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotGrimme, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotGrimme, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotGrimme, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotGrimme, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotDampDisp __pyx_vtable_4yaff_3pes_3ext_PairPotDampDisp;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotDampDisp(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotDampDisp;
  p->_c_c6_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_b_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotDampDisp(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_c6_cross);
  Py_CLEAR(p->_c_b_cross);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotDampDisp(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_c6_cross) {
    e = (*v)(((PyObject*)p->_c_c6_cross), a); if (e) return e;
  }
  if (p->_c_b_cross) {
    e = (*v)(((PyObject*)p->_c_b_cross), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotDampDisp(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_c6_cross);
  p->_c_c6_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_b_cross);
  p->_c_b_cross = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotDampDisp[] = {
  {__Pyx_NAMESTR("_init_c6_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_3_init_c6_cross, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_2_init_c6_cross)},
  {__Pyx_NAMESTR("_init_b_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_5_init_b_cross, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_4_init_b_cross)},
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_7log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_6log)},
  {__Pyx_NAMESTR("_get_c6_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_9_get_c6_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_8_get_c6_cross)},
  {__Pyx_NAMESTR("_get_b_cross"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_15PairPotDampDisp_11_get_b_cross, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_15PairPotDampDisp_10_get_b_cross)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotDampDisp = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotDampDisp"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotDampDisp), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotDampDisp, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Damped dispersion interaction\n\n        **Energy:**\n\n        .. math:: E_\\text{DAMPDISP} = \\sum_{i=1}^{N} \\sum_{j=i+1}^{N} s_{ij} C_{6,ij} f_\\text{damp,6}(d_{ij}) d_{ij}^{-6}\n\n        where the damping factor :math:`f_\\text{damp}(d_{ij})` is optional. When used\n        it has the Tang-Toennies form:\n\n        .. math:: f_\\text{damp,n}(d_{ij}) = 1 - \\exp(-B_{ij}r)\\sum_{k=0}^n\\frac{(B_{ij}r)^k}{k!}\n\n        The pair parameters :math:`C_{6,ij}` and :math:`B_{ij}` are derived from atomic\n        parameters using mixing rules, unless they are provided explicitly for a given\n        pair of atom types. These are the mixing rules:\n\n        .. math:: C_{6,ij} = \\frac{2 C_{6,i} C_{6,j}}{\\left(\\frac{V_j}{V_i}\\right)^2 C_{6,i} + \\left(\\frac{V_i}{V_j}\\right)^2 C_{6,j}}\n\n        .. math:: B_{ij} = \\frac{B_i+B_j}{2}\n\n        **Arguments:**\n\n        ffatype_ids\n            An array with atom type IDs for each atom. The IDs are integer\n            indexes for the atom types that start counting from zero. shape =\n            (natom,).\n\n        c6_cross\n            The :math:`C_{6,ij}` cross parameters.\n\n        b_cross\n            The :math:`B_{ij}` cross parameters. When zero, the damping factor\n            is set to one.\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n\n        c6s\n            The diagonal :math:`C_{6,i}` parameters\n\n        bs\n            The diagonal :math:`B_{i}` parameters\n\n        vols\n            The atomic volumes, :math:`V_i`.\n\n        The three last optional arguments are used to determine pair parameters\n        from the mixing rules. These mixing rules are only applied of the\n        corresponding cross parameters are initially set to zero in the arrays\n        ``c6_corss`` and ``b_cross``.\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotDampDisp, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotDampDisp, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotDampDisp, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotDampDisp, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr __pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;

static PyObject *__pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *p;
  PyObject *o = __pyx_tp_new_4yaff_3pes_3ext_PairPot(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4yaff_3pes_3ext_PairPot*)__pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1s_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1p_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1p_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  p->_c_slater1p_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr(PyObject *o) {
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_c_slater1s_widths);
  Py_CLEAR(p->_c_slater1s_N);
  Py_CLEAR(p->_c_slater1s_Z);
  Py_CLEAR(p->_c_slater1p_widths);
  Py_CLEAR(p->_c_slater1p_N);
  Py_CLEAR(p->_c_slater1p_Z);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPot(o);
}

static int __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)o;
  e = __pyx_tp_traverse_4yaff_3pes_3ext_PairPot(o, v, a); if (e) return e;
  if (p->_c_slater1s_widths) {
    e = (*v)(((PyObject*)p->_c_slater1s_widths), a); if (e) return e;
  }
  if (p->_c_slater1s_N) {
    e = (*v)(((PyObject*)p->_c_slater1s_N), a); if (e) return e;
  }
  if (p->_c_slater1s_Z) {
    e = (*v)(((PyObject*)p->_c_slater1s_Z), a); if (e) return e;
  }
  if (p->_c_slater1p_widths) {
    e = (*v)(((PyObject*)p->_c_slater1p_widths), a); if (e) return e;
  }
  if (p->_c_slater1p_N) {
    e = (*v)(((PyObject*)p->_c_slater1p_N), a); if (e) return e;
  }
  if (p->_c_slater1p_Z) {
    e = (*v)(((PyObject*)p->_c_slater1p_Z), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *p = (struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr *)o;
  __pyx_tp_clear_4yaff_3pes_3ext_PairPot(o);
  tmp = ((PyObject*)p->_c_slater1s_widths);
  p->_c_slater1s_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_N);
  p->_c_slater1s_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1s_Z);
  p->_c_slater1s_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1p_widths);
  p->_c_slater1p_widths = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1p_N);
  p->_c_slater1p_N = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_c_slater1p_Z);
  p->_c_slater1p_Z = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr[] = {
  {__Pyx_NAMESTR("log"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_3log, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_2log)},
  {__Pyx_NAMESTR("_get_slater1s_widths"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_5_get_slater1s_widths, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_4_get_slater1s_widths)},
  {__Pyx_NAMESTR("_get_slater1s_N"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_7_get_slater1s_N, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_6_get_slater1s_N)},
  {__Pyx_NAMESTR("_get_slater1s_Z"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_9_get_slater1s_Z, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_8_get_slater1s_Z)},
  {__Pyx_NAMESTR("_get_slater1p_widths"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_11_get_slater1p_widths, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_10_get_slater1p_widths)},
  {__Pyx_NAMESTR("_get_slater1p_N"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_13_get_slater1p_N, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_12_get_slater1p_N)},
  {__Pyx_NAMESTR("_get_slater1p_Z"), (PyCFunction)__pyx_pw_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_15_get_slater1p_Z, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_4yaff_3pes_3ext_25PairPotEiSlater1sp1spCorr_14_get_slater1p_Z)},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yaff.pes.ext.PairPotEiSlater1sp1spCorr"), /*tp_name*/
  sizeof(struct __pyx_obj_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("Electrostatic interaction between sites with a point charge, a\n        1s Slater charge density, a point dipole and a 1p Slater charge density\n        MINUS the electrostatic interaction between\n        the resulting net point monopoles and dipoles.\n        TODO: explain this properly\n\n        **Arguments:**\n\n        slater1s_widths\n            An array of Slater widths, shape = (natom,)\n\n        slater1s_N\n            An array of Slater populations, shape = (natom,)\n\n        slater1s_Z\n            An array of effective core charges, shape = (natom,)\n\n        slater1p_widths\n            An array of Slater widths, shape = (natom,3)\n\n        slater1p_N\n            An array of Slater populations, shape = (natom,3)\n\n        slater1p_Z\n            An array of point dipoles, shape = (natom,3)\n\n        rcut\n            The cutoff radius\n\n        **Optional arguments:**\n\n        tr\n            The truncation scheme, an instance of a subclass of ``Truncation``.\n            When not given, no truncation is applied\n    "), /*tp_doc*/
  __pyx_tp_traverse_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, /*tp_traverse*/
  __pyx_tp_clear_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("ext"),
    __Pyx_DOCSTR(__pyx_k_Low_level_C_routines_This_extens), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_10_5f, __pyx_k_10_5f, sizeof(__pyx_k_10_5f), 0, 0, 1, 0},
  {&__pyx_kp_s_11i_11i_s_s, __pyx_k_11i_11i_s_s, sizeof(__pyx_k_11i_11i_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_11i_11i_s_s_s, __pyx_k_11i_11i_s_s_s, sizeof(__pyx_k_11i_11i_s_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_4i_s_s_s_s_s_s, __pyx_k_4i_s_s_s_s_s_s, sizeof(__pyx_k_4i_s_s_s_s_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_7i_s_s, __pyx_k_7i_s_s, sizeof(__pyx_k_7i_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_7i_s_s_2, __pyx_k_7i_s_s_2, sizeof(__pyx_k_7i_s_s_2), 0, 0, 1, 0},
  {&__pyx_kp_s_7i_s_s_i, __pyx_k_7i_s_s_i, sizeof(__pyx_k_7i_s_s_i), 0, 0, 1, 0},
  {&__pyx_kp_s_7i_s_s_s, __pyx_k_7i_s_s_s, sizeof(__pyx_k_7i_s_s_s), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Charge_Radius, __pyx_k_Atom_Charge_Radius, sizeof(__pyx_k_Atom_Charge_Radius), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Charge_Radius_Dipole_x_Dipo, __pyx_k_Atom_Charge_Radius_Dipole_x_Dipo, sizeof(__pyx_k_Atom_Charge_Radius_Dipole_x_Dipo), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Sigma_Epsilon, __pyx_k_Atom_Sigma_Epsilon, sizeof(__pyx_k_Atom_Sigma_Epsilon), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Sigma_Epsilon_OnlyPauli, __pyx_k_Atom_Sigma_Epsilon_OnlyPauli, sizeof(__pyx_k_Atom_Sigma_Epsilon_OnlyPauli), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Slater_charge_Core_charge, __pyx_k_Atom_Slater_charge_Core_charge, sizeof(__pyx_k_Atom_Slater_charge_Core_charge), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_Slater_charge_Slater_width, __pyx_k_Atom_Slater_charge_Slater_width, sizeof(__pyx_k_Atom_Slater_charge_Slater_width), 0, 0, 1, 0},
  {&__pyx_kp_s_Atom_r0_c6, __pyx_k_Atom_r0_c6, sizeof(__pyx_k_Atom_r0_c6), 0, 0, 1, 0},
  {&__pyx_n_s_C_CONTIGUOUS, __pyx_k_C_CONTIGUOUS, sizeof(__pyx_k_C_CONTIGUOUS), 0, 0, 1, 1},
  {&__pyx_kp_s_Can_only_include_distances_to_pe, __pyx_k_Can_only_include_distances_to_pe, sizeof(__pyx_k_Can_only_include_distances_to_pe), 0, 0, 1, 0},
  {&__pyx_n_s_Cell, __pyx_k_Cell, sizeof(__pyx_k_Cell), 0, 0, 1, 1},
  {&__pyx_kp_s_Computing_PairPotEIDip_energy_an, __pyx_k_Computing_PairPotEIDip_energy_an, sizeof(__pyx_k_Computing_PairPotEIDip_energy_an), 0, 0, 1, 0},
  {&__pyx_kp_s_Either_gpos_or_vtens_must_be_giv, __pyx_k_Either_gpos_or_vtens_must_be_giv, sizeof(__pyx_k_Either_gpos_or_vtens_must_be_giv), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_Hammer, __pyx_k_Hammer, sizeof(__pyx_k_Hammer), 0, 0, 1, 1},
  {&__pyx_kp_s_Hessian_not_yet_implemented_for, __pyx_k_Hessian_not_yet_implemented_for, sizeof(__pyx_k_Hessian_not_yet_implemented_for), 0, 0, 1, 0},
  {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
  {&__pyx_kp_s_No_pairs_given_and_do_include_Tr, __pyx_k_No_pairs_given_and_do_include_Tr, sizeof(__pyx_k_No_pairs_given_and_do_include_Tr), 0, 0, 1, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_PairPot, __pyx_k_PairPot, sizeof(__pyx_k_PairPot), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotChargeTransferSlater1s1s, __pyx_k_PairPotChargeTransferSlater1s1s, sizeof(__pyx_k_PairPotChargeTransferSlater1s1s), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotDampDisp, __pyx_k_PairPotDampDisp, sizeof(__pyx_k_PairPotDampDisp), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotDisp68BJDamp, __pyx_k_PairPotDisp68BJDamp, sizeof(__pyx_k_PairPotDisp68BJDamp), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotEI, __pyx_k_PairPotEI, sizeof(__pyx_k_PairPotEI), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotEIDip, __pyx_k_PairPotEIDip, sizeof(__pyx_k_PairPotEIDip), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotEiSlater1s1sCorr, __pyx_k_PairPotEiSlater1s1sCorr, sizeof(__pyx_k_PairPotEiSlater1s1sCorr), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotEiSlater1sp1spCorr, __pyx_k_PairPotEiSlater1sp1spCorr, sizeof(__pyx_k_PairPotEiSlater1sp1spCorr), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotExpRep, __pyx_k_PairPotExpRep, sizeof(__pyx_k_PairPotExpRep), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotGrimme, __pyx_k_PairPotGrimme, sizeof(__pyx_k_PairPotGrimme), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotLJ, __pyx_k_PairPotLJ, sizeof(__pyx_k_PairPotLJ), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotLJCross, __pyx_k_PairPotLJCross, sizeof(__pyx_k_PairPotLJCross), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotMM3, __pyx_k_PairPotMM3, sizeof(__pyx_k_PairPotMM3), 0, 0, 1, 1},
  {&__pyx_n_s_PairPotOlpSlater1s1s, __pyx_k_PairPotOlpSlater1s1s, sizeof(__pyx_k_PairPotOlpSlater1s1s), 0, 0, 1, 1},
  {&__pyx_n_s_R_cross, __pyx_k_R_cross, sizeof(__pyx_k_R_cross), 0, 0, 1, 1},
  {&__pyx_n_s_Rs, __pyx_k_Rs, sizeof(__pyx_k_Rs), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_Switch3, __pyx_k_Switch3, sizeof(__pyx_k_Switch3), 0, 0, 1, 1},
  {&__pyx_n_s_SwitchErrorFunction, __pyx_k_SwitchErrorFunction, sizeof(__pyx_k_SwitchErrorFunction), 0, 0, 1, 1},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_kp_s_The_pairs_array_must_countain_in, __pyx_k_The_pairs_array_must_countain_in, sizeof(__pyx_k_The_pairs_array_must_countain_in), 0, 0, 1, 0},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s_When_do_include_True_nimage_must, __pyx_k_When_do_include_True_nimage_must, sizeof(__pyx_k_When_do_include_True_nimage_must), 0, 0, 1, 0},
  {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {&__pyx_n_s_all_2, __pyx_k_all_2, sizeof(__pyx_k_all_2), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_kp_s_alpha_s, __pyx_k_alpha_s, sizeof(__pyx_k_alpha_s), 0, 0, 1, 0},
  {&__pyx_n_s_amp_cross, __pyx_k_amp_cross, sizeof(__pyx_k_amp_cross), 0, 0, 1, 1},
  {&__pyx_n_s_amp_mix, __pyx_k_amp_mix, sizeof(__pyx_k_amp_mix), 0, 0, 1, 1},
  {&__pyx_n_s_amp_mix_coeff, __pyx_k_amp_mix_coeff, sizeof(__pyx_k_amp_mix_coeff), 0, 0, 1, 1},
  {&__pyx_n_s_amps, __pyx_k_amps, sizeof(__pyx_k_amps), 0, 0, 1, 1},
  {&__pyx_n_s_arccos, __pyx_k_arccos, sizeof(__pyx_k_arccos), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_b_cross, __pyx_k_b_cross, sizeof(__pyx_k_b_cross), 0, 0, 1, 1},
  {&__pyx_n_s_b_mix, __pyx_k_b_mix, sizeof(__pyx_k_b_mix), 0, 0, 1, 1},
  {&__pyx_n_s_b_mix_coeff, __pyx_k_b_mix_coeff, sizeof(__pyx_k_b_mix_coeff), 0, 0, 1, 1},
  {&__pyx_n_s_bin_indexes, __pyx_k_bin_indexes, sizeof(__pyx_k_bin_indexes), 0, 0, 1, 1},
  {&__pyx_n_s_binsizes, __pyx_k_binsizes, sizeof(__pyx_k_binsizes), 0, 0, 1, 1},
  {&__pyx_n_s_binsizes_cum, __pyx_k_binsizes_cum, sizeof(__pyx_k_binsizes_cum), 0, 0, 1, 1},
  {&__pyx_n_s_bj_a, __pyx_k_bj_a, sizeof(__pyx_k_bj_a), 0, 0, 1, 1},
  {&__pyx_kp_s_bj_a_s, __pyx_k_bj_a_s, sizeof(__pyx_k_bj_a_s), 0, 0, 1, 0},
  {&__pyx_n_s_bj_b, __pyx_k_bj_b, sizeof(__pyx_k_bj_b), 0, 0, 1, 1},
  {&__pyx_kp_s_bj_b_s, __pyx_k_bj_b_s, sizeof(__pyx_k_bj_b_s), 0, 0, 1, 0},
  {&__pyx_n_s_bs, __pyx_k_bs, sizeof(__pyx_k_bs), 0, 0, 1, 1},
  {&__pyx_n_s_c6, __pyx_k_c6, sizeof(__pyx_k_c6), 0, 0, 1, 1},
  {&__pyx_n_s_c6_cross, __pyx_k_c6_cross, sizeof(__pyx_k_c6_cross), 0, 0, 1, 1},
  {&__pyx_n_s_c6_scale, __pyx_k_c6_scale, sizeof(__pyx_k_c6_scale), 0, 0, 1, 1},
  {&__pyx_kp_s_c6_scale_s, __pyx_k_c6_scale_s, sizeof(__pyx_k_c6_scale_s), 0, 0, 1, 0},
  {&__pyx_n_s_c6s, __pyx_k_c6s, sizeof(__pyx_k_c6s), 0, 0, 1, 1},
  {&__pyx_n_s_c8_cross, __pyx_k_c8_cross, sizeof(__pyx_k_c8_cross), 0, 0, 1, 1},
  {&__pyx_n_s_c8_scale, __pyx_k_c8_scale, sizeof(__pyx_k_c8_scale), 0, 0, 1, 1},
  {&__pyx_kp_s_c8_scale_s, __pyx_k_c8_scale_s, sizeof(__pyx_k_c8_scale_s), 0, 0, 1, 0},
  {&__pyx_n_s_c8s, __pyx_k_c8s, sizeof(__pyx_k_c8s), 0, 0, 1, 1},
  {&__pyx_n_s_c_ndelta, __pyx_k_c_ndelta, sizeof(__pyx_k_c_ndelta), 0, 0, 1, 1},
  {&__pyx_n_s_c_nic, __pyx_k_c_nic, sizeof(__pyx_k_c_nic), 0, 0, 1, 1},
  {&__pyx_n_s_center, __pyx_k_center, sizeof(__pyx_k_center), 0, 0, 1, 1},
  {&__pyx_n_s_charge, __pyx_k_charge, sizeof(__pyx_k_charge), 0, 0, 1, 1},
  {&__pyx_n_s_charges, __pyx_k_charges, sizeof(__pyx_k_charges), 0, 0, 1, 1},
  {&__pyx_n_s_chargetransferslater1s1s, __pyx_k_chargetransferslater1s1s, sizeof(__pyx_k_chargetransferslater1s1s), 0, 0, 1, 1},
  {&__pyx_n_s_clip, __pyx_k_clip, sizeof(__pyx_k_clip), 0, 0, 1, 1},
  {&__pyx_n_s_compute, __pyx_k_compute, sizeof(__pyx_k_compute), 0, 0, 1, 1},
  {&__pyx_n_s_compute_ewald_corr, __pyx_k_compute_ewald_corr, sizeof(__pyx_k_compute_ewald_corr), 0, 0, 1, 1},
  {&__pyx_n_s_compute_ewald_corr_dd, __pyx_k_compute_ewald_corr_dd, sizeof(__pyx_k_compute_ewald_corr_dd), 0, 0, 1, 1},
  {&__pyx_n_s_compute_ewald_reci, __pyx_k_compute_ewald_reci, sizeof(__pyx_k_compute_ewald_reci), 0, 0, 1, 1},
  {&__pyx_n_s_compute_ewald_reci_dd, __pyx_k_compute_ewald_reci_dd, sizeof(__pyx_k_compute_ewald_reci_dd), 0, 0, 1, 1},
  {&__pyx_n_s_compute_grid3d, __pyx_k_compute_grid3d, sizeof(__pyx_k_compute_grid3d), 0, 0, 1, 1},
  {&__pyx_n_s_corr_a, __pyx_k_corr_a, sizeof(__pyx_k_corr_a), 0, 0, 1, 1},
  {&__pyx_kp_s_corr_a_s, __pyx_k_corr_a_s, sizeof(__pyx_k_corr_a_s), 0, 0, 1, 0},
  {&__pyx_n_s_corr_b, __pyx_k_corr_b, sizeof(__pyx_k_corr_b), 0, 0, 1, 1},
  {&__pyx_kp_s_corr_b_s, __pyx_k_corr_b_s, sizeof(__pyx_k_corr_b_s), 0, 0, 1, 0},
  {&__pyx_n_s_corr_c, __pyx_k_corr_c, sizeof(__pyx_k_corr_c), 0, 0, 1, 1},
  {&__pyx_kp_s_corr_c_s, __pyx_k_corr_c_s, sizeof(__pyx_k_corr_c_s), 0, 0, 1, 0},
  {&__pyx_n_s_ct_scale, __pyx_k_ct_scale, sizeof(__pyx_k_ct_scale), 0, 0, 1, 1},
  {&__pyx_kp_s_ct_scale_s, __pyx_k_ct_scale_s, sizeof(__pyx_k_ct_scale_s), 0, 0, 1, 0},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_dampdisp, __pyx_k_dampdisp, sizeof(__pyx_k_dampdisp), 0, 0, 1, 1},
  {&__pyx_n_s_delta, __pyx_k_delta, sizeof(__pyx_k_delta), 0, 0, 1, 1},
  {&__pyx_n_s_deltas, __pyx_k_deltas, sizeof(__pyx_k_deltas), 0, 0, 1, 1},
  {&__pyx_n_s_diag, __pyx_k_diag, sizeof(__pyx_k_diag), 0, 0, 1, 1},
  {&__pyx_n_s_dielectric, __pyx_k_dielectric, sizeof(__pyx_k_dielectric), 0, 0, 1, 1},
  {&__pyx_n_s_dipoles, __pyx_k_dipoles, sizeof(__pyx_k_dipoles), 0, 0, 1, 1},
  {&__pyx_n_s_disp68bjdamp, __pyx_k_disp68bjdamp, sizeof(__pyx_k_disp68bjdamp), 0, 0, 1, 1},
  {&__pyx_n_s_dlist_back, __pyx_k_dlist_back, sizeof(__pyx_k_dlist_back), 0, 0, 1, 1},
  {&__pyx_n_s_dlist_forward, __pyx_k_dlist_forward, sizeof(__pyx_k_dlist_forward), 0, 0, 1, 1},
  {&__pyx_n_s_do_high, __pyx_k_do_high, sizeof(__pyx_k_do_high), 0, 0, 1, 1},
  {&__pyx_n_s_do_include, __pyx_k_do_include, sizeof(__pyx_k_do_include), 0, 0, 1, 1},
  {&__pyx_n_s_do_medium, __pyx_k_do_medium, sizeof(__pyx_k_do_medium), 0, 0, 1, 1},
  {&__pyx_n_s_domains, __pyx_k_domains, sizeof(__pyx_k_domains), 0, 0, 1, 1},
  {&__pyx_n_s_dot, __pyx_k_dot, sizeof(__pyx_k_dot), 0, 0, 1, 1},
  {&__pyx_n_s_egrid, __pyx_k_egrid, sizeof(__pyx_k_egrid), 0, 0, 1, 1},
  {&__pyx_n_s_ei, __pyx_k_ei, sizeof(__pyx_k_ei), 0, 0, 1, 1},
  {&__pyx_n_s_eidip, __pyx_k_eidip, sizeof(__pyx_k_eidip), 0, 0, 1, 1},
  {&__pyx_n_s_eislater1s1scorr, __pyx_k_eislater1s1scorr, sizeof(__pyx_k_eislater1s1scorr), 0, 0, 1, 1},
  {&__pyx_n_s_eislater1sp1spcorr, __pyx_k_eislater1sp1spcorr, sizeof(__pyx_k_eislater1sp1spcorr), 0, 0, 1, 1},
  {&__pyx_n_s_energy, __pyx_k_energy, sizeof(__pyx_k_energy), 0, 0, 1, 1},
  {&__pyx_n_s_eps_cross, __pyx_k_eps_cross, sizeof(__pyx_k_eps_cross), 0, 0, 1, 1},
  {&__pyx_n_s_epsilons, __pyx_k_epsilons, sizeof(__pyx_k_epsilons), 0, 0, 1, 1},
  {&__pyx_n_s_ex_scale, __pyx_k_ex_scale, sizeof(__pyx_k_ex_scale), 0, 0, 1, 1},
  {&__pyx_kp_s_ex_scale_s, __pyx_k_ex_scale_s, sizeof(__pyx_k_ex_scale_s), 0, 0, 1, 0},
  {&__pyx_n_s_exp, __pyx_k_exp, sizeof(__pyx_k_exp), 0, 0, 1, 1},
  {&__pyx_n_s_exprep, __pyx_k_exprep, sizeof(__pyx_k_exprep), 0, 0, 1, 1},
  {&__pyx_kp_s_ffatype_id0_ffatype_id1_A_B, __pyx_k_ffatype_id0_ffatype_id1_A_B, sizeof(__pyx_k_ffatype_id0_ffatype_id1_A_B), 0, 0, 1, 0},
  {&__pyx_kp_s_ffatype_id0_ffatype_id1_C6_B, __pyx_k_ffatype_id0_ffatype_id1_C6_B, sizeof(__pyx_k_ffatype_id0_ffatype_id1_C6_B), 0, 0, 1, 0},
  {&__pyx_kp_s_ffatype_id0_ffatype_id1_C6_C8_R, __pyx_k_ffatype_id0_ffatype_id1_C6_C8_R, sizeof(__pyx_k_ffatype_id0_ffatype_id1_C6_C8_R), 0, 0, 1, 0},
  {&__pyx_kp_s_ffatype_id0_ffatype_id1_eps_sig, __pyx_k_ffatype_id0_ffatype_id1_eps_sig, sizeof(__pyx_k_ffatype_id0_ffatype_id1_eps_sig), 0, 0, 1, 0},
  {&__pyx_n_s_ffatype_ids, __pyx_k_ffatype_ids, sizeof(__pyx_k_ffatype_ids), 0, 0, 1, 1},
  {&__pyx_n_s_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 0, 0, 1, 1},
  {&__pyx_n_s_full, __pyx_k_full, sizeof(__pyx_k_full), 0, 0, 1, 1},
  {&__pyx_n_s_full_matrices, __pyx_k_full_matrices, sizeof(__pyx_k_full_matrices), 0, 0, 1, 1},
  {&__pyx_n_s_gcut, __pyx_k_gcut, sizeof(__pyx_k_gcut), 0, 0, 1, 1},
  {&__pyx_n_s_get_R_cross, __pyx_k_get_R_cross, sizeof(__pyx_k_get_R_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_alpha, __pyx_k_get_alpha, sizeof(__pyx_k_get_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_get_amp_cross, __pyx_k_get_amp_cross, sizeof(__pyx_k_get_amp_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_b_cross, __pyx_k_get_b_cross, sizeof(__pyx_k_get_b_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_bj_a, __pyx_k_get_bj_a, sizeof(__pyx_k_get_bj_a), 0, 0, 1, 1},
  {&__pyx_n_s_get_bj_b, __pyx_k_get_bj_b, sizeof(__pyx_k_get_bj_b), 0, 0, 1, 1},
  {&__pyx_n_s_get_c6, __pyx_k_get_c6, sizeof(__pyx_k_get_c6), 0, 0, 1, 1},
  {&__pyx_n_s_get_c6_cross, __pyx_k_get_c6_cross, sizeof(__pyx_k_get_c6_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_c6_scale, __pyx_k_get_c6_scale, sizeof(__pyx_k_get_c6_scale), 0, 0, 1, 1},
  {&__pyx_n_s_get_c8_cross, __pyx_k_get_c8_cross, sizeof(__pyx_k_get_c8_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_c8_scale, __pyx_k_get_c8_scale, sizeof(__pyx_k_get_c8_scale), 0, 0, 1, 1},
  {&__pyx_n_s_get_charges, __pyx_k_get_charges, sizeof(__pyx_k_get_charges), 0, 0, 1, 1},
  {&__pyx_n_s_get_corr_a, __pyx_k_get_corr_a, sizeof(__pyx_k_get_corr_a), 0, 0, 1, 1},
  {&__pyx_n_s_get_corr_b, __pyx_k_get_corr_b, sizeof(__pyx_k_get_corr_b), 0, 0, 1, 1},
  {&__pyx_n_s_get_corr_c, __pyx_k_get_corr_c, sizeof(__pyx_k_get_corr_c), 0, 0, 1, 1},
  {&__pyx_n_s_get_ct_scale, __pyx_k_get_ct_scale, sizeof(__pyx_k_get_ct_scale), 0, 0, 1, 1},
  {&__pyx_n_s_get_dielectric, __pyx_k_get_dielectric, sizeof(__pyx_k_get_dielectric), 0, 0, 1, 1},
  {&__pyx_n_s_get_dipoles, __pyx_k_get_dipoles, sizeof(__pyx_k_get_dipoles), 0, 0, 1, 1},
  {&__pyx_n_s_get_eps_cross, __pyx_k_get_eps_cross, sizeof(__pyx_k_get_eps_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_epsilons, __pyx_k_get_epsilons, sizeof(__pyx_k_get_epsilons), 0, 0, 1, 1},
  {&__pyx_n_s_get_ex_scale, __pyx_k_get_ex_scale, sizeof(__pyx_k_get_ex_scale), 0, 0, 1, 1},
  {&__pyx_n_s_get_gspacings, __pyx_k_get_gspacings, sizeof(__pyx_k_get_gspacings), 0, 0, 1, 1},
  {&__pyx_n_s_get_gvecs, __pyx_k_get_gvecs, sizeof(__pyx_k_get_gvecs), 0, 0, 1, 1},
  {&__pyx_n_s_get_nvec, __pyx_k_get_nvec, sizeof(__pyx_k_get_nvec), 0, 0, 1, 1},
  {&__pyx_n_s_get_onlypaulis, __pyx_k_get_onlypaulis, sizeof(__pyx_k_get_onlypaulis), 0, 0, 1, 1},
  {&__pyx_n_s_get_parameters, __pyx_k_get_parameters, sizeof(__pyx_k_get_parameters), 0, 0, 1, 1},
  {&__pyx_n_s_get_r0, __pyx_k_get_r0, sizeof(__pyx_k_get_r0), 0, 0, 1, 1},
  {&__pyx_n_s_get_radii, __pyx_k_get_radii, sizeof(__pyx_k_get_radii), 0, 0, 1, 1},
  {&__pyx_n_s_get_rcut, __pyx_k_get_rcut, sizeof(__pyx_k_get_rcut), 0, 0, 1, 1},
  {&__pyx_n_s_get_rspacings, __pyx_k_get_rspacings, sizeof(__pyx_k_get_rspacings), 0, 0, 1, 1},
  {&__pyx_n_s_get_rvecs, __pyx_k_get_rvecs, sizeof(__pyx_k_get_rvecs), 0, 0, 1, 1},
  {&__pyx_n_s_get_sig_cross, __pyx_k_get_sig_cross, sizeof(__pyx_k_get_sig_cross), 0, 0, 1, 1},
  {&__pyx_n_s_get_sigmas, __pyx_k_get_sigmas, sizeof(__pyx_k_get_sigmas), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1p_N, __pyx_k_get_slater1p_N, sizeof(__pyx_k_get_slater1p_N), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1p_Z, __pyx_k_get_slater1p_Z, sizeof(__pyx_k_get_slater1p_Z), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1p_widths, __pyx_k_get_slater1p_widths, sizeof(__pyx_k_get_slater1p_widths), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1s_N, __pyx_k_get_slater1s_N, sizeof(__pyx_k_get_slater1s_N), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1s_Z, __pyx_k_get_slater1s_Z, sizeof(__pyx_k_get_slater1s_Z), 0, 0, 1, 1},
  {&__pyx_n_s_get_slater1s_widths, __pyx_k_get_slater1s_widths, sizeof(__pyx_k_get_slater1s_widths), 0, 0, 1, 1},
  {&__pyx_n_s_get_tau, __pyx_k_get_tau, sizeof(__pyx_k_get_tau), 0, 0, 1, 1},
  {&__pyx_n_s_get_volume, __pyx_k_get_volume, sizeof(__pyx_k_get_volume), 0, 0, 1, 1},
  {&__pyx_n_s_get_width, __pyx_k_get_width, sizeof(__pyx_k_get_width), 0, 0, 1, 1},
  {&__pyx_n_s_get_width_power, __pyx_k_get_width_power, sizeof(__pyx_k_get_width_power), 0, 0, 1, 1},
  {&__pyx_n_s_gmax, __pyx_k_gmax, sizeof(__pyx_k_gmax), 0, 0, 1, 1},
  {&__pyx_n_s_gpos, __pyx_k_gpos, sizeof(__pyx_k_gpos), 0, 0, 1, 1},
  {&__pyx_n_s_grimme, __pyx_k_grimme, sizeof(__pyx_k_grimme), 0, 0, 1, 1},
  {&__pyx_n_s_gspacings, __pyx_k_gspacings, sizeof(__pyx_k_gspacings), 0, 0, 1, 1},
  {&__pyx_n_s_gvecs, __pyx_k_gvecs, sizeof(__pyx_k_gvecs), 0, 0, 1, 1},
  {&__pyx_kp_s_hammer_s, __pyx_k_hammer_s, sizeof(__pyx_k_hammer_s), 0, 0, 1, 0},
  {&__pyx_n_s_hess, __pyx_k_hess, sizeof(__pyx_k_hess), 0, 0, 1, 1},
  {&__pyx_n_s_hessian, __pyx_k_hessian, sizeof(__pyx_k_hessian), 0, 0, 1, 1},
  {&__pyx_n_s_hline, __pyx_k_hline, sizeof(__pyx_k_hline), 0, 0, 1, 1},
  {&__pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_k_home_steven_build_yaff_yaff_pes, sizeof(__pyx_k_home_steven_build_yaff_yaff_pes), 0, 0, 1, 0},
  {&__pyx_n_s_iclist_back, __pyx_k_iclist_back, sizeof(__pyx_k_iclist_back), 0, 0, 1, 1},
  {&__pyx_n_s_iclist_forward, __pyx_k_iclist_forward, sizeof(__pyx_k_iclist_forward), 0, 0, 1, 1},
  {&__pyx_n_s_iclist_hessian, __pyx_k_iclist_hessian, sizeof(__pyx_k_iclist_hessian), 0, 0, 1, 1},
  {&__pyx_n_s_iclist_jacobian, __pyx_k_iclist_jacobian, sizeof(__pyx_k_iclist_jacobian), 0, 0, 1, 1},
  {&__pyx_n_s_ictab, __pyx_k_ictab, sizeof(__pyx_k_ictab), 0, 0, 1, 1},
  {&__pyx_n_s_identity, __pyx_k_identity, sizeof(__pyx_k_identity), 0, 0, 1, 1},
  {&__pyx_n_s_ijstart, __pyx_k_ijstart, sizeof(__pyx_k_ijstart), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_init_amp_cross, __pyx_k_init_amp_cross, sizeof(__pyx_k_init_amp_cross), 0, 0, 1, 1},
  {&__pyx_n_s_init_b_cross, __pyx_k_init_b_cross, sizeof(__pyx_k_init_b_cross), 0, 0, 1, 1},
  {&__pyx_n_s_init_c6_cross, __pyx_k_init_c6_cross, sizeof(__pyx_k_init_c6_cross), 0, 0, 1, 1},
  {&__pyx_n_s_invlength, __pyx_k_invlength, sizeof(__pyx_k_invlength), 0, 0, 1, 1},
  {&__pyx_n_s_jacobian, __pyx_k_jacobian, sizeof(__pyx_k_jacobian), 0, 0, 1, 1},
  {&__pyx_n_s_length, __pyx_k_length, sizeof(__pyx_k_length), 0, 0, 1, 1},
  {&__pyx_n_s_linalg, __pyx_k_linalg, sizeof(__pyx_k_linalg), 0, 0, 1, 1},
  {&__pyx_n_s_lj, __pyx_k_lj, sizeof(__pyx_k_lj), 0, 0, 1, 1},
  {&__pyx_n_s_ljcross, __pyx_k_ljcross, sizeof(__pyx_k_ljcross), 0, 0, 1, 1},
  {&__pyx_n_s_log, __pyx_k_log, sizeof(__pyx_k_log), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_max, __pyx_k_max, sizeof(__pyx_k_max), 0, 0, 1, 1},
  {&__pyx_n_s_min, __pyx_k_min, sizeof(__pyx_k_min), 0, 0, 1, 1},
  {&__pyx_n_s_mm3, __pyx_k_mm3, sizeof(__pyx_k_mm3), 0, 0, 1, 1},
  {&__pyx_n_s_my_gpos, __pyx_k_my_gpos, sizeof(__pyx_k_my_gpos), 0, 0, 1, 1},
  {&__pyx_n_s_my_hess, __pyx_k_my_hess, sizeof(__pyx_k_my_hess), 0, 0, 1, 1},
  {&__pyx_n_s_my_vtens, __pyx_k_my_vtens, sizeof(__pyx_k_my_vtens), 0, 0, 1, 1},
  {&__pyx_n_s_my_work, __pyx_k_my_work, sizeof(__pyx_k_my_work), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_nbin, __pyx_k_nbin, sizeof(__pyx_k_nbin), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_ndelta, __pyx_k_ndelta, sizeof(__pyx_k_ndelta), 0, 0, 1, 1},
  {&__pyx_n_s_neighs, __pyx_k_neighs, sizeof(__pyx_k_neighs), 0, 0, 1, 1},
  {&__pyx_n_s_nffatype, __pyx_k_nffatype, sizeof(__pyx_k_nffatype), 0, 0, 1, 1},
  {&__pyx_n_s_nic, __pyx_k_nic, sizeof(__pyx_k_nic), 0, 0, 1, 1},
  {&__pyx_n_s_nimage, __pyx_k_nimage, sizeof(__pyx_k_nimage), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_build, __pyx_k_nlist_build, sizeof(__pyx_k_nlist_build), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_build_dd, __pyx_k_nlist_build_dd, sizeof(__pyx_k_nlist_build_dd), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_build_dd_omp, __pyx_k_nlist_build_dd_omp, sizeof(__pyx_k_nlist_build_dd_omp), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_decompose, __pyx_k_nlist_decompose, sizeof(__pyx_k_nlist_decompose), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_inc_r, __pyx_k_nlist_inc_r, sizeof(__pyx_k_nlist_inc_r), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_recompute, __pyx_k_nlist_recompute, sizeof(__pyx_k_nlist_recompute), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_status_finish, __pyx_k_nlist_status_finish, sizeof(__pyx_k_nlist_status_finish), 0, 0, 1, 1},
  {&__pyx_n_s_nlist_status_init, __pyx_k_nlist_status_init, sizeof(__pyx_k_nlist_status_init), 0, 0, 1, 1},
  {&__pyx_n_s_nneigh, __pyx_k_nneigh, sizeof(__pyx_k_nneigh), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_nv, __pyx_k_nv, sizeof(__pyx_k_nv), 0, 0, 1, 1},
  {&__pyx_n_s_nvec, __pyx_k_nvec, sizeof(__pyx_k_nvec), 0, 0, 1, 1},
  {&__pyx_n_s_olpslater1s1s, __pyx_k_olpslater1s1s, sizeof(__pyx_k_olpslater1s1s), 0, 0, 1, 1},
  {&__pyx_n_s_ones, __pyx_k_ones, sizeof(__pyx_k_ones), 0, 0, 1, 1},
  {&__pyx_n_s_onlypaulis, __pyx_k_onlypaulis, sizeof(__pyx_k_onlypaulis), 0, 0, 1, 1},
  {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
  {&__pyx_n_s_output, __pyx_k_output, sizeof(__pyx_k_output), 0, 0, 1, 1},
  {&__pyx_n_s_pairs, __pyx_k_pairs, sizeof(__pyx_k_pairs), 0, 0, 1, 1},
  {&__pyx_n_s_parameters, __pyx_k_parameters, sizeof(__pyx_k_parameters), 0, 0, 1, 1},
  {&__pyx_n_s_pos, __pyx_k_pos, sizeof(__pyx_k_pos), 0, 0, 1, 1},
  {&__pyx_n_s_pos0, __pyx_k_pos0, sizeof(__pyx_k_pos0), 0, 0, 1, 1},
  {&__pyx_n_s_pos1, __pyx_k_pos1, sizeof(__pyx_k_pos1), 0, 0, 1, 1},
  {&__pyx_n_s_pos_old, __pyx_k_pos_old, sizeof(__pyx_k_pos_old), 0, 0, 1, 1},
  {&__pyx_n_s_property, __pyx_k_property, sizeof(__pyx_k_property), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_getbuffer, __pyx_k_pyx_getbuffer, sizeof(__pyx_k_pyx_getbuffer), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_releasebuffer, __pyx_k_pyx_releasebuffer, sizeof(__pyx_k_pyx_releasebuffer), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_r0, __pyx_k_r0, sizeof(__pyx_k_r0), 0, 0, 1, 1},
  {&__pyx_n_s_r_circum, __pyx_k_r_circum, sizeof(__pyx_k_r_circum), 0, 0, 1, 1},
  {&__pyx_n_s_radii, __pyx_k_radii, sizeof(__pyx_k_radii), 0, 0, 1, 1},
  {&__pyx_n_s_radii2, __pyx_k_radii2, sizeof(__pyx_k_radii2), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rcut, __pyx_k_rcut, sizeof(__pyx_k_rcut), 0, 0, 1, 1},
  {&__pyx_kp_s_relative_permittivity_5_3f, __pyx_k_relative_permittivity_5_3f, sizeof(__pyx_k_relative_permittivity_5_3f), 0, 0, 1, 0},
  {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {&__pyx_n_s_result, __pyx_k_result, sizeof(__pyx_k_result), 0, 0, 1, 1},
  {&__pyx_n_s_rmax, __pyx_k_rmax, sizeof(__pyx_k_rmax), 0, 0, 1, 1},
  {&__pyx_n_s_rspacings, __pyx_k_rspacings, sizeof(__pyx_k_rspacings), 0, 0, 1, 1},
  {&__pyx_n_s_rvecs, __pyx_k_rvecs, sizeof(__pyx_k_rvecs), 0, 0, 1, 1},
  {&__pyx_kp_s_rvecs_must_be_a_C_contiguous_arr, __pyx_k_rvecs_must_be_a_C_contiguous_arr, sizeof(__pyx_k_rvecs_must_be_a_C_contiguous_arr), 0, 0, 1, 0},
  {&__pyx_n_s_setflags, __pyx_k_setflags, sizeof(__pyx_k_setflags), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_sig_cross, __pyx_k_sig_cross, sizeof(__pyx_k_sig_cross), 0, 0, 1, 1},
  {&__pyx_n_s_sigmas, __pyx_k_sigmas, sizeof(__pyx_k_sigmas), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_slater1p_N, __pyx_k_slater1p_N, sizeof(__pyx_k_slater1p_N), 0, 0, 1, 1},
  {&__pyx_n_s_slater1p_Z, __pyx_k_slater1p_Z, sizeof(__pyx_k_slater1p_Z), 0, 0, 1, 1},
  {&__pyx_n_s_slater1p_widths, __pyx_k_slater1p_widths, sizeof(__pyx_k_slater1p_widths), 0, 0, 1, 1},
  {&__pyx_n_s_slater1s_N, __pyx_k_slater1s_N, sizeof(__pyx_k_slater1s_N), 0, 0, 1, 1},
  {&__pyx_n_s_slater1s_Z, __pyx_k_slater1s_Z, sizeof(__pyx_k_slater1s_Z), 0, 0, 1, 1},
  {&__pyx_n_s_slater1s_widths, __pyx_k_slater1s_widths, sizeof(__pyx_k_slater1s_widths), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_sqrt, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {&__pyx_n_s_stab, __pyx_k_stab, sizeof(__pyx_k_stab), 0, 0, 1, 1},
  {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
  {&__pyx_n_s_svd, __pyx_k_svd, sizeof(__pyx_k_svd), 0, 0, 1, 1},
  {&__pyx_n_s_sw, __pyx_k_sw, sizeof(__pyx_k_sw), 0, 0, 1, 1},
  {&__pyx_kp_s_switch3_s, __pyx_k_switch3_s, sizeof(__pyx_k_switch3_s), 0, 0, 1, 0},
  {&__pyx_n_s_tau, __pyx_k_tau, sizeof(__pyx_k_tau), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tr, __pyx_k_tr, sizeof(__pyx_k_tr), 0, 0, 1, 1},
  {&__pyx_n_s_unitcell, __pyx_k_unitcell, sizeof(__pyx_k_unitcell), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_update_rvecs, __pyx_k_update_rvecs, sizeof(__pyx_k_update_rvecs), 0, 0, 1, 1},
  {&__pyx_n_s_view, __pyx_k_view, sizeof(__pyx_k_view), 0, 0, 1, 1},
  {&__pyx_n_s_vlist_back, __pyx_k_vlist_back, sizeof(__pyx_k_vlist_back), 0, 0, 1, 1},
  {&__pyx_n_s_vlist_forward, __pyx_k_vlist_forward, sizeof(__pyx_k_vlist_forward), 0, 0, 1, 1},
  {&__pyx_n_s_vlist_hessian, __pyx_k_vlist_hessian, sizeof(__pyx_k_vlist_hessian), 0, 0, 1, 1},
  {&__pyx_n_s_vols, __pyx_k_vols, sizeof(__pyx_k_vols), 0, 0, 1, 1},
  {&__pyx_n_s_volume, __pyx_k_volume, sizeof(__pyx_k_volume), 0, 0, 1, 1},
  {&__pyx_n_s_vtab, __pyx_k_vtab, sizeof(__pyx_k_vtab), 0, 0, 1, 1},
  {&__pyx_n_s_vtens, __pyx_k_vtens, sizeof(__pyx_k_vtens), 0, 0, 1, 1},
  {&__pyx_n_s_width, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 1},
  {&__pyx_n_s_width_power, __pyx_k_width_power, sizeof(__pyx_k_width_power), 0, 0, 1, 1},
  {&__pyx_kp_s_width_power_s, __pyx_k_width_power_s, sizeof(__pyx_k_width_power_s), 0, 0, 1, 0},
  {&__pyx_n_s_work, __pyx_k_work, sizeof(__pyx_k_work), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {&__pyx_n_s_yaff_log, __pyx_k_yaff_log, sizeof(__pyx_k_yaff_log), 0, 0, 1, 1},
  {&__pyx_n_s_yaff_pes_ext, __pyx_k_yaff_pes_ext, sizeof(__pyx_k_yaff_pes_ext), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_property = __Pyx_GetBuiltinName(__pyx_n_s_property); if (!__pyx_builtin_property) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 78; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "yaff/pes/ext.pyx":112
 *         else:
 *             if not rvecs.ndim==2 or not rvecs.flags['C_CONTIGUOUS'] or rvecs.shape[0] > 3 or rvecs.shape[1] != 3:
 *                 raise TypeError('rvecs must be a C contiguous array with three columns and at most three rows.')             # <<<<<<<<<<<<<<
 *             nvec = len(rvecs)
 *             Up, Sp, Vt = np.linalg.svd(rvecs, full_matrices=True)
 */
  __pyx_k_tuple_ = PyTuple_Pack(1, __pyx_kp_s_rvecs_must_be_a_C_contiguous_arr); if (unlikely(!__pyx_k_tuple_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_);
  __Pyx_GIVEREF(__pyx_k_tuple_);

  /* "yaff/pes/ext.pyx":140
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:
 *             result = np.zeros((3, 3), float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 */
  __pyx_k_tuple__2 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_k_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__2);
  __Pyx_GIVEREF(__pyx_k_tuple__2);

  /* "yaff/pes/ext.pyx":153
 *         cdef np.ndarray[double, ndim=2] result
 *         if full:
 *             result = np.zeros((3, 3), float)             # <<<<<<<<<<<<<<
 *         else:
 *             result = np.zeros((self.nvec, 3), float)
 */
  __pyx_k_tuple__3 = PyTuple_Pack(2, __pyx_int_3, __pyx_int_3); if (unlikely(!__pyx_k_tuple__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__3);
  __Pyx_GIVEREF(__pyx_k_tuple__3);

  /* "yaff/pes/ext.pyx":194
 *         lengths = np.sqrt(np.diag(tmp))
 *         tmp /= lengths
 *         tmp /= lengths.reshape((-1,1))             # <<<<<<<<<<<<<<
 *         if len(rvecs) < 2:
 *             cosines = np.array([])
 */
  __pyx_k_tuple__4 = PyTuple_Pack(2, __pyx_int_neg_1, __pyx_int_1); if (unlikely(!__pyx_k_tuple__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__4);
  __Pyx_GIVEREF(__pyx_k_tuple__4);
  __pyx_k_tuple__5 = PyTuple_Pack(1, __pyx_k_tuple__4); if (unlikely(!__pyx_k_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__5);
  __Pyx_GIVEREF(__pyx_k_tuple__5);

  /* "yaff/pes/ext.pyx":198
 *             cosines = np.array([])
 *         elif len(rvecs) == 2:
 *             cosines = np.array([tmp[0,1]])             # <<<<<<<<<<<<<<
 *         else:
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])
 */
  __pyx_k_tuple__6 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_1); if (unlikely(!__pyx_k_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__6);
  __Pyx_GIVEREF(__pyx_k_tuple__6);

  /* "yaff/pes/ext.pyx":200
 *             cosines = np.array([tmp[0,1]])
 *         else:
 *             cosines = np.array([tmp[1,2], tmp[2,0], tmp[0,1]])             # <<<<<<<<<<<<<<
 *         angles = np.arccos(np.clip(cosines, -1, 1))
 *         return lengths, angles
 */
  __pyx_k_tuple__7 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_2); if (unlikely(!__pyx_k_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__7);
  __Pyx_GIVEREF(__pyx_k_tuple__7);
  __pyx_k_tuple__8 = PyTuple_Pack(2, __pyx_int_2, __pyx_int_0); if (unlikely(!__pyx_k_tuple__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__8);
  __Pyx_GIVEREF(__pyx_k_tuple__8);
  __pyx_k_tuple__9 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_1); if (unlikely(!__pyx_k_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__9);
  __Pyx_GIVEREF(__pyx_k_tuple__9);

  /* "yaff/pes/ext.pyx":304
 *         if nimage > 0:
 *             if self.nvec == 0:
 *                 raise ValueError('Can only include distances to periodic images for periodic systems.')             # <<<<<<<<<<<<<<
 *             factor = (1+2*nimage)**self.nvec
 *         else:
 */
  __pyx_k_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Can_only_include_distances_to_pe); if (unlikely(!__pyx_k_tuple__10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__10);
  __Pyx_GIVEREF(__pyx_k_tuple__10);

  /* "yaff/pes/ext.pyx":311
 *         if do_include:
 *             if nimage != 0:
 *                 raise ValueError('When do_include==True, nimage must be zero.')             # <<<<<<<<<<<<<<
 *             if npair == 0:
 *                 raise ValueError('No pairs given and do_include==True.')
 */
  __pyx_k_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_When_do_include_True_nimage_must); if (unlikely(!__pyx_k_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__11);
  __Pyx_GIVEREF(__pyx_k_tuple__11);

  /* "yaff/pes/ext.pyx":313
 *                 raise ValueError('When do_include==True, nimage must be zero.')
 *             if npair == 0:
 *                 raise ValueError('No pairs given and do_include==True.')             # <<<<<<<<<<<<<<
 * 
 *         if pos1 is None:
 */
  __pyx_k_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_No_pairs_given_and_do_include_Tr); if (unlikely(!__pyx_k_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__12);
  __Pyx_GIVEREF(__pyx_k_tuple__12);

  /* "yaff/pes/ext.pyx":321
 *                 assert factor*(natom0*(natom0-1))/2 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom0, npair, True):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')             # <<<<<<<<<<<<<<
 *             cell.cell_compute_distances1(self._c_cell, <double*> pos0.data,
 *                                          <double*> output.data, natom0,
 */
  __pyx_k_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_The_pairs_array_must_countain_in); if (unlikely(!__pyx_k_tuple__13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__13);
  __Pyx_GIVEREF(__pyx_k_tuple__13);

  /* "yaff/pes/ext.pyx":335
 *                 assert factor*natom0*natom1 - npair == output.shape[0]
 *             if cell.is_invalid_exclude(pairs_pointer, natom0, natom1, npair, False):
 *                 raise ValueError('The pairs array must countain indices within proper bounds and must be lexicographically sorted.')             # <<<<<<<<<<<<<<
 *             cell.cell_compute_distances2(self._c_cell, <double*> pos0.data,
 *                                          <double*> pos1.data,
 */
  __pyx_k_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_The_pairs_array_must_countain_in); if (unlikely(!__pyx_k_tuple__14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__14);
  __Pyx_GIVEREF(__pyx_k_tuple__14);

  /* "yaff/pes/ext.pyx":938
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 */
  __pyx_k_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_Atom_Sigma_Epsilon); if (unlikely(!__pyx_k_tuple__15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__15);
  __Pyx_GIVEREF(__pyx_k_tuple__15);

  /* "yaff/pes/ext.pyx":1022
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom      Sigma    Epsilon    OnlyPauli')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_sigmas.shape[0]):
 */
  __pyx_k_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_Atom_Sigma_Epsilon_OnlyPauli); if (unlikely(!__pyx_k_tuple__16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__16);
  __Pyx_GIVEREF(__pyx_k_tuple__16);

  /* "yaff/pes/ext.pyx":1068
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom         r0         c6')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_r0.shape[0]):
 */
  __pyx_k_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_Atom_r0_c6); if (unlikely(!__pyx_k_tuple__17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__17);
  __Pyx_GIVEREF(__pyx_k_tuple__17);

  /* "yaff/pes/ext.pyx":1225
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1          A          B')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
  __pyx_k_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_ffatype_id0_ffatype_id1_A_B); if (unlikely(!__pyx_k_tuple__18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__18);
  __Pyx_GIVEREF(__pyx_k_tuple__18);

  /* "yaff/pes/ext.pyx":1315
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         eps          sig')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
  __pyx_k_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_ffatype_id0_ffatype_id1_eps_sig); if (unlikely(!__pyx_k_tuple__19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__19);
  __Pyx_GIVEREF(__pyx_k_tuple__19);

  /* "yaff/pes/ext.pyx":1455
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6          B')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
  __pyx_k_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_ffatype_id0_ffatype_id1_C6_B); if (unlikely(!__pyx_k_tuple__20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__20);
  __Pyx_GIVEREF(__pyx_k_tuple__20);

  /* "yaff/pes/ext.pyx":1596
 *         if log.do_high:
 *             log.hline()
 *             log('ffatype_id0 ffatype_id1         C6         C8          R')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i0 in xrange(self._c_nffatype):
 */
  __pyx_k_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_ffatype_id0_ffatype_id1_C6_C8_R); if (unlikely(!__pyx_k_tuple__21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__21);
  __Pyx_GIVEREF(__pyx_k_tuple__21);

  /* "yaff/pes/ext.pyx":1705
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom     Charge     Radius')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 */
  __pyx_k_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_Atom_Charge_Radius); if (unlikely(!__pyx_k_tuple__22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__22);
  __Pyx_GIVEREF(__pyx_k_tuple__22);

  /* "yaff/pes/ext.pyx":1798
 *         #TODO: Implement Hessian
 *         if hess is not None:
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')             # <<<<<<<<<<<<<<
 *         log("Computing PairPotEIDip energy and gradient")
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)
 */
  __pyx_k_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_Hessian_not_yet_implemented_for); if (unlikely(!__pyx_k_tuple__23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__23);
  __Pyx_GIVEREF(__pyx_k_tuple__23);

  /* "yaff/pes/ext.pyx":1799
 *         if hess is not None:
 *             raise NotImplementedError('Hessian not yet implemented for PairPotEIDip')
 *         log("Computing PairPotEIDip energy and gradient")             # <<<<<<<<<<<<<<
 *         E = PairPot.compute(self, neighs, stab, gpos, vtens, hess, nneigh)
 *         #E += 0.5*np.dot( np.transpose(np.reshape( self._c_dipoles, (-1,) )) , np.dot( self.poltens_i, np.reshape( self._c_dipoles, (-1,) ) ) )
 */
  __pyx_k_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_Computing_PairPotEIDip_energy_an); if (unlikely(!__pyx_k_tuple__24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__24);
  __Pyx_GIVEREF(__pyx_k_tuple__24);

  /* "yaff/pes/ext.pyx":1808
 *         if log.do_high:
 *             log.hline()
 *             log('Atom     Charge     Radius   Dipole_x   Dipole_y   Dipole_z   Radius')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_charges.shape[0]):
 */
  __pyx_k_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_Atom_Charge_Radius_Dipole_x_Dipo); if (unlikely(!__pyx_k_tuple__25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__25);
  __Pyx_GIVEREF(__pyx_k_tuple__25);

  /* "yaff/pes/ext.pyx":1886
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
  __pyx_k_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_Atom_Slater_charge_Core_charge); if (unlikely(!__pyx_k_tuple__26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__26);
  __Pyx_GIVEREF(__pyx_k_tuple__26);

  /* "yaff/pes/ext.pyx":1983
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge  Core charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
  __pyx_k_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_Atom_Slater_charge_Core_charge); if (unlikely(!__pyx_k_tuple__27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__27);
  __Pyx_GIVEREF(__pyx_k_tuple__27);

  /* "yaff/pes/ext.pyx":2091
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
  __pyx_k_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_Atom_Slater_charge_Slater_width); if (unlikely(!__pyx_k_tuple__28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__28);
  __Pyx_GIVEREF(__pyx_k_tuple__28);

  /* "yaff/pes/ext.pyx":2190
 *         if log.do_high:
 *             log.hline()
 *             log('   Atom  Slater charge   Slater width')             # <<<<<<<<<<<<<<
 *             log.hline()
 *             for i in xrange(self._c_slater1s_widths.shape[0]):
 */
  __pyx_k_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_Atom_Slater_charge_Slater_width); if (unlikely(!__pyx_k_tuple__29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__29);
  __Pyx_GIVEREF(__pyx_k_tuple__29);

  /* "yaff/pes/ext.pyx":2723
 *     assert deltas.flags['C_CONTIGUOUS']
 *     if gpos is None and vtens is None:
 *         raise TypeError('Either gpos or vtens must be given.')             # <<<<<<<<<<<<<<
 * 
 *     if gpos is None:
 */
  __pyx_k_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_Either_gpos_or_vtens_must_be_giv); if (unlikely(!__pyx_k_tuple__30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__30);
  __Pyx_GIVEREF(__pyx_k_tuple__30);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":215
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_k_tuple__31 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_k_tuple__31)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__31);
  __Pyx_GIVEREF(__pyx_k_tuple__31);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":219
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_k_tuple__32 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_k_tuple__32)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__32);
  __Pyx_GIVEREF(__pyx_k_tuple__32);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":257
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_k_tuple__33 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_k_tuple__33)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__33);
  __Pyx_GIVEREF(__pyx_k_tuple__33);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_k_tuple__34 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_k_tuple__34)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__34);
  __Pyx_GIVEREF(__pyx_k_tuple__34);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_k_tuple__35 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_k_tuple__35)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__35);
  __Pyx_GIVEREF(__pyx_k_tuple__35);

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_k_tuple__36 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_k_tuple__36)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__36);
  __Pyx_GIVEREF(__pyx_k_tuple__36);

  /* "yaff/pes/ext.pyx":347
 * 
 * 
 * def nlist_status_init(rmax):             # <<<<<<<<<<<<<<
 *     '''nlist_status_init(rmax)
 * 
 */
  __pyx_k_tuple__37 = PyTuple_Pack(2, __pyx_n_s_rmax, __pyx_n_s_result); if (unlikely(!__pyx_k_tuple__37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__37);
  __Pyx_GIVEREF(__pyx_k_tuple__37);
  __pyx_k_codeobj__38 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_status_init, 347, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":368
 * 
 * 
 * def nlist_build(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_k_tuple__39 = PyTuple_Pack(7, __pyx_n_s_pos, __pyx_n_s_rcut, __pyx_n_s_rmax, __pyx_n_s_unitcell, __pyx_n_s_status, __pyx_n_s_neighs, __pyx_n_s_split); if (unlikely(!__pyx_k_tuple__39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__39);
  __Pyx_GIVEREF(__pyx_k_tuple__39);
  __pyx_k_codeobj__40 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_build, 368, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":420
 * 
 * 
 * def nlist_decompose(np.ndarray[double, ndim=2] pos, Cell unitcell, np.ndarray[long, ndim=1] bin_indexes, np.ndarray[long, ndim=1] order,np.ndarray[long, ndim=1] domains):             # <<<<<<<<<<<<<<
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 */
  __pyx_k_tuple__41 = PyTuple_Pack(5, __pyx_n_s_pos, __pyx_n_s_unitcell, __pyx_n_s_bin_indexes, __pyx_n_s_order, __pyx_n_s_domains); if (unlikely(!__pyx_k_tuple__41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__41);
  __Pyx_GIVEREF(__pyx_k_tuple__41);
  __pyx_k_codeobj__42 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_decompose, 420, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":423
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 * def nlist_build_dd_omp(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_k_tuple__43 = PyTuple_Pack(11, __pyx_n_s_pos, __pyx_n_s_rcut, __pyx_n_s_rmax, __pyx_n_s_unitcell, __pyx_n_s_status, __pyx_n_s_neighs, __pyx_n_s_binsizes, __pyx_n_s_binsizes_cum, __pyx_n_s_nbin, __pyx_n_s_domains, __pyx_n_s_r_circum); if (unlikely(!__pyx_k_tuple__43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__43);
  __Pyx_GIVEREF(__pyx_k_tuple__43);
  __pyx_k_codeobj__44 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_build_dd_omp, 423, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":478
 *     )
 * 
 * def nlist_build_dd(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_k_tuple__45 = PyTuple_Pack(12, __pyx_n_s_pos, __pyx_n_s_rcut, __pyx_n_s_rmax, __pyx_n_s_unitcell, __pyx_n_s_status, __pyx_n_s_neighs, __pyx_n_s_binsizes, __pyx_n_s_binsizes_cum, __pyx_n_s_ijstart, __pyx_n_s_nbin, __pyx_n_s_domains, __pyx_n_s_r_circum); if (unlikely(!__pyx_k_tuple__45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__45);
  __Pyx_GIVEREF(__pyx_k_tuple__45);
  __pyx_k_codeobj__46 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__45, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_build_dd, 478, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__46)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":534
 * 
 * 
 * def nlist_status_finish(status):             # <<<<<<<<<<<<<<
 *     '''status
 *             The status array, either obtained from ``nlist_status_init``, or
 */
  __pyx_k_tuple__47 = PyTuple_Pack(1, __pyx_n_s_status); if (unlikely(!__pyx_k_tuple__47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__47);
  __Pyx_GIVEREF(__pyx_k_tuple__47);
  __pyx_k_codeobj__48 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_status_finish, 534, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__48)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":544
 * 
 * 
 * def nlist_recompute(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=2] pos_old,
 *                     Cell unitcell,
 */
  __pyx_k_tuple__49 = PyTuple_Pack(4, __pyx_n_s_pos, __pyx_n_s_pos_old, __pyx_n_s_unitcell, __pyx_n_s_neighs); if (unlikely(!__pyx_k_tuple__49)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__49);
  __Pyx_GIVEREF(__pyx_k_tuple__49);
  __pyx_k_codeobj__50 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_recompute, 544, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__50)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":580
 * 
 * 
 * def nlist_inc_r(Cell unitcell, np.ndarray[long, ndim=1] r, np.ndarray[long, ndim=1] rmax):             # <<<<<<<<<<<<<<
 *     '''Increment the vector ``r`` to the location of the `next` periodic image.
 * 
 */
  __pyx_k_tuple__51 = PyTuple_Pack(3, __pyx_n_s_unitcell, __pyx_n_s_r, __pyx_n_s_rmax); if (unlikely(!__pyx_k_tuple__51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__51);
  __Pyx_GIVEREF(__pyx_k_tuple__51);
  __pyx_k_codeobj__52 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_nlist_inc_r, 580, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2233
 * 
 * 
 * def compute_ewald_reci(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */
  __pyx_k_tuple__53 = PyTuple_Pack(15, __pyx_n_s_pos, __pyx_n_s_charges, __pyx_n_s_unitcell, __pyx_n_s_alpha, __pyx_n_s_gmax, __pyx_n_s_gcut, __pyx_n_s_dielectric, __pyx_n_s_gpos, __pyx_n_s_work, __pyx_n_s_vtens, __pyx_n_s_hess, __pyx_n_s_my_gpos, __pyx_n_s_my_work, __pyx_n_s_my_vtens, __pyx_n_s_my_hess); if (unlikely(!__pyx_k_tuple__53)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__53);
  __Pyx_GIVEREF(__pyx_k_tuple__53);
  __pyx_k_codeobj__54 = (PyObject*)__Pyx_PyCode_New(11, 0, 15, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_ewald_reci, 2233, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2337
 * 
 * 
 * def compute_ewald_reci_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_k_tuple__55 = PyTuple_Pack(13, __pyx_n_s_pos, __pyx_n_s_charges, __pyx_n_s_dipoles, __pyx_n_s_unitcell, __pyx_n_s_alpha, __pyx_n_s_gmax, __pyx_n_s_gcut, __pyx_n_s_gpos, __pyx_n_s_work, __pyx_n_s_vtens, __pyx_n_s_my_gpos, __pyx_n_s_my_work, __pyx_n_s_my_vtens); if (unlikely(!__pyx_k_tuple__55)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__55);
  __Pyx_GIVEREF(__pyx_k_tuple__55);
  __pyx_k_codeobj__56 = (PyObject*)__Pyx_PyCode_New(10, 0, 13, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__55, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_ewald_reci_dd, 2337, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__56)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2431
 * 
 * 
 * def compute_ewald_corr(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */
  __pyx_k_tuple__57 = PyTuple_Pack(12, __pyx_n_s_pos, __pyx_n_s_charges, __pyx_n_s_unitcell, __pyx_n_s_alpha, __pyx_n_s_stab, __pyx_n_s_dielectric, __pyx_n_s_gpos, __pyx_n_s_vtens, __pyx_n_s_hess, __pyx_n_s_my_gpos, __pyx_n_s_my_vtens, __pyx_n_s_my_hess); if (unlikely(!__pyx_k_tuple__57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__57);
  __Pyx_GIVEREF(__pyx_k_tuple__57);
  __pyx_k_codeobj__58 = (PyObject*)__Pyx_PyCode_New(9, 0, 12, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_ewald_corr, 2431, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__58)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2518
 *     )
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_k_tuple__59 = PyTuple_Pack(10, __pyx_n_s_pos, __pyx_n_s_charges, __pyx_n_s_dipoles, __pyx_n_s_unitcell, __pyx_n_s_alpha, __pyx_n_s_stab, __pyx_n_s_gpos, __pyx_n_s_vtens, __pyx_n_s_my_gpos, __pyx_n_s_my_vtens); if (unlikely(!__pyx_k_tuple__59)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__59);
  __Pyx_GIVEREF(__pyx_k_tuple__59);
  __pyx_k_codeobj__60 = (PyObject*)__Pyx_PyCode_New(8, 0, 10, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_ewald_corr_dd, 2518, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2592
 * 
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_k_tuple__61 = PyTuple_Pack(10, __pyx_n_s_pos, __pyx_n_s_charges, __pyx_n_s_dipoles, __pyx_n_s_unitcell, __pyx_n_s_alpha, __pyx_n_s_stab, __pyx_n_s_gpos, __pyx_n_s_vtens, __pyx_n_s_my_gpos, __pyx_n_s_my_vtens); if (unlikely(!__pyx_k_tuple__61)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__61);
  __Pyx_GIVEREF(__pyx_k_tuple__61);
  __pyx_k_codeobj__62 = (PyObject*)__Pyx_PyCode_New(8, 0, 10, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__61, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_ewald_corr_dd, 2592, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__62)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2671
 * 
 * 
 * def dlist_forward(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                   Cell unitcell,
 *                   np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */
  __pyx_k_tuple__63 = PyTuple_Pack(4, __pyx_n_s_pos, __pyx_n_s_unitcell, __pyx_n_s_deltas, __pyx_n_s_ndelta); if (unlikely(!__pyx_k_tuple__63)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__63);
  __Pyx_GIVEREF(__pyx_k_tuple__63);
  __pyx_k_codeobj__64 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_dlist_forward, 2671, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__64)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2697
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 * def dlist_back(np.ndarray[double, ndim=2] gpos,             # <<<<<<<<<<<<<<
 *                np.ndarray[double, ndim=2] vtens,
 *                np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */
  __pyx_k_tuple__65 = PyTuple_Pack(6, __pyx_n_s_gpos, __pyx_n_s_vtens, __pyx_n_s_deltas, __pyx_n_s_ndelta, __pyx_n_s_my_gpos, __pyx_n_s_my_vtens); if (unlikely(!__pyx_k_tuple__65)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__65);
  __Pyx_GIVEREF(__pyx_k_tuple__65);
  __pyx_k_codeobj__66 = (PyObject*)__Pyx_PyCode_New(4, 0, 6, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_dlist_back, 2697, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__66)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2749
 * 
 * 
 * def iclist_forward(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                    np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''Compute internal coordinates based on relative vectors
 */
  __pyx_k_tuple__67 = PyTuple_Pack(3, __pyx_n_s_deltas, __pyx_n_s_ictab, __pyx_n_s_nic); if (unlikely(!__pyx_k_tuple__67)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__67);
  __Pyx_GIVEREF(__pyx_k_tuple__67);
  __pyx_k_codeobj__68 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_iclist_forward, 2749, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__68)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2770
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 * 
 * def iclist_back(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''The back-propagation step in the internal coordinate list
 */
  __pyx_k_tuple__69 = PyTuple_Pack(3, __pyx_n_s_deltas, __pyx_n_s_ictab, __pyx_n_s_nic); if (unlikely(!__pyx_k_tuple__69)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__69);
  __Pyx_GIVEREF(__pyx_k_tuple__69);
  __pyx_k_codeobj__70 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_iclist_back, 2770, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2793
 * 
 * 
 * def iclist_jacobian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] jacobian, long nic):
 */
  __pyx_k_tuple__71 = PyTuple_Pack(5, __pyx_n_s_deltas, __pyx_n_s_ictab, __pyx_n_s_jacobian, __pyx_n_s_nic, __pyx_n_s_c_ndelta); if (unlikely(!__pyx_k_tuple__71)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__71);
  __Pyx_GIVEREF(__pyx_k_tuple__71);
  __pyx_k_codeobj__72 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_iclist_jacobian, 2793, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__72)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2821
 * 
 * 
 * def iclist_hessian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] hessian, long nic):
 */
  __pyx_k_tuple__73 = PyTuple_Pack(5, __pyx_n_s_deltas, __pyx_n_s_ictab, __pyx_n_s_hessian, __pyx_n_s_nic, __pyx_n_s_c_ndelta); if (unlikely(!__pyx_k_tuple__73)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__73);
  __Pyx_GIVEREF(__pyx_k_tuple__73);
  __pyx_k_codeobj__74 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_iclist_hessian, 2821, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__74)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2854
 * 
 * 
 * def vlist_forward(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                   np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''Computes valence energy terms based on a list of internal coordinates
 */
  __pyx_k_tuple__75 = PyTuple_Pack(3, __pyx_n_s_ictab, __pyx_n_s_vtab, __pyx_n_s_nv); if (unlikely(!__pyx_k_tuple__75)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__75);
  __Pyx_GIVEREF(__pyx_k_tuple__75);
  __pyx_k_codeobj__76 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_vlist_forward, 2854, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__76)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2874
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_back(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''The back-propagation step in the valence list.
 */
  __pyx_k_tuple__77 = PyTuple_Pack(3, __pyx_n_s_ictab, __pyx_n_s_vtab, __pyx_n_s_nv); if (unlikely(!__pyx_k_tuple__77)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__77);
  __Pyx_GIVEREF(__pyx_k_tuple__77);
  __pyx_k_codeobj__78 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__77, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_vlist_back, 2874, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__78)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2897
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_hessian(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv,
 *                np.ndarray[double, ndim=2] hessian):
 */
  __pyx_k_tuple__79 = PyTuple_Pack(5, __pyx_n_s_ictab, __pyx_n_s_vtab, __pyx_n_s_nv, __pyx_n_s_hessian, __pyx_n_s_c_nic); if (unlikely(!__pyx_k_tuple__79)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__79);
  __Pyx_GIVEREF(__pyx_k_tuple__79);
  __pyx_k_codeobj__80 = (PyObject*)__Pyx_PyCode_New(4, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_vlist_hessian, 2897, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__80)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "yaff/pes/ext.pyx":2927
 * #
 * 
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):             # <<<<<<<<<<<<<<
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3
 */
  __pyx_k_tuple__81 = PyTuple_Pack(3, __pyx_n_s_center, __pyx_n_s_unitcell, __pyx_n_s_egrid); if (unlikely(!__pyx_k_tuple__81)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple__81);
  __Pyx_GIVEREF(__pyx_k_tuple__81);
  __pyx_k_codeobj__82 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_steven_build_yaff_yaff_pes, __pyx_n_s_compute_grid3d, 2927, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj__82)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initext(void); /*proto*/
PyMODINIT_FUNC initext(void)
#else
PyMODINIT_FUNC PyInit_ext(void); /*proto*/
PyMODINIT_FUNC PyInit_ext(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_ext(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("ext"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_Low_level_C_routines_This_extens), 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_yaff__pes__ext) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "yaff.pes.ext")) {
      if (unlikely(PyDict_SetItemString(modules, "yaff.pes.ext", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_4yaff_3pes_3ext_PairPot = &__pyx_vtable_4yaff_3pes_3ext_PairPot;
  __pyx_vtable_4yaff_3pes_3ext_PairPot.set_truncation = (PyObject *(*)(struct __pyx_obj_4yaff_3pes_3ext_PairPot *, struct __pyx_obj_4yaff_3pes_3ext_Truncation *))__pyx_f_4yaff_3pes_3ext_7PairPot_set_truncation;
  __pyx_vtable_4yaff_3pes_3ext_PairPot.set_switchon = (PyObject *(*)(struct __pyx_obj_4yaff_3pes_3ext_PairPot *, struct __pyx_obj_4yaff_3pes_3ext_SwitchOn *))__pyx_f_4yaff_3pes_3ext_7PairPot_set_switchon;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPot.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPot.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPot", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPot) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPot = &__pyx_type_4yaff_3pes_3ext_PairPot;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotLJ = &__pyx_vtable_4yaff_3pes_3ext_PairPotLJ;
  __pyx_vtable_4yaff_3pes_3ext_PairPotLJ.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotLJ.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotLJ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotLJ.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotLJ.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotLJ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotLJ", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotLJ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotLJ = &__pyx_type_4yaff_3pes_3ext_PairPotLJ;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_Truncation) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_Truncation.tp_print = 0;
  if (__Pyx_SetAttrString(__pyx_m, "Truncation", (PyObject *)&__pyx_type_4yaff_3pes_3ext_Truncation) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_Truncation = &__pyx_type_4yaff_3pes_3ext_Truncation;
  __pyx_type_4yaff_3pes_3ext_Hammer.tp_base = __pyx_ptype_4yaff_3pes_3ext_Truncation;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_Hammer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_Hammer.tp_print = 0;
  if (__Pyx_SetAttrString(__pyx_m, "Hammer", (PyObject *)&__pyx_type_4yaff_3pes_3ext_Hammer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_Hammer = &__pyx_type_4yaff_3pes_3ext_Hammer;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotMM3 = &__pyx_vtable_4yaff_3pes_3ext_PairPotMM3;
  __pyx_vtable_4yaff_3pes_3ext_PairPotMM3.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotMM3.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotMM3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotMM3.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotMM3.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotMM3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotMM3", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotMM3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotMM3 = &__pyx_type_4yaff_3pes_3ext_PairPotMM3;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr = &__pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;
  __pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotEiSlater1s1sCorr", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr = &__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotEIDip = &__pyx_vtable_4yaff_3pes_3ext_PairPotEIDip;
  __pyx_vtable_4yaff_3pes_3ext_PairPotEIDip.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotEIDip.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotEIDip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotEIDip.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotEIDip.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotEIDip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotEIDip", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotEIDip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotEIDip = &__pyx_type_4yaff_3pes_3ext_PairPotEIDip;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_SwitchOn) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_SwitchOn.tp_print = 0;
  if (__Pyx_SetAttrString(__pyx_m, "SwitchOn", (PyObject *)&__pyx_type_4yaff_3pes_3ext_SwitchOn) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_SwitchOn = &__pyx_type_4yaff_3pes_3ext_SwitchOn;
  __pyx_type_4yaff_3pes_3ext_SwitchErrorFunction.tp_base = __pyx_ptype_4yaff_3pes_3ext_SwitchOn;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_SwitchErrorFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_SwitchErrorFunction.tp_print = 0;
  if (__Pyx_SetAttrString(__pyx_m, "SwitchErrorFunction", (PyObject *)&__pyx_type_4yaff_3pes_3ext_SwitchErrorFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_SwitchErrorFunction = &__pyx_type_4yaff_3pes_3ext_SwitchErrorFunction;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotLJCross = &__pyx_vtable_4yaff_3pes_3ext_PairPotLJCross;
  __pyx_vtable_4yaff_3pes_3ext_PairPotLJCross.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotLJCross.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotLJCross) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotLJCross.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotLJCross.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotLJCross) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotLJCross", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotLJCross) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotLJCross = &__pyx_type_4yaff_3pes_3ext_PairPotLJCross;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_Cell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_Cell.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_4yaff_3pes_3ext_Cell, "__init__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_4yaff_3pes_3ext_4Cell_4__init__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_4yaff_3pes_3ext_4Cell_4__init__.doc = __pyx_doc_4yaff_3pes_3ext_4Cell_4__init__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_4yaff_3pes_3ext_4Cell_4__init__;
    }
  }
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "Cell", (PyObject *)&__pyx_type_4yaff_3pes_3ext_Cell) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_Cell = &__pyx_type_4yaff_3pes_3ext_Cell;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotEI = &__pyx_vtable_4yaff_3pes_3ext_PairPotEI;
  __pyx_vtable_4yaff_3pes_3ext_PairPotEI.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotEI.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotEI) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotEI.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotEI.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotEI) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotEI", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotEI) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotEI = &__pyx_type_4yaff_3pes_3ext_PairPotEI;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotOlpSlater1s1s = &__pyx_vtable_4yaff_3pes_3ext_PairPotOlpSlater1s1s;
  __pyx_vtable_4yaff_3pes_3ext_PairPotOlpSlater1s1s.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotOlpSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotOlpSlater1s1s", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s = &__pyx_type_4yaff_3pes_3ext_PairPotOlpSlater1s1s;
  __pyx_type_4yaff_3pes_3ext_Switch3.tp_base = __pyx_ptype_4yaff_3pes_3ext_Truncation;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_Switch3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_Switch3.tp_print = 0;
  if (__Pyx_SetAttrString(__pyx_m, "Switch3", (PyObject *)&__pyx_type_4yaff_3pes_3ext_Switch3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_Switch3 = &__pyx_type_4yaff_3pes_3ext_Switch3;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotDisp68BJDamp = &__pyx_vtable_4yaff_3pes_3ext_PairPotDisp68BJDamp;
  __pyx_vtable_4yaff_3pes_3ext_PairPotDisp68BJDamp.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotDisp68BJDamp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotDisp68BJDamp", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp = &__pyx_type_4yaff_3pes_3ext_PairPotDisp68BJDamp;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s = &__pyx_vtable_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;
  __pyx_vtable_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotChargeTransferSlater1s1s", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s = &__pyx_type_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotExpRep = &__pyx_vtable_4yaff_3pes_3ext_PairPotExpRep;
  __pyx_vtable_4yaff_3pes_3ext_PairPotExpRep.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotExpRep.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotExpRep) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotExpRep.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotExpRep.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotExpRep) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotExpRep", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotExpRep) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1084; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotExpRep = &__pyx_type_4yaff_3pes_3ext_PairPotExpRep;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotGrimme = &__pyx_vtable_4yaff_3pes_3ext_PairPotGrimme;
  __pyx_vtable_4yaff_3pes_3ext_PairPotGrimme.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotGrimme.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotGrimme) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotGrimme.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotGrimme.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotGrimme) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotGrimme", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotGrimme) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotGrimme = &__pyx_type_4yaff_3pes_3ext_PairPotGrimme;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotDampDisp = &__pyx_vtable_4yaff_3pes_3ext_PairPotDampDisp;
  __pyx_vtable_4yaff_3pes_3ext_PairPotDampDisp.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotDampDisp.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotDampDisp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotDampDisp.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotDampDisp.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotDampDisp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotDampDisp", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotDampDisp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp = &__pyx_type_4yaff_3pes_3ext_PairPotDampDisp;
  __pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr = &__pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;
  __pyx_vtable_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr.__pyx_base = *__pyx_vtabptr_4yaff_3pes_3ext_PairPot;
  __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr.tp_base = __pyx_ptype_4yaff_3pes_3ext_PairPot;
  if (PyType_Ready(&__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr.tp_dict, __pyx_vtabptr_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairPotEiSlater1sp1spCorr", (PyObject *)&__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr = &__pyx_type_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "yaff/pes/ext.pyx":32
 * 
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * cimport cell
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "yaff/pes/ext.pyx":45
 * cimport switchon
 * 
 * from yaff.log import log             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_log);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_log);
  __Pyx_GIVEREF(__pyx_n_s_log);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_yaff_log, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_log); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_log, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":48
 * 
 * 
 * __all__ = [             # <<<<<<<<<<<<<<
 *     'Cell', 'nlist_status_init', 'nlist_build', 'nlist_build_dd',
 *     'nlist_build_dd_omp', 'nlist_status_finish', 'nlist_decompose',
 */
  __pyx_t_2 = PyList_New(40); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Cell);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Cell);
  __Pyx_GIVEREF(__pyx_n_s_Cell);
  __Pyx_INCREF(__pyx_n_s_nlist_status_init);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_nlist_status_init);
  __Pyx_GIVEREF(__pyx_n_s_nlist_status_init);
  __Pyx_INCREF(__pyx_n_s_nlist_build);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_nlist_build);
  __Pyx_GIVEREF(__pyx_n_s_nlist_build);
  __Pyx_INCREF(__pyx_n_s_nlist_build_dd);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_nlist_build_dd);
  __Pyx_GIVEREF(__pyx_n_s_nlist_build_dd);
  __Pyx_INCREF(__pyx_n_s_nlist_build_dd_omp);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_nlist_build_dd_omp);
  __Pyx_GIVEREF(__pyx_n_s_nlist_build_dd_omp);
  __Pyx_INCREF(__pyx_n_s_nlist_status_finish);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_nlist_status_finish);
  __Pyx_GIVEREF(__pyx_n_s_nlist_status_finish);
  __Pyx_INCREF(__pyx_n_s_nlist_decompose);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_nlist_decompose);
  __Pyx_GIVEREF(__pyx_n_s_nlist_decompose);
  __Pyx_INCREF(__pyx_n_s_nlist_recompute);
  PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_nlist_recompute);
  __Pyx_GIVEREF(__pyx_n_s_nlist_recompute);
  __Pyx_INCREF(__pyx_n_s_nlist_inc_r);
  PyList_SET_ITEM(__pyx_t_2, 8, __pyx_n_s_nlist_inc_r);
  __Pyx_GIVEREF(__pyx_n_s_nlist_inc_r);
  __Pyx_INCREF(__pyx_n_s_Hammer);
  PyList_SET_ITEM(__pyx_t_2, 9, __pyx_n_s_Hammer);
  __Pyx_GIVEREF(__pyx_n_s_Hammer);
  __Pyx_INCREF(__pyx_n_s_Switch3);
  PyList_SET_ITEM(__pyx_t_2, 10, __pyx_n_s_Switch3);
  __Pyx_GIVEREF(__pyx_n_s_Switch3);
  __Pyx_INCREF(__pyx_n_s_PairPot);
  PyList_SET_ITEM(__pyx_t_2, 11, __pyx_n_s_PairPot);
  __Pyx_GIVEREF(__pyx_n_s_PairPot);
  __Pyx_INCREF(__pyx_n_s_PairPotLJ);
  PyList_SET_ITEM(__pyx_t_2, 12, __pyx_n_s_PairPotLJ);
  __Pyx_GIVEREF(__pyx_n_s_PairPotLJ);
  __Pyx_INCREF(__pyx_n_s_PairPotMM3);
  PyList_SET_ITEM(__pyx_t_2, 13, __pyx_n_s_PairPotMM3);
  __Pyx_GIVEREF(__pyx_n_s_PairPotMM3);
  __Pyx_INCREF(__pyx_n_s_PairPotGrimme);
  PyList_SET_ITEM(__pyx_t_2, 14, __pyx_n_s_PairPotGrimme);
  __Pyx_GIVEREF(__pyx_n_s_PairPotGrimme);
  __Pyx_INCREF(__pyx_n_s_PairPotExpRep);
  PyList_SET_ITEM(__pyx_t_2, 15, __pyx_n_s_PairPotExpRep);
  __Pyx_GIVEREF(__pyx_n_s_PairPotExpRep);
  __Pyx_INCREF(__pyx_n_s_PairPotLJCross);
  PyList_SET_ITEM(__pyx_t_2, 16, __pyx_n_s_PairPotLJCross);
  __Pyx_GIVEREF(__pyx_n_s_PairPotLJCross);
  __Pyx_INCREF(__pyx_n_s_PairPotDampDisp);
  PyList_SET_ITEM(__pyx_t_2, 17, __pyx_n_s_PairPotDampDisp);
  __Pyx_GIVEREF(__pyx_n_s_PairPotDampDisp);
  __Pyx_INCREF(__pyx_n_s_PairPotDisp68BJDamp);
  PyList_SET_ITEM(__pyx_t_2, 18, __pyx_n_s_PairPotDisp68BJDamp);
  __Pyx_GIVEREF(__pyx_n_s_PairPotDisp68BJDamp);
  __Pyx_INCREF(__pyx_n_s_PairPotEI);
  PyList_SET_ITEM(__pyx_t_2, 19, __pyx_n_s_PairPotEI);
  __Pyx_GIVEREF(__pyx_n_s_PairPotEI);
  __Pyx_INCREF(__pyx_n_s_PairPotEIDip);
  PyList_SET_ITEM(__pyx_t_2, 20, __pyx_n_s_PairPotEIDip);
  __Pyx_GIVEREF(__pyx_n_s_PairPotEIDip);
  __Pyx_INCREF(__pyx_n_s_PairPotEiSlater1s1sCorr);
  PyList_SET_ITEM(__pyx_t_2, 21, __pyx_n_s_PairPotEiSlater1s1sCorr);
  __Pyx_GIVEREF(__pyx_n_s_PairPotEiSlater1s1sCorr);
  __Pyx_INCREF(__pyx_n_s_PairPotEiSlater1sp1spCorr);
  PyList_SET_ITEM(__pyx_t_2, 22, __pyx_n_s_PairPotEiSlater1sp1spCorr);
  __Pyx_GIVEREF(__pyx_n_s_PairPotEiSlater1sp1spCorr);
  __Pyx_INCREF(__pyx_n_s_PairPotOlpSlater1s1s);
  PyList_SET_ITEM(__pyx_t_2, 23, __pyx_n_s_PairPotOlpSlater1s1s);
  __Pyx_GIVEREF(__pyx_n_s_PairPotOlpSlater1s1s);
  __Pyx_INCREF(__pyx_n_s_PairPotChargeTransferSlater1s1s);
  PyList_SET_ITEM(__pyx_t_2, 24, __pyx_n_s_PairPotChargeTransferSlater1s1s);
  __Pyx_GIVEREF(__pyx_n_s_PairPotChargeTransferSlater1s1s);
  __Pyx_INCREF(__pyx_n_s_compute_ewald_reci);
  PyList_SET_ITEM(__pyx_t_2, 25, __pyx_n_s_compute_ewald_reci);
  __Pyx_GIVEREF(__pyx_n_s_compute_ewald_reci);
  __Pyx_INCREF(__pyx_n_s_compute_ewald_reci_dd);
  PyList_SET_ITEM(__pyx_t_2, 26, __pyx_n_s_compute_ewald_reci_dd);
  __Pyx_GIVEREF(__pyx_n_s_compute_ewald_reci_dd);
  __Pyx_INCREF(__pyx_n_s_compute_ewald_corr);
  PyList_SET_ITEM(__pyx_t_2, 27, __pyx_n_s_compute_ewald_corr);
  __Pyx_GIVEREF(__pyx_n_s_compute_ewald_corr);
  __Pyx_INCREF(__pyx_n_s_compute_ewald_corr_dd);
  PyList_SET_ITEM(__pyx_t_2, 28, __pyx_n_s_compute_ewald_corr_dd);
  __Pyx_GIVEREF(__pyx_n_s_compute_ewald_corr_dd);
  __Pyx_INCREF(__pyx_n_s_dlist_forward);
  PyList_SET_ITEM(__pyx_t_2, 29, __pyx_n_s_dlist_forward);
  __Pyx_GIVEREF(__pyx_n_s_dlist_forward);
  __Pyx_INCREF(__pyx_n_s_dlist_back);
  PyList_SET_ITEM(__pyx_t_2, 30, __pyx_n_s_dlist_back);
  __Pyx_GIVEREF(__pyx_n_s_dlist_back);
  __Pyx_INCREF(__pyx_n_s_iclist_forward);
  PyList_SET_ITEM(__pyx_t_2, 31, __pyx_n_s_iclist_forward);
  __Pyx_GIVEREF(__pyx_n_s_iclist_forward);
  __Pyx_INCREF(__pyx_n_s_iclist_back);
  PyList_SET_ITEM(__pyx_t_2, 32, __pyx_n_s_iclist_back);
  __Pyx_GIVEREF(__pyx_n_s_iclist_back);
  __Pyx_INCREF(__pyx_n_s_iclist_jacobian);
  PyList_SET_ITEM(__pyx_t_2, 33, __pyx_n_s_iclist_jacobian);
  __Pyx_GIVEREF(__pyx_n_s_iclist_jacobian);
  __Pyx_INCREF(__pyx_n_s_iclist_hessian);
  PyList_SET_ITEM(__pyx_t_2, 34, __pyx_n_s_iclist_hessian);
  __Pyx_GIVEREF(__pyx_n_s_iclist_hessian);
  __Pyx_INCREF(__pyx_n_s_vlist_forward);
  PyList_SET_ITEM(__pyx_t_2, 35, __pyx_n_s_vlist_forward);
  __Pyx_GIVEREF(__pyx_n_s_vlist_forward);
  __Pyx_INCREF(__pyx_n_s_vlist_back);
  PyList_SET_ITEM(__pyx_t_2, 36, __pyx_n_s_vlist_back);
  __Pyx_GIVEREF(__pyx_n_s_vlist_back);
  __Pyx_INCREF(__pyx_n_s_vlist_hessian);
  PyList_SET_ITEM(__pyx_t_2, 37, __pyx_n_s_vlist_hessian);
  __Pyx_GIVEREF(__pyx_n_s_vlist_hessian);
  __Pyx_INCREF(__pyx_n_s_compute_grid3d);
  PyList_SET_ITEM(__pyx_t_2, 38, __pyx_n_s_compute_grid3d);
  __Pyx_GIVEREF(__pyx_n_s_compute_grid3d);
  __Pyx_INCREF(__pyx_n_s_SwitchErrorFunction);
  PyList_SET_ITEM(__pyx_t_2, 39, __pyx_n_s_SwitchErrorFunction);
  __Pyx_GIVEREF(__pyx_n_s_SwitchErrorFunction);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_all_2, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":128
 *         return cell.cell_get_nvec(self._c_cell)
 * 
 *     nvec = property(_get_nvec)             # <<<<<<<<<<<<<<
 * 
 *     def _get_volume(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_nvec); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_nvec, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":134
 *         return cell.cell_get_volume(self._c_cell)
 * 
 *     volume = property(_get_volume)             # <<<<<<<<<<<<<<
 * 
 *     def _get_rvecs(self, full=False):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_volume); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_volume, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":147
 *         return result
 * 
 *     rvecs = property(_get_rvecs)             # <<<<<<<<<<<<<<
 * 
 *     def _get_gvecs(self, full=False):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_rvecs); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_rvecs, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":160
 *         return result
 * 
 *     gvecs = property(_get_gvecs)             # <<<<<<<<<<<<<<
 * 
 *     def _get_rspacings(self, full=False):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_gvecs); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_gvecs, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":173
 *         return result
 * 
 *     rspacings = property(_get_rspacings)             # <<<<<<<<<<<<<<
 * 
 *     def _get_gspacings(self, full=False):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_rspacings); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_rspacings, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":186
 *         return result
 * 
 *     gspacings = property(_get_gspacings)             # <<<<<<<<<<<<<<
 * 
 *     def _get_parameters(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_gspacings); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_gspacings, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":204
 *         return lengths, angles
 * 
 *     parameters = property(_get_parameters)             # <<<<<<<<<<<<<<
 * 
 *     def mic(self, np.ndarray[double, ndim=1] delta):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell, __pyx_n_s_get_parameters); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Cell->tp_dict, __pyx_n_s_parameters, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Cell);

  /* "yaff/pes/ext.pyx":347
 * 
 * 
 * def nlist_status_init(rmax):             # <<<<<<<<<<<<<<
 *     '''nlist_status_init(rmax)
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_1nlist_status_init, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_status_init, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":368
 * 
 * 
 * def nlist_build(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_3nlist_build, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_build, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":420
 * 
 * 
 * def nlist_decompose(np.ndarray[double, ndim=2] pos, Cell unitcell, np.ndarray[long, ndim=1] bin_indexes, np.ndarray[long, ndim=1] order,np.ndarray[long, ndim=1] domains):             # <<<<<<<<<<<<<<
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_5nlist_decompose, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_decompose, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":423
 *     return nlist.decompose_domain( <double*>pos.data,  unitcell._c_cell, <long*>bin_indexes.data, <long*>order.data, len(pos), <long*>domains.data)
 * 
 * def nlist_build_dd_omp(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_7nlist_build_dd_omp, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_build_dd_omp, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":478
 *     )
 * 
 * def nlist_build_dd(np.ndarray[double, ndim=2] pos, double rcut,             # <<<<<<<<<<<<<<
 *                 np.ndarray[long, ndim=1] rmax,
 *                 Cell unitcell, np.ndarray[long, ndim=1] status,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_9nlist_build_dd, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_build_dd, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":534
 * 
 * 
 * def nlist_status_finish(status):             # <<<<<<<<<<<<<<
 *     '''status
 *             The status array, either obtained from ``nlist_status_init``, or
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_11nlist_status_finish, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_status_finish, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":544
 * 
 * 
 * def nlist_recompute(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                     np.ndarray[double, ndim=2] pos_old,
 *                     Cell unitcell,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_13nlist_recompute, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_recompute, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":580
 * 
 * 
 * def nlist_inc_r(Cell unitcell, np.ndarray[long, ndim=1] r, np.ndarray[long, ndim=1] rmax):             # <<<<<<<<<<<<<<
 *     '''Increment the vector ``r`` to the location of the `next` periodic image.
 * 
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_15nlist_inc_r, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_nlist_inc_r, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":669
 *         return truncation.hammer_get_tau(self._c_trunc_scheme)
 * 
 *     tau = property(_get_tau)             # <<<<<<<<<<<<<<
 * 
 *     def get_log(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Hammer, __pyx_n_s_get_tau); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Hammer->tp_dict, __pyx_n_s_tau, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Hammer);

  /* "yaff/pes/ext.pyx":705
 *         return truncation.switch3_get_width(self._c_trunc_scheme)
 * 
 *     width = property(_get_width)             # <<<<<<<<<<<<<<
 * 
 *     def get_log(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Switch3, __pyx_n_s_get_width); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_Switch3->tp_dict, __pyx_n_s_width, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_Switch3);

  /* "yaff/pes/ext.pyx":784
 *         return pair_pot.pair_pot_get_rcut(self._c_pair_pot)
 * 
 *     rcut = property(_get_rcut)             # <<<<<<<<<<<<<<
 * 
 *     cdef set_truncation(self, Truncation tr):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPot, __pyx_n_s_get_rcut); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPot->tp_dict, __pyx_n_s_rcut, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPot);

  /* "yaff/pes/ext.pyx":917
 *     cdef np.ndarray _c_sigmas
 *     cdef np.ndarray _c_epsilons
 *     name = 'lj'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJ->tp_dict, __pyx_n_s_name, __pyx_n_s_lj) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJ);

  /* "yaff/pes/ext.pyx":947
 *         return self._c_sigmas.view()
 * 
 *     sigmas = property(_get_sigmas)             # <<<<<<<<<<<<<<
 * 
 *     def _get_epsilons(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJ, __pyx_n_s_get_sigmas); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJ->tp_dict, __pyx_n_s_sigmas, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJ);

  /* "yaff/pes/ext.pyx":953
 *         return self._c_epsilons.view()
 * 
 *     epsilons = property(_get_epsilons)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJ, __pyx_n_s_get_epsilons); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJ->tp_dict, __pyx_n_s_epsilons, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 953; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJ);

  /* "yaff/pes/ext.pyx":997
 *     cdef np.ndarray _c_epsilons
 *     cdef np.ndarray _c_onlypaulis
 *     name = 'mm3'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] sigmas,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3->tp_dict, __pyx_n_s_name, __pyx_n_s_mm3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotMM3);

  /* "yaff/pes/ext.pyx":1031
 *         return self._c_sigmas.view()
 * 
 *     sigmas = property(_get_sigmas)             # <<<<<<<<<<<<<<
 * 
 *     def _get_epsilons(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3, __pyx_n_s_get_sigmas); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3->tp_dict, __pyx_n_s_sigmas, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotMM3);

  /* "yaff/pes/ext.pyx":1037
 *         return self._c_epsilons.view()
 * 
 *     epsilons = property(_get_epsilons)             # <<<<<<<<<<<<<<
 * 
 *     def _get_onlypaulis(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3, __pyx_n_s_get_epsilons); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3->tp_dict, __pyx_n_s_epsilons, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotMM3);

  /* "yaff/pes/ext.pyx":1043
 *         return self._c_onlypaulis.view()
 * 
 *     onlypaulis = property(_get_onlypaulis)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3, __pyx_n_s_get_onlypaulis); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotMM3->tp_dict, __pyx_n_s_onlypaulis, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotMM3);

  /* "yaff/pes/ext.pyx":1049
 *     cdef np.ndarray _c_r0
 *     cdef np.ndarray _c_c6
 *     name = 'grimme'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] r0,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme->tp_dict, __pyx_n_s_name, __pyx_n_s_grimme) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1049; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme);

  /* "yaff/pes/ext.pyx":1076
 *         return self._c_r0.view()
 * 
 *     r0 = property(_get_r0)             # <<<<<<<<<<<<<<
 * 
 *     def _get_c6(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme, __pyx_n_s_get_r0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme->tp_dict, __pyx_n_s_r0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme);

  /* "yaff/pes/ext.pyx":1081
 *         return self._c_c6.view()
 * 
 *     c6 = property(_get_c6)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme, __pyx_n_s_get_c6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme->tp_dict, __pyx_n_s_c6, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotGrimme);

  /* "yaff/pes/ext.pyx":1151
 *     cdef np.ndarray _c_amp_cross
 *     cdef np.ndarray _c_b_cross
 *     name = 'exprep'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep->tp_dict, __pyx_n_s_name, __pyx_n_s_exprep) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep);

  /* "yaff/pes/ext.pyx":1235
 *         return self._c_amp_cross.view()
 * 
 *     amp_cross = property(_get_amp_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_b_cross(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep, __pyx_n_s_get_amp_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep->tp_dict, __pyx_n_s_amp_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep);

  /* "yaff/pes/ext.pyx":1241
 *         return self._c_b_cross.view()
 * 
 *     b_cross = property(_get_b_cross)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep, __pyx_n_s_get_b_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep->tp_dict, __pyx_n_s_b_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotExpRep);

  /* "yaff/pes/ext.pyx":1283
 *     cdef np.ndarray _c_eps_cross
 *     cdef np.ndarray _c_sig_cross
 *     name = 'ljcross'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross->tp_dict, __pyx_n_s_name, __pyx_n_s_ljcross) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross);

  /* "yaff/pes/ext.pyx":1325
 *         return self._c_eps_cross.view()
 * 
 *     eps_cross = property(_get_eps_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_sig_cross(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross, __pyx_n_s_get_eps_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross->tp_dict, __pyx_n_s_eps_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross);

  /* "yaff/pes/ext.pyx":1331
 *         return self._c_sig_cross.view()
 * 
 *     sig_cross = property(_get_sig_cross)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross, __pyx_n_s_get_sig_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross->tp_dict, __pyx_n_s_sig_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotLJCross);

  /* "yaff/pes/ext.pyx":1394
 *     cdef np.ndarray _c_c6_cross
 *     cdef np.ndarray _c_b_cross
 *     name = 'dampdisp'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp->tp_dict, __pyx_n_s_name, __pyx_n_s_dampdisp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp);

  /* "yaff/pes/ext.pyx":1465
 *         return self._c_c6_cross.view()
 * 
 *     c6_cross = property(_get_c6_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_b_cross(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp, __pyx_n_s_get_c6_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp->tp_dict, __pyx_n_s_c6_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp);

  /* "yaff/pes/ext.pyx":1471
 *         return self._c_b_cross.view()
 * 
 *     b_cross = property(_get_b_cross)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp, __pyx_n_s_get_b_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp->tp_dict, __pyx_n_s_b_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDampDisp);

  /* "yaff/pes/ext.pyx":1533
 *     cdef np.ndarray _c_c8_cross
 *     cdef np.ndarray _c_R_cross
 *     name = 'disp68bjdamp'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[long, ndim=1] ffatype_ids not None,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_name, __pyx_n_s_disp68bjdamp) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1606
 *         return self._c_c6_cross.view()
 * 
 *     c6_cross = property(_get_c6_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_c8_cross(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_c6_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_c6_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1612
 *         return self._c_c8_cross.view()
 * 
 *     c8_cross = property(_get_c8_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_R_cross(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_c8_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_c8_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1618
 *         return self._c_R_cross.view()
 * 
 *     R_cross = property(_get_R_cross)             # <<<<<<<<<<<<<<
 * 
 *     def _get_c6_scale(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_R_cross); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_R_cross, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1624
 *         return pair_pot.pair_data_disp68bjdamp_get_c6_scale(self._c_pair_pot)
 * 
 *     c6_scale = property(_get_c6_scale)             # <<<<<<<<<<<<<<
 * 
 *     def _get_c8_scale(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_c6_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_c6_scale, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1630
 *         return pair_pot.pair_data_disp68bjdamp_get_c8_scale(self._c_pair_pot)
 * 
 *     c8_scale = property(_get_c8_scale)             # <<<<<<<<<<<<<<
 * 
 *     def _get_bj_a(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_c8_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_c8_scale, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1636
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_a(self._c_pair_pot)
 * 
 *     bj_a = property(_get_bj_a)             # <<<<<<<<<<<<<<
 * 
 *     def _get_bj_b(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_bj_a); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_bj_a, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1642
 *         return pair_pot.pair_data_disp68bjdamp_get_bj_b(self._c_pair_pot)
 * 
 *     bj_b = property(_get_bj_b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp, __pyx_n_s_get_bj_b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp->tp_dict, __pyx_n_s_bj_b, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotDisp68BJDamp);

  /* "yaff/pes/ext.pyx":1682
 *     cdef np.ndarray _c_charges
 *     cdef np.ndarray _c_radii
 *     name = 'ei'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges, double alpha,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI->tp_dict, __pyx_n_s_name, __pyx_n_s_ei) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEI);

  /* "yaff/pes/ext.pyx":1714
 *         return self._c_charges.view()
 * 
 *     charges = property(_get_charges)             # <<<<<<<<<<<<<<
 * 
 *     def _get_radii(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI, __pyx_n_s_get_charges); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI->tp_dict, __pyx_n_s_charges, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEI);

  /* "yaff/pes/ext.pyx":1720
 *         return self._c_radii.view()
 * 
 *     radii = property(_get_radii)             # <<<<<<<<<<<<<<
 * 
 *     def _get_alpha(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI, __pyx_n_s_get_radii); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI->tp_dict, __pyx_n_s_radii, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEI);

  /* "yaff/pes/ext.pyx":1726
 *         return pair_pot.pair_data_ei_get_alpha(self._c_pair_pot)
 * 
 *     alpha = property(_get_alpha)             # <<<<<<<<<<<<<<
 * 
 *     def _get_dielectric(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI, __pyx_n_s_get_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI->tp_dict, __pyx_n_s_alpha, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEI);

  /* "yaff/pes/ext.pyx":1732
 *         return pair_pot.pair_data_ei_get_dielectric(self._c_pair_pot)
 * 
 *     dielectric = property(_get_dielectric)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI, __pyx_n_s_get_dielectric); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEI->tp_dict, __pyx_n_s_dielectric, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEI);

  /* "yaff/pes/ext.pyx":1763
 *     cdef np.ndarray _c_radii
 *     cdef np.ndarray _c_radii2
 *     name = 'eidip'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] charges,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip->tp_dict, __pyx_n_s_name, __pyx_n_s_eidip) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip);

  /* "yaff/pes/ext.pyx":1819
 *         return self._c_charges.view()
 * 
 *     charges = property(_get_charges)             # <<<<<<<<<<<<<<
 * 
 *     def _get_dipoles(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip, __pyx_n_s_get_charges); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip->tp_dict, __pyx_n_s_charges, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip);

  /* "yaff/pes/ext.pyx":1825
 *         return self._c_dipoles.view()
 * 
 *     dipoles = property(_get_dipoles)             # <<<<<<<<<<<<<<
 * 
 *     def _get_alpha(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip, __pyx_n_s_get_dipoles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip->tp_dict, __pyx_n_s_dipoles, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip);

  /* "yaff/pes/ext.pyx":1831
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 * 
 *     alpha = property(_get_alpha)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip, __pyx_n_s_get_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip->tp_dict, __pyx_n_s_alpha, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEIDip);

  /* "yaff/pes/ext.pyx":1863
 *     cdef np.ndarray _c_slater1s_N
 *     cdef np.ndarray _c_slater1s_Z
 *     name = 'eislater1s1scorr'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr->tp_dict, __pyx_n_s_name, __pyx_n_s_eislater1s1scorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr);

  /* "yaff/pes/ext.pyx":1895
 *         return self._c_slater1s_widths.view()
 * 
 *     slater1s_widths = property(_get_slater1s_widths)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_N(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, __pyx_n_s_get_slater1s_widths); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr->tp_dict, __pyx_n_s_slater1s_widths, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr);

  /* "yaff/pes/ext.pyx":1901
 *         return self._c_slater1s_N.view()
 * 
 *     slater1s_N = property(_get_slater1s_N)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_Z(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, __pyx_n_s_get_slater1s_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr->tp_dict, __pyx_n_s_slater1s_N, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr);

  /* "yaff/pes/ext.pyx":1907
 *         return self._c_slater1s_Z.view()
 * 
 *     slater1s_Z = property(_get_slater1s_Z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr, __pyx_n_s_get_slater1s_Z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr->tp_dict, __pyx_n_s_slater1s_Z, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1s1sCorr);

  /* "yaff/pes/ext.pyx":1952
 *     cdef np.ndarray _c_slater1p_N
 *     cdef np.ndarray _c_slater1p_Z
 *     name = 'eislater1sp1spcorr'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_name, __pyx_n_s_eislater1sp1spcorr) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":1992
 *         return self._c_slater1s_widths.view()
 * 
 *     slater1s_widths = property(_get_slater1s_widths)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_N(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1s_widths); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1s_widths, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":1998
 *         return self._c_slater1s_N.view()
 * 
 *     slater1s_N = property(_get_slater1s_N)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_Z(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1s_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1s_N, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":2004
 *         return self._c_slater1s_Z.view()
 * 
 *     slater1s_Z = property(_get_slater1s_Z)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1p_widths(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1s_Z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1s_Z, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":2010
 *         return self._c_slater1p_widths.view()
 * 
 *     slater1p_widths = property(_get_slater1p_widths)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1p_N(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1p_widths); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1p_widths, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":2016
 *         return self._c_slater1p_N.view()
 * 
 *     slater1p_N = property(_get_slater1p_N)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1p_Z(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1p_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1p_N, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":2022
 *         return self._c_slater1p_Z.view()
 * 
 *     slater1p_Z = property(_get_slater1p_Z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr, __pyx_n_s_get_slater1p_Z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr->tp_dict, __pyx_n_s_slater1p_Z, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotEiSlater1sp1spCorr);

  /* "yaff/pes/ext.pyx":2064
 *     cdef np.ndarray _c_slater1s_widths
 *     cdef np.ndarray _c_slater1s_N
 *     name = 'olpslater1s1s'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_name, __pyx_n_s_olpslater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2100
 *         return self._c_slater1s_widths.view()
 * 
 *     slater1s_widths = property(_get_slater1s_widths)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_N(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_slater1s_widths); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_slater1s_widths, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2106
 *         return self._c_slater1s_N.view()
 * 
 *     slater1s_N = property(_get_slater1s_N)             # <<<<<<<<<<<<<<
 * 
 *     def _get_ex_scale(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_slater1s_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_slater1s_N, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2112
 *         return pair_pot.pair_data_olpslater1s1s_get_ex_scale(self._c_pair_pot)
 * 
 *     ex_scale = property(_get_ex_scale)             # <<<<<<<<<<<<<<
 * 
 *     def _get_corr_a(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_ex_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_ex_scale, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2118
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_a(self._c_pair_pot)
 * 
 *     corr_a = property(_get_corr_a)             # <<<<<<<<<<<<<<
 * 
 *     def _get_corr_b(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_corr_a); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_corr_a, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2124
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_b(self._c_pair_pot)
 * 
 *     corr_b = property(_get_corr_b)             # <<<<<<<<<<<<<<
 * 
 *     def _get_corr_c(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_corr_b); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_corr_b, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2130
 *         return pair_pot.pair_data_olpslater1s1s_get_corr_c(self._c_pair_pot)
 * 
 *     corr_c = property(_get_corr_c)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s, __pyx_n_s_get_corr_c); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s->tp_dict, __pyx_n_s_corr_c, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotOlpSlater1s1s);

  /* "yaff/pes/ext.pyx":2165
 *     cdef np.ndarray _c_slater1s_widths
 *     cdef np.ndarray _c_slater1s_N
 *     name = 'chargetransferslater1s1s'             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[double, ndim=1] slater1s_widths,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_name, __pyx_n_s_chargetransferslater1s1s) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2199
 *         return self._c_slater1s_widths.view()
 * 
 *     slater1s_widths = property(_get_slater1s_widths)             # <<<<<<<<<<<<<<
 * 
 *     def _get_slater1s_N(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, __pyx_n_s_get_slater1s_widths); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_slater1s_widths, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2205
 *         return self._c_slater1s_N.view()
 * 
 *     slater1s_N = property(_get_slater1s_N)             # <<<<<<<<<<<<<<
 * 
 *     def _get_ct_scale(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, __pyx_n_s_get_slater1s_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_slater1s_N, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2211
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_ct_scale(self._c_pair_pot)
 * 
 *     ct_scale = property(_get_ct_scale)             # <<<<<<<<<<<<<<
 * 
 *     def _get_width_power(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, __pyx_n_s_get_ct_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_ct_scale, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2217
 *         return pair_pot.pair_data_chargetransferslater1s1s_get_width_power(self._c_pair_pot)
 * 
 *     width_power = property(_get_width_power)             # <<<<<<<<<<<<<<
 * 
 *     def _get_alpha(self):
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, __pyx_n_s_get_width_power); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_width_power, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2223
 *         return pair_pot.pair_data_eidip_get_alpha(self._c_pair_pot)
 * 
 *     alpha = property(_get_alpha)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s, __pyx_n_s_get_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_builtin_property, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s->tp_dict, __pyx_n_s_alpha, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_4yaff_3pes_3ext_PairPotChargeTransferSlater1s1s);

  /* "yaff/pes/ext.pyx":2233
 * 
 * 
 * def compute_ewald_reci(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_17compute_ewald_reci, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_ewald_reci, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2337
 * 
 * 
 * def compute_ewald_reci_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_19compute_ewald_reci_dd, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_ewald_reci_dd, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2431
 * 
 * 
 * def compute_ewald_corr(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        Cell unitcell, double alpha,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_21compute_ewald_corr, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_ewald_corr, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2518
 *     )
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_23compute_ewald_corr_dd, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_ewald_corr_dd, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2592
 * 
 * 
 * def compute_ewald_corr_dd(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                        np.ndarray[double, ndim=1] charges,
 *                        np.ndarray[double, ndim=2] dipoles,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_25compute_ewald_corr_dd, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_ewald_corr_dd, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2671
 * 
 * 
 * def dlist_forward(np.ndarray[double, ndim=2] pos,             # <<<<<<<<<<<<<<
 *                   Cell unitcell,
 *                   np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_27dlist_forward, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dlist_forward, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2697
 *                         <dlist.dlist_row_type*>deltas.data, ndelta)
 * 
 * def dlist_back(np.ndarray[double, ndim=2] gpos,             # <<<<<<<<<<<<<<
 *                np.ndarray[double, ndim=2] vtens,
 *                np.ndarray[dlist.dlist_row_type, ndim=1] deltas, long ndelta):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_29dlist_back, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dlist_back, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2749
 * 
 * 
 * def iclist_forward(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                    np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''Compute internal coordinates based on relative vectors
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_31iclist_forward, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_iclist_forward, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2749; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2770
 *                           <iclist.iclist_row_type*>ictab.data, nic)
 * 
 * def iclist_back(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab, long nic):
 *     '''The back-propagation step in the internal coordinate list
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_33iclist_back, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_iclist_back, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2770; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2793
 * 
 * 
 * def iclist_jacobian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] jacobian, long nic):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_35iclist_jacobian, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_iclist_jacobian, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2821
 * 
 * 
 * def iclist_hessian(np.ndarray[dlist.dlist_row_type, ndim=1] deltas,             # <<<<<<<<<<<<<<
 *                 np.ndarray[iclist.iclist_row_type, ndim=1] ictab,
 *                 np.ndarray[double, ndim=2] hessian, long nic):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_37iclist_hessian, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_iclist_hessian, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2854
 * 
 * 
 * def vlist_forward(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                   np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''Computes valence energy terms based on a list of internal coordinates
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_39vlist_forward, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_vlist_forward, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2854; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2874
 *                                <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_back(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv):
 *     '''The back-propagation step in the valence list.
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_41vlist_back, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_vlist_back, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2897
 *                      <vlist.vlist_row_type*>vtab.data, nv)
 * 
 * def vlist_hessian(np.ndarray[iclist.iclist_row_type, ndim=1] ictab,             # <<<<<<<<<<<<<<
 *                np.ndarray[vlist.vlist_row_type, ndim=1] vtab, long nv,
 *                np.ndarray[double, ndim=2] hessian):
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_43vlist_hessian, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_vlist_hessian, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":2927
 * #
 * 
 * def compute_grid3d(np.ndarray[double, ndim=1] center, Cell unitcell, np.ndarray[double, ndim=3] egrid):             # <<<<<<<<<<<<<<
 *     assert center.flags['C_CONTIGUOUS']
 *     assert center.shape[0] == 3
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_4yaff_3pes_3ext_45compute_grid3d, NULL, __pyx_n_s_yaff_pes_ext); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_compute_grid3d, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "yaff/pes/ext.pyx":1
 * # -*- coding: utf-8 -*-             # <<<<<<<<<<<<<<
 * # YAFF is yet another force-field code
 * # Copyright (C) 2011 - 2013 Toon Verstraelen <Toon.Verstraelen@UGent.be>,
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/home/steven/lib/python/Cython-0.20dev-py2.7-linux-x86_64.egg/Cython/Includes/numpy/__init__.pxd":975
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init yaff.pes.ext", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init yaff.pes.ext");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CPYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1) /* First char was not a digit */
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count; /* Consume from buffer string */
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break; /* breaks both loops as ctx->enc_count == 0 */
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue; /* empty struct */
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        if (isspace(*ts))
            continue;
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
                return ts;
      case ' ':
      case 10:
      case 13:
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T': /* substruct */
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0; /* Erase processed last struct element */
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}': /* end of substruct; either repeat or move on */
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0; /* Erase processed last struct element */
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }        /* fall through */
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 's': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
        } else {
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_count = ctx->new_count;
          ctx->enc_packmode = ctx->new_packmode;
          ctx->enc_type = *ts;
          ctx->is_complex = got_Z;
        }
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (result) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_RaiseBufferFallbackError(void) {
  PyErr_SetString(PyExc_ValueError,
     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
        if (PyInstance_Check(type)) {
            type = (PyObject*) ((PyInstanceObject*)type)->in_class;
            Py_INCREF(type);
        } else {
            type = 0;
            PyErr_SetString(PyExc_TypeError,
                "raise: exception must be an old-style class or instance");
            goto raise_error;
        }
        #else
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_ass_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (PyErr_ExceptionMatches(PyExc_OverflowError))
                    PyErr_Clear();
                else
                    goto bad;
            }
        }
        return ms->sq_ass_slice(obj, cstart, cstop, value);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_ass_subscript))
#endif
    {
        int result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_COMPILING_IN_CPYTHON
        result = mp->mp_ass_subscript(obj, py_slice, value);
#else
        result = value ? PyObject_SetItem(obj, py_slice, value) : PyObject_DelItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object does not support slice %.10s",
        Py_TYPE(obj)->tp_name, value ? "assignment" : "deletion");
bad:
    return -1;
}

static CYTHON_INLINE long __Pyx_mod_long(long a, long b) {
    long r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

static CYTHON_INLINE long __Pyx_div_long(long a, long b) {
    long q = a / b;
    long r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
  #if PY_VERSION_HEX >= 0x02060000
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
  #endif
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
  #if PY_VERSION_HEX < 0x02060000
    if (obj->ob_type->tp_dict) {
        PyObject *getbuffer_cobj = PyObject_GetItem(
            obj->ob_type->tp_dict, __pyx_n_s_pyx_getbuffer);
        if (getbuffer_cobj) {
            getbufferproc func = (getbufferproc) PyCObject_AsVoidPtr(getbuffer_cobj);
            Py_DECREF(getbuffer_cobj);
            if (!func)
                goto fail;
            return func(obj, view, flags);
        } else {
            PyErr_Clear();
        }
    }
  #endif
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
#if PY_VERSION_HEX < 0x02060000
fail:
#endif
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
  #if PY_VERSION_HEX >= 0x02060000
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
  #endif
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) { __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view); return; }
  #if PY_VERSION_HEX < 0x02060000
    if (obj->ob_type->tp_dict) {
        PyObject *releasebuffer_cobj = PyObject_GetItem(
            obj->ob_type->tp_dict, __pyx_n_s_pyx_releasebuffer);
        if (releasebuffer_cobj) {
            releasebufferproc func = (releasebufferproc) PyCObject_AsVoidPtr(releasebuffer_cobj);
            Py_DECREF(releasebuffer_cobj);
            if (!func)
                goto fail;
            func(obj, view);
            return;
        } else {
            PyErr_Clear();
        }
    }
  #endif
    goto nofail;
#if PY_VERSION_HEX < 0x02060000
fail:
#endif
    PyErr_WriteUnraisable(obj);
nofail:
    Py_DECREF(obj);
    view->obj = NULL;
}
#endif /*  PY_MAJOR_VERSION < 3 */


        static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func)             \
    {                                                                     \
        func_type value = func(x);                                        \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                PyErr_SetString(PyExc_OverflowError,                      \
                    (is_unsigned && unlikely(value < zero)) ?             \
                    "can't convert negative value to " #target_type :     \
                    "value too large to convert to " #target_type);       \
                return (target_type) -1;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG)
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long) -1;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long) -1;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong)
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong)
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong)
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong)
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(unsigned long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong(value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong(value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong(value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Py_intptr_t) < sizeof(unsigned long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong(value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong(value);
        }
    } else {
        if (sizeof(Py_intptr_t) <= sizeof(long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(Py_intptr_t) <= sizeof(long long)) {
            return PyLong_FromLongLong(value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(unsigned long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong(value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong(value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong(value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong(value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif
static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *x) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, PyInt_AS_LONG)
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to Py_intptr_t");
                return (Py_intptr_t) -1;
            }
            return (Py_intptr_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(Py_intptr_t)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (Py_intptr_t) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to Py_intptr_t");
                return (Py_intptr_t) -1;
            }
            if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, PyLong_AsUnsignedLong)
            } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long long, PyLong_AsUnsignedLongLong)
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(Py_intptr_t)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(Py_intptr_t) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(Py_intptr_t) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (sizeof(Py_intptr_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, PyLong_AsLong)
            } else if (sizeof(Py_intptr_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(Py_intptr_t, long long, PyLong_AsLongLong)
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            Py_intptr_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (Py_intptr_t) -1;
        }
    } else {
        Py_intptr_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (Py_intptr_t) -1;
        val = __Pyx_PyInt_As_Py_intptr_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG)
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to int");
                return (int) -1;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(int)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (int) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to int");
                return (int) -1;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong)
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong)
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(int)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(int) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(int) ((PyLongObject*)x)->ob_digit[0];
                }
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong)
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong)
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif /*__PYX_DEFAULT_STRING_ENCODING_IS_ASCII*/
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else /* PY_VERSION_HEX < 0x03030000 */
        if (PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_DATA_SIZE(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
        return PyUnicode_AsUTF8AndSize(o, length);
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
#endif /* PY_VERSION_HEX < 0x03030000 */
    } else
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII  || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT */
#if PY_VERSION_HEX >= 0x02060000
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}


#endif /* Py_PYTHON_H */
